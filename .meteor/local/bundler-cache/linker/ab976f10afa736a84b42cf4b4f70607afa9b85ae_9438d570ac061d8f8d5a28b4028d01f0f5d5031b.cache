[{"type":"js","data":"/* Imports for global scope */\n\nMongoInternals = Package.mongo.MongoInternals;\nMongo = Package.mongo.Mongo;\nTracker = Package.tracker.Tracker;\nDeps = Package.tracker.Deps;\nECMAScript = Package.ecmascript.ECMAScript;\nValidatedMethod = Package['mdg:validated-method'].ValidatedMethod;\ncheck = Package.check.check;\nMatch = Package.check.Match;\nAccounts = Package['accounts-base'].Accounts;\nPublishEndpoint = Package['peerlibrary:middleware'].PublishEndpoint;\nPublishMiddleware = Package['peerlibrary:middleware'].PublishMiddleware;\nRoles = Package['alanning:roles'].Roles;\nMeteor = Package.meteor.Meteor;\nglobal = Package.meteor.global;\nmeteorEnv = Package.meteor.meteorEnv;\nWebApp = Package.webapp.WebApp;\nWebAppInternals = Package.webapp.WebAppInternals;\nmain = Package.webapp.main;\nDDP = Package['ddp-client'].DDP;\nDDPServer = Package['ddp-server'].DDPServer;\nLaunchScreen = Package['launch-screen'].LaunchScreen;\nmeteorInstall = Package.modules.meteorInstall;\nPromise = Package.promise.Promise;\nAutoupdate = Package.autoupdate.Autoupdate;\n\n","servePath":"/global-imports.js"},{"type":"js","data":"var require = meteorInstall({\"imports\":{\"startup\":{\"server\":{\"utilities\":{\"ResponseMessage.js\":function module(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                             //\n// imports/startup/server/utilities/ResponseMessage.js                                                         //\n//                                                                                                             //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                               //\nmodule.export({\n  ResponseMessage: () => ResponseMessage\n});\n\nclass ResponseMessage {\n  constructor() {\n    this.message = null;\n    this.description = null;\n    this.data = null;\n  }\n\n  create(message) {\n    let description = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    let data = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n    this.message = message;\n    this.description = description;\n    this.data = data;\n  }\n\n}\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"Permissions.js\":function module(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                             //\n// imports/startup/server/Permissions.js                                                                       //\n//                                                                                                             //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                               //\nmodule.export({\n  permissionsArray: () => permissionsArray\n});\nconst Permissions = {\n  USERS: {\n    LIST: {\n      VALUE: 'users-view',\n      TEXT: 'Listar usuarios'\n    },\n    CREATE: {\n      VALUE: 'users-create',\n      TEXT: 'Crear usuario'\n    },\n    Update: {\n      VALUE: 'users-edit',\n      TEXT: 'Actualizar usuario'\n    },\n    DELETE: {\n      VALUE: 'users-delete',\n      TEXT: 'Eliminar usuario'\n    }\n  }\n};\nconst permissionsArray = Object.keys(Permissions).reduce((accumulator, systemModuleName) => {\n  const systemModuleObject = Permissions[systemModuleName];\n  const modulePermissions = Object.keys(systemModuleObject).map(permission => systemModuleObject[permission]);\n  return accumulator.concat(modulePermissions);\n}, []);\n\nif (Meteor.isDevelopment) {\n  if (Meteor.settings.private && Meteor.settings.private.REFRESH_PERMISSIONS) {\n    console.log('uplading permissions. . .');\n    const currentRoles = Roles.getAllRoles().fetch();\n\n    for (let permission of permissionsArray) {\n      if (!currentRoles.find(_role => _role._id === permission.VALUE)) {\n        Roles.createRole(permission.VALUE);\n      }\n\n      Meteor.roles.update(permission.VALUE, {\n        $set: {\n          publicName: permission.TEXT\n        }\n      });\n    }\n  }\n}\n\nmodule.exportDefault(Permissions);\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"index.js\":function module(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                             //\n// imports/startup/server/index.js                                                                             //\n//                                                                                                             //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                               //\nmodule.link(\"./Permissions\");\nmodule.link(\"../../api/Users/UsersCtrl\");\nmodule.link(\"../../api/Users/UsersPubs\");\nmodule.link(\"../../api/Profiles/ProfileSeeder\");\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}}},\"api\":{\"Profiles\":{\"Profile.js\":function module(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                             //\n// imports/api/Profiles/Profile.js                                                                             //\n//                                                                                                             //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                               //\nmodule.export({\n  Profile: () => Profile\n});\nlet Mongo;\nmodule.link(\"meteor/mongo\", {\n  Mongo(v) {\n    Mongo = v;\n  }\n\n}, 0);\nconst Profile = new Mongo.Collection('profiles');\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"ProfileSeeder.js\":function module(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                             //\n// imports/api/Profiles/ProfileSeeder.js                                                                       //\n//                                                                                                             //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                               //\nmodule.export({\n  StaticProfiles: () => StaticProfiles\n});\nlet Permissions, permissionsArray;\nmodule.link(\"../../startup/server/Permissions\", {\n  default(v) {\n    Permissions = v;\n  },\n\n  permissionsArray(v) {\n    permissionsArray = v;\n  }\n\n}, 0);\nlet Profile;\nmodule.link(\"./Profile\", {\n  Profile(v) {\n    Profile = v;\n  }\n\n}, 1);\nconst StaticProfiles = {\n  admin: {\n    name: 'admin',\n    description: 'Administrador',\n    permissions: permissionsArray.map(p => p.VALUE)\n  }\n};\n\nif (Meteor.isDevelopment) {\n  if (Meteor.settings.private && Meteor.settings.private.REFRESH_STATIC_PROFILES) {\n    console.log('updating static profiles. . .');\n    Object.keys(StaticProfiles).forEach(staticProfileName => {\n      Profile.upsert({\n        name: StaticProfiles[staticProfileName].name\n      }, {\n        $set: {\n          description: StaticProfiles[staticProfileName].description,\n          permissions: StaticProfiles[staticProfileName].permissions\n        }\n      });\n      Meteor.users.find({\n        'profile.profile': StaticProfiles[staticProfileName].name\n      }).fetch().forEach(user => {\n        Meteor.roleAssignment.remove({\n          'user._id': user._id\n        });\n\n        if (StaticProfiles[staticProfileName].permissions.length > 0) {\n          Roles.setUserRoles(user._id, StaticProfiles[staticProfileName].permissions, StaticProfiles[staticProfileName].name);\n        }\n      });\n    });\n  }\n}\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"Users\":{\"UsersCtrl.js\":function module(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                             //\n// imports/api/Users/UsersCtrl.js                                                                              //\n//                                                                                                             //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                               //\nlet ValidatedMethod;\nmodule.link(\"meteor/mdg:validated-method\", {\n  ValidatedMethod(v) {\n    ValidatedMethod = v;\n  }\n\n}, 0);\nlet check, Match;\nmodule.link(\"meteor/check\", {\n  check(v) {\n    check = v;\n  },\n\n  Match(v) {\n    Match = v;\n  }\n\n}, 1);\nlet ResponseMessage;\nmodule.link(\"../../startup/server/utilities/ResponseMessage\", {\n  ResponseMessage(v) {\n    ResponseMessage = v;\n  }\n\n}, 2);\nlet UsersServ;\nmodule.link(\"./UsersServ\", {\n  default(v) {\n    UsersServ = v;\n  }\n\n}, 3);\nnew ValidatedMethod({\n  name: 'user.save',\n\n  validate(user) {\n    try {\n      check(user, {\n        _id: Match.OneOf(String, null),\n        username: String,\n        emails: [{\n          address: String,\n          verified: Boolean\n        }],\n        profile: {\n          profile: String,\n          name: String,\n          path: Match.OneOf(String, null)\n        }\n      });\n    } catch (error) {\n      console.log('save.user', error);\n      throw new Meteor.Error('403', 'La informacion introducida no es valida');\n    }\n\n    UsersServ.validateEmail(user.emails[0].address, user._id);\n    UsersServ.validateUsername(user.username, user._id);\n  },\n\n  run(user) {\n    const responseMessage = new ResponseMessage();\n\n    if (user._id !== null) {\n      try {\n        // UPDATE USER \n        UsersServ.updateUser(user);\n        responseMessage.create('Se actualizo el usuario exitosamente');\n      } catch (error) {\n        console.error('user.save', error);\n        throw new Meteor.Error('500', 'Ocurrio un error al actualizar el usuario');\n      }\n    } else {\n      try {\n        // CREATE USER\n        UsersServ.createUser(user);\n        responseMessage.create('Se ha creado usuario exitosamente');\n      } catch (error) {\n        console.error('user.save: ', error);\n        throw new Meteor.Error('500', 'Ocurrió un error al crear un usuario');\n      }\n    }\n\n    return responseMessage;\n  }\n\n});\nnew ValidatedMethod({\n  name: 'user.delete',\n\n  validate(_ref) {\n    let {\n      idUser\n    } = _ref;\n\n    try {\n      check(idUser, String);\n    } catch (error) {\n      console.error('user.delete', error);\n      throw new Meteor.Error('403', 'La informacion introducida no es valida');\n    }\n  },\n\n  run(_ref2) {\n    let {\n      idUser\n    } = _ref2;\n    const responseMessage = new ResponseMessage();\n\n    try {\n      Meteor.users.remove(idUser);\n      responseMessage.create('Se ha eliminado exitosamente al usuario');\n    } catch (error) {\n      console.error('user.delete', error);\n      throw new Meteor.Error('500', 'Ocurrio un error al eliminar un usuario');\n    }\n\n    return responseMessage;\n  }\n\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"UsersPubs.js\":function module(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                             //\n// imports/api/Users/UsersPubs.js                                                                              //\n//                                                                                                             //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                               //\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet PublishEndpoint;\nmodule.link(\"meteor/peerlibrary:middleware\", {\n  PublishEndpoint(v) {\n    PublishEndpoint = v;\n  }\n\n}, 1);\nnew PublishEndpoint('user.list', function () {\n  return Meteor.users.find({}, {\n    sort: {\n      createdAt: -1\n    },\n    limit: 1\n  });\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"UsersServ.js\":function module(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                             //\n// imports/api/Users/UsersServ.js                                                                              //\n//                                                                                                             //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                               //\nmodule.exportDefault({\n  validateEmail(newEmail, idUser) {\n    const existEmail = Accounts.findUserByEmail(newEmail);\n\n    if (idUser) {\n      const oldUser = Meteor.users.findOne(idUser);\n\n      if (oldUser.emails[0].address !== newEmail && existEmail) {\n        throw new Meteor.Error('403', 'El nuevo email ya se encuentra en uso');\n      }\n    } else if (existEmail) {\n      throw new Meteor.Error('403', 'El nuevo email ya se encuetra en uso');\n    }\n  },\n\n  validateUsername(newUsername, idUser) {\n    const existUsername = Accounts.findUserByUsername(newUsername);\n\n    if (idUser) {\n      const oldUser = Meteor.users.findOne(idUser);\n\n      if (oldUser.username !== newUsername && existUsername) {\n        throw new Meteor.Error('403', \"El nuevo nombre de usuario ya se encuentra en uso\");\n      }\n    } else if (existUsername) {\n      throw new Meteor.Error('403', \"El nombre de usuario ya se encuentra en uso\");\n    }\n  },\n\n  createUser(user) {\n    Accounts.createUser({\n      username: user.username,\n      email: user.emails[0].address,\n      profile: user.profile\n    });\n  },\n\n  updateUser(user) {\n    const currentUser = Meteor.users.findOne(user._id);\n\n    if (currentUser.emails[0].address !== user.emails[0].address) {\n      Accounts.removeEmail(currentUser._id, currentUser.emails[0].address);\n      Accounts.addEmail(currentUser._id, user.emails[0].address);\n    }\n\n    if (currentUser.username !== user.username) {\n      Accounts.setUsername(currentUser._id, user.username);\n    }\n\n    Meteor.users.update(user._id, {\n      $set: {\n        profile: {\n          profile: user.profile.profile,\n          name: user.profile.name,\n          path: user.profile.path\n        }\n      }\n    });\n  }\n\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}}}},\"server\":{\"main.js\":function module(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                             //\n// server/main.js                                                                                              //\n//                                                                                                             //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                               //\nmodule.link(\"/imports/startup/server\");\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}}},{\n  \"extensions\": [\n    \".js\",\n    \".json\",\n    \".mjs\",\n    \".ts\",\n    \".vue\"\n  ]\n});\n\nvar exports = require(\"/server/main.js\");","hash":"38dd03c1872c346315a400566aa2f954227a5cd2","servePath":"/app.js","sourceMap":{"version":3,"sources":["imports/startup/server/utilities/ResponseMessage.js","imports/startup/server/Permissions.js","imports/startup/server/index.js","imports/api/Profiles/Profile.js","imports/api/Profiles/ProfileSeeder.js","imports/api/Users/UsersCtrl.js","imports/api/Users/UsersPubs.js","imports/api/Users/UsersServ.js","server/main.js"],"names":["module","export","ResponseMessage","constructor","message","description","data","create","permissionsArray","Permissions","USERS","LIST","VALUE","TEXT","CREATE","Update","DELETE","Object","keys","reduce","accumulator","systemModuleName","systemModuleObject","modulePermissions","map","permission","concat","Meteor","isDevelopment","settings","private","REFRESH_PERMISSIONS","console","log","currentRoles","Roles","getAllRoles","fetch","find","_role","_id","createRole","roles","update","$set","publicName","exportDefault","link","Profile","Mongo","v","Collection","StaticProfiles","default","admin","name","permissions","p","REFRESH_STATIC_PROFILES","forEach","staticProfileName","upsert","users","user","roleAssignment","remove","length","setUserRoles","ValidatedMethod","check","Match","UsersServ","validate","OneOf","String","username","emails","address","verified","Boolean","profile","path","error","Error","validateEmail","validateUsername","run","responseMessage","updateUser","createUser","idUser","PublishEndpoint","sort","createdAt","limit","newEmail","existEmail","Accounts","findUserByEmail","oldUser","findOne","newUsername","existUsername","findUserByUsername","email","currentUser","removeEmail","addEmail","setUsername"],"mappings":"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","file":"/app.js","sourcesContent":["export class ResponseMessage {\r\n    constructor(){\r\n        this.message = null;\r\n        this.description = null;\r\n        this.data = null;\r\n    }\r\n    \r\n    create(message, description = null, data = null){\r\n        this.message = message;\r\n        this.description = description;\r\n        this.data = data;\r\n    }\r\n}","const Permissions = {\r\n    USERS: {\r\n        LIST: {VALUE: 'users-view', TEXT: 'Listar usuarios'},\r\n        CREATE: {VALUE: 'users-create', TEXT: 'Crear usuario'},\r\n        Update: {VALUE: 'users-edit', TEXT: 'Actualizar usuario'},\r\n        DELETE: {VALUE: 'users-delete', TEXT: 'Eliminar usuario'}\r\n    }\r\n};\r\n\r\nexport const permissionsArray = Object.keys(Permissions).reduce((accumulator, systemModuleName) => {\r\n    const systemModuleObject = Permissions[systemModuleName];\r\n    const modulePermissions = Object.keys(systemModuleObject).map(permission => systemModuleObject[permission]);\r\n    return accumulator.concat(modulePermissions);\r\n}, []);\r\n\r\nif (Meteor.isDevelopment) {\r\n    if (Meteor.settings.private && Meteor.settings.private.REFRESH_PERMISSIONS) {\r\n        console.log('uplading permissions. . .');\r\n        const currentRoles = Roles.getAllRoles().fetch();\r\n        for (let permission of permissionsArray) {\r\n            if (!currentRoles.find(_role => _role._id === permission.VALUE)) {\r\n                Roles.createRole(permission.VALUE);\r\n            }\r\n            Meteor.roles.update(permission.VALUE, {\r\n                $set: {\r\n                    publicName: permission.TEXT\r\n                }\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\nexport default Permissions;","import './Permissions';\r\n\r\nimport '../../api/Users/UsersCtrl';\r\nimport '../../api/Users/UsersPubs'; \r\n\r\nimport '../../api/Profiles/ProfileSeeder';","import {Mongo} from 'meteor/mongo';\r\n\r\nexport const Profile = new Mongo.Collection('profiles');","import Permissions, {permissionsArray} from \"../../startup/server/Permissions\"\r\nimport { Profile } from \"./Profile\";\r\n\r\nexport const StaticProfiles = {\r\n    admin: {\r\n        name: 'admin',\r\n        description: 'Administrador',\r\n        permissions: permissionsArray.map(p=>p.VALUE)\r\n    }\r\n};\r\n\r\nif (Meteor.isDevelopment) {\r\n    if (Meteor.settings.private && Meteor.settings.private.REFRESH_STATIC_PROFILES) {\r\n        console.log('updating static profiles. . .');\r\n        Object.keys(StaticProfiles).forEach(staticProfileName => {\r\n            Profile.upsert({name: StaticProfiles[staticProfileName].name}, {\r\n                $set: {\r\n                    description: StaticProfiles[staticProfileName].description,\r\n                    permissions: StaticProfiles[staticProfileName].permissions,\r\n                }\r\n            });\r\n            Meteor.users.find({ 'profile.profile': StaticProfiles[staticProfileName].name}).fetch().forEach(user => {\r\n                Meteor.roleAssignment.remove({'user._id': user._id});\r\n                if (StaticProfiles[staticProfileName].permissions.length > 0) {\r\n                    Roles.setUserRoles(user._id, StaticProfiles[staticProfileName].permissions, StaticProfiles[staticProfileName].name);\r\n                }\r\n            })\r\n        });\r\n    }\r\n}","import {ValidatedMethod} from 'meteor/mdg:validated-method';\r\nimport {check, Match} from 'meteor/check';\r\nimport { ResponseMessage } from '../../startup/server/utilities/ResponseMessage';\r\nimport UsersServ from './UsersServ';\r\n\r\nnew ValidatedMethod ({\r\n    name: 'user.save',\r\n    validate(user){\r\n        try {\r\n            check(user, {\r\n                _id: Match.OneOf(String, null),\r\n                username: String,\r\n                emails: [{address: String, verified: Boolean}],\r\n                profile: {\r\n                    profile: String,\r\n                    name: String,\r\n                    path: Match.OneOf(String, null)\r\n                }\r\n            })\r\n        } catch (error) {\r\n            console.log('save.user', error);\r\n            throw new Meteor.Error('403', 'La informacion introducida no es valida');\r\n        }\r\n        UsersServ.validateEmail(user.emails[0].address, user._id);\r\n        UsersServ.validateUsername(user.username, user._id);\r\n    },\r\n    run(user){\r\n        const responseMessage = new ResponseMessage();\r\n        if (user._id !== null) {\r\n            try {\r\n                // UPDATE USER \r\n                UsersServ.updateUser(user);\r\n                responseMessage.create('Se actualizo el usuario exitosamente');\r\n            } catch (error) {\r\n                console.error('user.save', error);\r\n                throw new Meteor.Error('500', 'Ocurrio un error al actualizar el usuario');\r\n            }\r\n        } else {\r\n            try {\r\n                // CREATE USER\r\n                UsersServ.createUser(user);\r\n                responseMessage.create('Se ha creado usuario exitosamente');\r\n            } catch (error) {\r\n                console.error('user.save: ', error);\r\n                throw new Meteor.Error('500', 'Ocurrió un error al crear un usuario');\r\n            }\r\n        }\r\n        return responseMessage;\r\n    }\r\n});\r\n\r\nnew ValidatedMethod({\r\n    name: 'user.delete',\r\n    validate({idUser}){\r\n        try {\r\n            check(idUser, String);\r\n        } catch (error) {\r\n            console.error('user.delete', error);\r\n            throw new Meteor.Error('403', 'La informacion introducida no es valida');\r\n        }\r\n    },\r\n    run({idUser}){\r\n        const responseMessage = new ResponseMessage;\r\n        try {\r\n            Meteor.users.remove(idUser);\r\n            responseMessage.create('Se ha eliminado exitosamente al usuario');\r\n        } catch (error) {\r\n            console.error('user.delete', error);\r\n            throw new Meteor.Error('500', 'Ocurrio un error al eliminar un usuario');\r\n        }\r\n        return responseMessage;\r\n    }\r\n});","import {Meteor} from 'meteor/meteor';\r\nimport {PublishEndpoint} from 'meteor/peerlibrary:middleware';\r\n\r\nnew PublishEndpoint('user.list', function() {\r\n    return Meteor.users.find({}, {\r\n        sort: {createdAt: -1},\r\n        limit: 1\r\n    });\r\n});","export default {\r\n    validateEmail(newEmail, idUser){\r\n        const existEmail = Accounts.findUserByEmail(newEmail);\r\n        if (idUser) {\r\n            const oldUser = Meteor.users.findOne(idUser);\r\n            if (oldUser.emails[0].address !== newEmail && existEmail) {\r\n                throw new Meteor.Error('403', 'El nuevo email ya se encuentra en uso');\r\n            }\r\n        } else if (existEmail) {\r\n            throw new Meteor.Error('403', 'El nuevo email ya se encuetra en uso');\r\n        }\r\n    },\r\n    validateUsername(newUsername, idUser){\r\n        const existUsername = Accounts.findUserByUsername(newUsername);\r\n        if (idUser) {\r\n            const oldUser = Meteor.users.findOne(idUser);\r\n            if (oldUser.username !== newUsername && existUsername) {\r\n                throw new Meteor.Error('403', \"El nuevo nombre de usuario ya se encuentra en uso\");\r\n            }\r\n        } else if (existUsername) {\r\n            throw new Meteor.Error('403', \"El nombre de usuario ya se encuentra en uso\");\r\n        }\r\n    },\r\n    createUser(user){\r\n        Accounts.createUser({\r\n            username: user.username,\r\n            email: user.emails[0].address,\r\n            profile: user.profile\r\n        });\r\n    },\r\n    updateUser(user){\r\n        const currentUser = Meteor.users.findOne(user._id);\r\n        if (currentUser.emails[0].address !== user.emails[0].address) {\r\n            Accounts.removeEmail(currentUser._id, currentUser.emails[0].address);\r\n            Accounts.addEmail(currentUser._id, user.emails[0].address);\r\n        }\r\n        if (currentUser.username !== user.username) {\r\n            Accounts.setUsername(currentUser._id, user.username);\r\n        }\r\n        Meteor.users.update(user._id, {\r\n            $set: {\r\n                profile: {\r\n                    profile: user.profile.profile,\r\n                    name: user.profile.name,\r\n                    path: user.profile.path\r\n                }\r\n            }\r\n        });\r\n    }\r\n}","import \"/imports/startup/server\";"]}}]