[{"type":"js","data":"//////////////////////////////////////////////////////////////////////////\n//                                                                      //\n// This is a generated file. You can view the original                  //\n// source in your browser if your browser supports source maps.         //\n// Source maps are supported by all recent versions of Chrome, Safari,  //\n// and Firefox, and by Internet Explorer 11.                            //\n//                                                                      //\n//////////////////////////////////////////////////////////////////////////\n\n\n(function () {\n\n/* Imports */\nvar Meteor = Package.meteor.Meteor;\nvar global = Package.meteor.global;\nvar meteorEnv = Package.meteor.meteorEnv;\nvar Mongo = Package.mongo.Mongo;\nvar Collection2 = Package['aldeed:collection2'].Collection2;\nvar CollectionHooks = Package['matb33:collection-hooks'].CollectionHooks;\nvar meteorInstall = Package.modules.meteorInstall;\nvar meteorBabelHelpers = Package.modules.meteorBabelHelpers;\nvar Promise = Package.promise.Promise;\nvar Symbol = Package['ecmascript-runtime-client'].Symbol;\nvar Map = Package['ecmascript-runtime-client'].Map;\nvar Set = Package['ecmascript-runtime-client'].Set;\n\nvar require = meteorInstall({\"node_modules\":{\"meteor\":{\"socialize:linkable-model\":{\"common\":{\"common.js\":function module(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// packages/socialize_linkable-model/common/common.js                                                                //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\nmodule.export({\n  LinkableModel: function () {\n    return LinkableModel;\n  },\n  LinkParent: function () {\n    return LinkParent;\n  }\n});\nvar BaseModel;\nmodule.link(\"meteor/socialize:base-model\", {\n  BaseModel: function (v) {\n    BaseModel = v;\n  }\n}, 0);\nvar LinkParentConstruct;\nmodule.link(\"./link-parent.js\", {\n  \"default\": function (v) {\n    LinkParentConstruct = v;\n  }\n}, 1);\nvar LinkableModelConstruct;\nmodule.link(\"./linkable-model.js\", {\n  \"default\": function (v) {\n    LinkableModelConstruct = v;\n  }\n}, 2);\nvar LinkParent = LinkParentConstruct(BaseModel);\nvar LinkableModel = LinkableModelConstruct();\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"link-parent.js\":function module(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// packages/socialize_linkable-model/common/link-parent.js                                                           //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\nvar _inheritsLoose;\n\nmodule.link(\"@babel/runtime/helpers/inheritsLoose\", {\n  default: function (v) {\n    _inheritsLoose = v;\n  }\n}, 0);\nmodule.exportDefault(function (BaseModel) {\n  return (\n    /*#__PURE__*/\n\n    /**\n    * A Model that is linked to by LinkableModel's\n    * @class LinkedModel\n    */\n    function (_BaseModel) {\n      _inheritsLoose(LinkParent, _BaseModel);\n\n      function LinkParent() {\n        return _BaseModel.apply(this, arguments) || this;\n      }\n\n      var _proto = LinkParent.prototype;\n\n      _proto.getLinkObject = function () {\n        function getLinkObject() {\n          return {\n            linkedObjectId: this._id,\n            objectType: this._objectType\n          };\n        }\n\n        return getLinkObject;\n      }();\n\n      return LinkParent;\n    }(BaseModel)\n  );\n});\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"linkable-model.js\":function module(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// packages/socialize_linkable-model/common/linkable-model.js                                                        //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\nvar _inheritsLoose;\n\nmodule.link(\"@babel/runtime/helpers/inheritsLoose\", {\n  default: function (v) {\n    _inheritsLoose = v;\n  }\n}, 0);\nvar SimpleSchema;\nmodule.link(\"simpl-schema\", {\n  \"default\": function (v) {\n    SimpleSchema = v;\n  }\n}, 0);\nmodule.exportDefault(function () {\n  // a place to store references to the collections where the commentable objects are stored.\n  var LinkableTypes = {};\n  /**\n  * A scaffold for creating models which can link records from one collection to records from many other collections\n  * @mixin LinkableModel\n  */\n\n  var LinkableModel = function (Base) {\n    return /*#__PURE__*/function (_Base) {\n      _inheritsLoose(_class, _Base);\n\n      function _class() {\n        return _Base.apply(this, arguments) || this;\n      }\n\n      var _proto = _class.prototype;\n\n      /**\n      * getCollectionForParentLink - Get the collection for the ParentLink\n      *\n      * @return {Mongo.Collection} The Collection attached to the ParentLink\n      */\n      _proto.getCollectionForParentLink = function () {\n        function getCollectionForParentLink() {\n          return LinkableTypes[this.objectType];\n        }\n\n        return getCollectionForParentLink;\n      }()\n      /**\n      * linkedObject - Get the model for the linked record\n      *\n      * @return {Model}  A model of varying types depending on the linked objects type\n      */\n      ;\n\n      _proto.linkedParent = function () {\n        function linkedParent() {\n          var collection = this.getCollectionForParentLink();\n          return collection.findOne({\n            _id: this.linkedObjectId\n          });\n        }\n\n        return linkedParent;\n      }();\n\n      return _class;\n    }(Base);\n  };\n  /**\n  * Register a data type that can be linked to another model, storing its collection so we can find the object later\n  * @param {BaseModel}           type       The name of the type\n  * @param {Mongo.Collection} collection The collection where the type of data is stored\n  */\n\n\n  LinkableModel.registerParentModel = function () {\n    function registerParentModel(model) {\n      var type = model.prototype.getCollectionName();\n      model.prototype._objectType = type; // eslint-disable-line\n\n      LinkableTypes[type] = model.prototype.getCollection();\n    }\n\n    return registerParentModel;\n  }();\n\n  LinkableModel.LinkableSchema = new SimpleSchema({\n    linkedObjectId: {\n      type: String,\n      regEx: SimpleSchema.RegEx.Id,\n      index: 1\n    },\n    objectType: {\n      type: String,\n      denyUpdate: true\n    }\n  });\n  return LinkableModel;\n});\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}}}}}},{\n  \"extensions\": [\n    \".js\",\n    \".json\"\n  ]\n});\n\nvar exports = require(\"/node_modules/meteor/socialize:linkable-model/common/common.js\");\n\n/* Exports */\nPackage._define(\"socialize:linkable-model\", exports);\n\n})();\n","servePath":"/packages/socialize_linkable-model.js","sourceMap":{"version":3,"sources":["packages/socialize:linkable-model/common/common.js","packages/socialize:linkable-model/common/link-parent.js","packages/socialize:linkable-model/common/linkable-model.js"],"names":["module","export","LinkableModel","LinkParent","BaseModel","link","v","LinkParentConstruct","LinkableModelConstruct","_inheritsLoose","default","exportDefault","getLinkObject","linkedObjectId","_id","objectType","_objectType","SimpleSchema","LinkableTypes","Base","getCollectionForParentLink","linkedParent","collection","findOne","registerParentModel","model","type","prototype","getCollectionName","getCollection","LinkableSchema","String","regEx","RegEx","Id","index","denyUpdate"],"mappings":"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","file":"/packages/socialize_linkable-model.js","sourcesContent":["/* eslint-disable import/no-unresolved */\nimport { BaseModel } from 'meteor/socialize:base-model';\n/* eslint-enable import/no-unresolved */\n\nimport LinkParentConstruct from './link-parent.js';\nimport LinkableModelConstruct from './linkable-model.js';\n\nconst LinkParent = LinkParentConstruct(BaseModel);\nconst LinkableModel = LinkableModelConstruct();\n\nexport { LinkableModel, LinkParent };\n","export default BaseModel =>\n    /**\n    * A Model that is linked to by LinkableModel's\n    * @class LinkedModel\n    */\n    class LinkParent extends BaseModel {\n        getLinkObject() {\n            return { linkedObjectId: this._id, objectType: this._objectType };\n        }\n    }\n;\n","/* eslint-disable import/no-unresolved */\nimport SimpleSchema from 'simpl-schema';\n/* eslint-enable import/no-unresolved */\n\nexport default () => {\n    // a place to store references to the collections where the commentable objects are stored.\n    const LinkableTypes = {};\n\n    /**\n    * A scaffold for creating models which can link records from one collection to records from many other collections\n    * @mixin LinkableModel\n    */\n    const LinkableModel = Base => class extends Base {\n        /**\n        * getCollectionForParentLink - Get the collection for the ParentLink\n        *\n        * @return {Mongo.Collection} The Collection attached to the ParentLink\n        */\n        getCollectionForParentLink() {\n            return LinkableTypes[this.objectType];\n        }\n        /**\n        * linkedObject - Get the model for the linked record\n        *\n        * @return {Model}  A model of varying types depending on the linked objects type\n        */\n        linkedParent() {\n            const collection = this.getCollectionForParentLink();\n            return collection.findOne({ _id: this.linkedObjectId });\n        }\n    };\n\n    /**\n    * Register a data type that can be linked to another model, storing its collection so we can find the object later\n    * @param {BaseModel}           type       The name of the type\n    * @param {Mongo.Collection} collection The collection where the type of data is stored\n    */\n    LinkableModel.registerParentModel = function registerParentModel(model) {\n        const type = model.prototype.getCollectionName();\n\n        model.prototype._objectType = type; // eslint-disable-line\n\n        LinkableTypes[type] = model.prototype.getCollection();\n    };\n\n    LinkableModel.LinkableSchema = new SimpleSchema({\n        linkedObjectId: {\n            type: String,\n            regEx: SimpleSchema.RegEx.Id,\n            index: 1,\n        },\n        objectType: {\n            type: String,\n            denyUpdate: true,\n        },\n    });\n\n    return LinkableModel;\n};\n"]}}]