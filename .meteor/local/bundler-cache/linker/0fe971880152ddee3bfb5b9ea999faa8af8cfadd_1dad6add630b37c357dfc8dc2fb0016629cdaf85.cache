[{"type":"js","data":"/* Imports for global scope */\n\nMongoInternals = Package.mongo.MongoInternals;\nMongo = Package.mongo.Mongo;\nTracker = Package.tracker.Tracker;\nDeps = Package.tracker.Deps;\nECMAScript = Package.ecmascript.ECMAScript;\nValidatedMethod = Package['mdg:validated-method'].ValidatedMethod;\ncheck = Package.check.check;\nMatch = Package.check.Match;\nAccounts = Package['accounts-base'].Accounts;\nPublishEndpoint = Package['peerlibrary:middleware'].PublishEndpoint;\nPublishMiddleware = Package['peerlibrary:middleware'].PublishMiddleware;\nRoles = Package['alanning:roles'].Roles;\nMethodHooks = Package['lacosta:method-hooks'].MethodHooks;\nMeteor = Package.meteor.Meteor;\nglobal = Package.meteor.global;\nmeteorEnv = Package.meteor.meteorEnv;\nWebApp = Package.webapp.WebApp;\nWebAppInternals = Package.webapp.WebAppInternals;\nmain = Package.webapp.main;\nDDP = Package['ddp-client'].DDP;\nDDPServer = Package['ddp-server'].DDPServer;\nLaunchScreen = Package['launch-screen'].LaunchScreen;\nmeteorInstall = Package.modules.meteorInstall;\nPromise = Package.promise.Promise;\nAutoupdate = Package.autoupdate.Autoupdate;\n\n","servePath":"/global-imports.js"},{"type":"js","data":"var require = meteorInstall({\"imports\":{\"startup\":{\"server\":{\"utilities\":{\"ResponseMessage.js\":function module(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                             //\n// imports/startup/server/utilities/ResponseMessage.js                                                         //\n//                                                                                                             //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                               //\nmodule.export({\n  ResponseMessage: () => ResponseMessage\n});\n\nclass ResponseMessage {\n  constructor() {\n    this.message = null;\n    this.description = null;\n    this.data = null;\n  }\n\n  create(message) {\n    let description = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    let data = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n    this.message = message;\n    this.description = description;\n    this.data = data;\n  }\n\n}\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"Permissions.js\":function module(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                             //\n// imports/startup/server/Permissions.js                                                                       //\n//                                                                                                             //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                               //\nmodule.export({\n  permissionsArray: () => permissionsArray\n});\nconst Permissions = {\n  USERS: {\n    LIST: {\n      VALUE: 'users-view',\n      TEXT: 'Listar usuarios'\n    },\n    CREATE: {\n      VALUE: 'users-create',\n      TEXT: 'Crear usuario'\n    },\n    UPDATE: {\n      VALUE: 'users-edit',\n      TEXT: 'Actualizar usuario'\n    },\n    DELETE: {\n      VALUE: 'users-delete',\n      TEXT: 'Eliminar usuario'\n    }\n  },\n  PROFILES: {\n    LIST: {\n      VALUE: 'profiles-view',\n      TEXT: 'Listar perfiles'\n    },\n    CREATE: {\n      VALUE: 'profiles-create',\n      TEXT: 'Crear perfil'\n    },\n    UPDATE: {\n      VALUE: 'profiles-edit',\n      TEXT: 'Actualizar perfil'\n    },\n    DELETE: {\n      VALUE: 'profiles-delete',\n      TEXT: 'Eliminar perfil'\n    }\n  },\n  PERMISSIONS: {\n    LIST: {\n      VALUE: 'permissions-view',\n      TEXT: 'Listar permisos'\n    }\n  }\n};\nconst permissionsArray = Object.keys(Permissions).reduce((accumulator, systemModuleName) => {\n  const systemModuleObject = Permissions[systemModuleName];\n  const modulePermissions = Object.keys(systemModuleObject).map(permission => systemModuleObject[permission]);\n  return accumulator.concat(modulePermissions);\n}, []);\n\nif (Meteor.isDevelopment) {\n  if (Meteor.settings.private && Meteor.settings.private.REFRESH_PERMISSIONS) {\n    console.log('uplading permissions. . .');\n    const currentRoles = Roles.getAllRoles().fetch();\n\n    for (let permission of permissionsArray) {\n      if (!currentRoles.find(_role => _role._id === permission.VALUE)) {\n        Roles.createRole(permission.VALUE);\n      }\n\n      Meteor.roles.update(permission.VALUE, {\n        $set: {\n          publicName: permission.TEXT\n        }\n      });\n    }\n  }\n}\n\nmodule.exportDefault(Permissions);\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"index.js\":function module(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                             //\n// imports/startup/server/index.js                                                                             //\n//                                                                                                             //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                               //\nmodule.link(\"./Permissions\");\nmodule.link(\"../../api/Users/User\");\nmodule.link(\"../../api/Users/UsersCtrl\");\nmodule.link(\"../../api/Users/UsersPubs\");\nmodule.link(\"../../api/Profiles/ProfileSeeder\");\nmodule.link(\"../../api/Profiles/ProfilesCtrl\");\nmodule.link(\"../../api/Profiles/ProfilesPubs\");\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"both\":{\"index.js\":function module(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                             //\n// imports/startup/both/index.js                                                                               //\n//                                                                                                             //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                               //\nAccounts.config({\n  loginExpirationInDays: 30\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}}},\"api\":{\"Profiles\":{\"Profile.js\":function module(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                             //\n// imports/api/Profiles/Profile.js                                                                             //\n//                                                                                                             //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                               //\nmodule.export({\n  Profile: () => Profile\n});\nlet Mongo;\nmodule.link(\"meteor/mongo\", {\n  Mongo(v) {\n    Mongo = v;\n  }\n\n}, 0);\nconst Profile = new Mongo.Collection('profiles');\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"ProfileSeeder.js\":function module(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                             //\n// imports/api/Profiles/ProfileSeeder.js                                                                       //\n//                                                                                                             //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                               //\nmodule.export({\n  StaticProfiles: () => StaticProfiles\n});\nlet Permissions, permissionsArray;\nmodule.link(\"../../startup/server/Permissions\", {\n  default(v) {\n    Permissions = v;\n  },\n\n  permissionsArray(v) {\n    permissionsArray = v;\n  }\n\n}, 0);\nlet Profile;\nmodule.link(\"./Profile\", {\n  Profile(v) {\n    Profile = v;\n  }\n\n}, 1);\nProfile.rawCollection().createIndex({\n  'name': 1\n}, {\n  unique: true\n});\nconst StaticProfiles = {\n  admin: {\n    name: 'admin',\n    description: 'Administrador',\n    permissions: permissionsArray.map(p => p.VALUE)\n  }\n};\n\nif (Meteor.isDevelopment) {\n  if (Meteor.settings.private && Meteor.settings.private.REFRESH_STATIC_PROFILES) {\n    console.log('updating static profiles. . .');\n    Object.keys(StaticProfiles).forEach(staticProfileName => {\n      Profile.upsert({\n        name: StaticProfiles[staticProfileName].name\n      }, {\n        $set: {\n          description: StaticProfiles[staticProfileName].description,\n          permissions: StaticProfiles[staticProfileName].permissions\n        }\n      });\n      Meteor.users.find({\n        'profile.profile': StaticProfiles[staticProfileName].name\n      }).fetch().forEach(user => {\n        Meteor.roleAssignment.remove({\n          'user._id': user._id\n        });\n\n        if (StaticProfiles[staticProfileName].permissions.length > 0) {\n          Roles.setUserRoles(user._id, StaticProfiles[staticProfileName].permissions, StaticProfiles[staticProfileName].name);\n        }\n      });\n    });\n  }\n}\n\n;\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"ProfilesCtrl.js\":function module(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                             //\n// imports/api/Profiles/ProfilesCtrl.js                                                                        //\n//                                                                                                             //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                               //\nlet check, Match;\nmodule.link(\"meteor/check\", {\n  check(v) {\n    check = v;\n  },\n\n  Match(v) {\n    Match = v;\n  }\n\n}, 0);\nlet AuthGuard;\nmodule.link(\"../../middlewares/AuthGuard\", {\n  default(v) {\n    AuthGuard = v;\n  }\n\n}, 1);\nlet Permissions;\nmodule.link(\"../../startup/server/Permissions\", {\n  default(v) {\n    Permissions = v;\n  }\n\n}, 2);\nlet ResponseMessage;\nmodule.link(\"../../startup/server/utilities/ResponseMessage\", {\n  ResponseMessage(v) {\n    ResponseMessage = v;\n  }\n\n}, 3);\nlet Profile;\nmodule.link(\"./Profile\", {\n  Profile(v) {\n    Profile = v;\n  }\n\n}, 4);\nlet ProfilesServ;\nmodule.link(\"./ProfilesServ\", {\n  default(v) {\n    ProfilesServ = v;\n  }\n\n}, 5);\nnew ValidatedMethod({\n  name: 'profile.save',\n  mixins: [MethodHooks],\n  permissions: [Permissions.PROFILES.CREATE.VALUE, Permissions.PROFILES.UPDATE.VALUE],\n  beforeHooks: [AuthGuard.checkPermission],\n\n  validate(profile) {\n    try {\n      check(profile, {\n        _id: Match.OneOf(String, null),\n        name: String,\n        description: String,\n        permissions: [String]\n      });\n    } catch (error) {\n      console.error('profile.save', error);\n      throw new Meteor.Error('403', 'La informacion no es valida');\n    }\n\n    ProfilesServ.validateName(profile.name, profile._id);\n  },\n\n  run(profile) {\n    const responseMessage = new ResponseMessage();\n\n    if (profile._id !== null) {\n      try {\n        // UPDATE PROFILE\n        const oldProfile = Profile.findOne(profile._id);\n        const users = ProfilesServ.getUsersByProfile(profile._id);\n        Profile.update(profile._id, {\n          $set: {\n            name: profile.name,\n            description: profile.description,\n            permissions: profile.permissions\n          }\n        });\n\n        if (oldProfile.name !== profile.name) {\n          Meteor.users.update({\n            'profile.profile': oldProfile.name\n          }, {\n            $set: {\n              'profile.profile': profile.name\n            }\n          }, {\n            multi: true\n          });\n        }\n\n        ProfilesServ.updateProfileUsers(users, profile);\n        responseMessage.create('Se actualizo el perfil exitosamente');\n      } catch (error) {\n        console.error('profile.save', error);\n        throw new Meteor.Error('500', 'Ocurrio un error al actualizar el perfil');\n      }\n    } else {\n      try {\n        // CREATE PROFILE\n        Profile.insert({\n          name: profile.name,\n          description: profile.description,\n          permissions: profile.permissions\n        });\n        responseMessage.create('Se creo el perfil exitosamente');\n      } catch (error) {\n        console.error('profile.save', error);\n        throw new Meteor.Error('500', 'Ocurrio un error al crear el nuevo perfil');\n      }\n    }\n\n    return responseMessage;\n  }\n\n});\nnew ValidatedMethod({\n  name: 'profile.delete',\n  mixins: [MethodHooks],\n  permissions: [Permissions.PROFILES.DELETE.VALUE],\n  beforeHooks: [AuthGuard.checkPermission],\n\n  validate(_ref) {\n    let {\n      idProfile\n    } = _ref;\n\n    try {\n      check(idProfile, String);\n    } catch (error) {\n      console.error('profile.delete', error);\n      throw new Meteor.Error('403', 'La informacion introducida no es valida');\n    }\n  },\n\n  run(_ref2) {\n    let {\n      idProfile\n    } = _ref2;\n    const responseMessage = new ResponseMessage();\n\n    try {\n      Profile.remove(idProfile);\n      responseMessage.create('Perfil eliminado exitosamente');\n    } catch (error) {\n      console.error('profile.delete', error);\n      throw new Meteor.Error('403', 'La informacion introducida no es valida');\n    }\n\n    return responseMessage;\n  }\n\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"ProfilesPubs.js\":function module(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                             //\n// imports/api/Profiles/ProfilesPubs.js                                                                        //\n//                                                                                                             //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                               //\nlet PermissionMiddleware;\nmodule.link(\"../../middlewares/PermissionsMiddleware\", {\n  PermissionMiddleware(v) {\n    PermissionMiddleware = v;\n  }\n\n}, 0);\nlet Permissions;\nmodule.link(\"../../startup/server/Permissions\", {\n  default(v) {\n    Permissions = v;\n  }\n\n}, 1);\nlet Profile;\nmodule.link(\"./Profile\", {\n  Profile(v) {\n    Profile = v;\n  }\n\n}, 2);\nlet ProfilesServ;\nmodule.link(\"./ProfilesServ\", {\n  default(v) {\n    ProfilesServ = v;\n  }\n\n}, 3);\nconst noStaticProfilesPublication = new PublishEndpoint('profile.listNotStaticProfiles', function () {\n  return Profile.find({\n    name: {\n      $nin: ProfilesServ.getStaticProfileName()\n    }\n  });\n});\nconst profilesPublication = new PublishEndpoint('profile.listAll', function () {\n  return Profile.find();\n});\nprofilesPublication.use(new PermissionMiddleware([Permissions.PROFILES.LIST.VALUE]));\nnoStaticProfilesPublication.use(new PermissionMiddleware([Permissions.PROFILES.LIST.VALUE]));\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"ProfilesServ.js\":function module(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                             //\n// imports/api/Profiles/ProfilesServ.js                                                                        //\n//                                                                                                             //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                               //\nlet Profile;\nmodule.link(\"./Profile\", {\n  Profile(v) {\n    Profile = v;\n  }\n\n}, 0);\nlet StaticProfiles;\nmodule.link(\"./ProfileSeeder\", {\n  StaticProfiles(v) {\n    StaticProfiles = v;\n  }\n\n}, 1);\nmodule.exportDefault({\n  validateName(name, idProfile) {\n    const existName = Profile.findOne({\n      name\n    });\n\n    if (idProfile) {\n      const oldProfile = Profile.findOne(idProfile);\n\n      if (oldProfile.name !== name && existName) {\n        throw new Meteor.Error('403', \"El nuevo nombre de perfil ya se encuentra en uso\");\n      }\n    } else if (existName) {\n      throw new Meteor.Error('403', \"El nombre de perfil ya se encuentra en uso\");\n    }\n  },\n\n  getUsersByProfile(idProfile) {\n    const profile = Profile.findOne(idProfile);\n    return Meteor.users.find({\n      'profile.profile': profile.name\n    }).fetch();\n  },\n\n  setUserRoles(idUser, profileName) {\n    const permissions = Profile.findOne({\n      name: profileName\n    }).permissions;\n    Meteor.roleAssignment.remove({\n      'user._id': idUser\n    });\n    Roles.setUserRoles(idUser, permissions, profileName);\n  },\n\n  updateProfileUsers(users, profile) {\n    users.forEach(user => {\n      this.setUserRoles(user._id, profile.name);\n    });\n  },\n\n  getStaticProfileName() {\n    return Object.keys(StaticProfiles).map(staticProfileName => {\n      return StaticProfiles[staticProfileName].name;\n    });\n  }\n\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"Users\":{\"User.js\":function module(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                             //\n// imports/api/Users/User.js                                                                                   //\n//                                                                                                             //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                               //\nMeteor.users.rawCollection().createIndex({\n  'profile.profile': 1\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"UsersCtrl.js\":function module(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                             //\n// imports/api/Users/UsersCtrl.js                                                                              //\n//                                                                                                             //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                               //\nlet ValidatedMethod;\nmodule.link(\"meteor/mdg:validated-method\", {\n  ValidatedMethod(v) {\n    ValidatedMethod = v;\n  }\n\n}, 0);\nlet check, Match;\nmodule.link(\"meteor/check\", {\n  check(v) {\n    check = v;\n  },\n\n  Match(v) {\n    Match = v;\n  }\n\n}, 1);\nlet ResponseMessage;\nmodule.link(\"../../startup/server/utilities/ResponseMessage\", {\n  ResponseMessage(v) {\n    ResponseMessage = v;\n  }\n\n}, 2);\nlet UsersServ;\nmodule.link(\"./UsersServ\", {\n  default(v) {\n    UsersServ = v;\n  }\n\n}, 3);\nlet AuthGuard;\nmodule.link(\"../../middlewares/AuthGuard\", {\n  default(v) {\n    AuthGuard = v;\n  }\n\n}, 4);\nlet Permissions;\nmodule.link(\"../../startup/server/Permissions\", {\n  default(v) {\n    Permissions = v;\n  }\n\n}, 5);\nAccounts.validateLoginAttempt(loginAttempt => {\n  if (loginAttempt.allowed) {\n    var _loginAttempt$user$se;\n\n    const loginTokensOfUser = ((_loginAttempt$user$se = loginAttempt.user.services.resume) === null || _loginAttempt$user$se === void 0 ? void 0 : _loginAttempt$user$se.loginTokens) || [];\n\n    if (loginTokensOfUser.length > 1) {\n      Meteor.users.update(loginAttempt.user._id, {\n        $set: {\n          'services.resume.loginTokens': [loginTokensOfUser.pop()]\n        }\n      });\n    }\n\n    return true;\n  }\n});\nnew ValidatedMethod({\n  name: 'user.save',\n  mixins: [MethodHooks],\n  permissions: [Permissions.USERS.CREATE.VALUE, Permissions.USERS.UPDATE.VALUE],\n  beforeHooks: [AuthGuard.checkPermission],\n\n  validate(user) {\n    try {\n      check(user, {\n        _id: Match.OneOf(String, null),\n        username: String,\n        emails: [{\n          address: String,\n          verified: Boolean\n        }],\n        profile: {\n          profile: String,\n          name: String,\n          path: Match.OneOf(String, null)\n        }\n      });\n    } catch (error) {\n      console.log('save.user', error);\n      throw new Meteor.Error('403', 'La informacion introducida no es valida');\n    }\n\n    UsersServ.validateEmail(user.emails[0].address, user._id);\n    UsersServ.validateUsername(user.username, user._id);\n  },\n\n  run(user) {\n    const responseMessage = new ResponseMessage();\n\n    if (user._id !== null) {\n      try {\n        // UPDATE USER \n        UsersServ.updateUser(user);\n        responseMessage.create('Se actualizo el usuario exitosamente');\n      } catch (error) {\n        console.error('user.save', error);\n        throw new Meteor.Error('500', 'Ocurrio un error al actualizar el usuario');\n      }\n    } else {\n      try {\n        // CREATE USER\n        UsersServ.createUser(user);\n        responseMessage.create('Se ha creado usuario exitosamente');\n      } catch (error) {\n        console.error('user.save: ', error);\n        throw new Meteor.Error('500', 'Ocurrió un error al crear un usuario');\n      }\n    }\n\n    return responseMessage;\n  }\n\n});\nnew ValidatedMethod({\n  name: 'user.delete',\n  mixins: [MethodHooks],\n  permissions: [Permissions.USERS.DELETE.VALUE],\n  beforeHooks: [AuthGuard.checkPermission],\n\n  validate(_ref) {\n    let {\n      idUser\n    } = _ref;\n\n    try {\n      check(idUser, String);\n    } catch (error) {\n      console.error('user.delete', error);\n      throw new Meteor.Error('403', 'La informacion introducida no es valida');\n    }\n  },\n\n  run(_ref2) {\n    let {\n      idUser\n    } = _ref2;\n    const responseMessage = new ResponseMessage();\n\n    try {\n      Meteor.users.remove(idUser);\n      Meteor.roleAssignment.remove({\n        'user._id': idUser\n      });\n      responseMessage.create('Se ha eliminado exitosamente al usuario');\n    } catch (error) {\n      console.error('user.delete', error);\n      throw new Meteor.Error('500', 'Ocurrio un error al eliminar un usuario');\n    }\n\n    return responseMessage;\n  }\n\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"UsersPubs.js\":function module(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                             //\n// imports/api/Users/UsersPubs.js                                                                              //\n//                                                                                                             //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                               //\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet PublishEndpoint;\nmodule.link(\"meteor/peerlibrary:middleware\", {\n  PublishEndpoint(v) {\n    PublishEndpoint = v;\n  }\n\n}, 1);\nlet PermissionMiddleware;\nmodule.link(\"../../middlewares/PermissionsMiddleware\", {\n  PermissionMiddleware(v) {\n    PermissionMiddleware = v;\n  }\n\n}, 2);\nlet Permissions;\nmodule.link(\"../../startup/server/Permissions\", {\n  default(v) {\n    Permissions = v;\n  }\n\n}, 3);\nconst usersPublication = new PublishEndpoint('user.list', function () {\n  return Meteor.users.find({}, {\n    sort: {\n      createdAt: -1\n    }\n  });\n});\nusersPublication.use(new PermissionMiddleware([Permissions.USERS.LIST.VALUE]));\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"UsersServ.js\":function module(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                             //\n// imports/api/Users/UsersServ.js                                                                              //\n//                                                                                                             //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                               //\nlet ProfilesServ;\nmodule.link(\"../Profiles/ProfilesServ\", {\n  default(v) {\n    ProfilesServ = v;\n  }\n\n}, 0);\nmodule.exportDefault({\n  validateEmail(newEmail, idUser) {\n    const existEmail = Accounts.findUserByEmail(newEmail);\n\n    if (idUser) {\n      const oldUser = Meteor.users.findOne(idUser);\n\n      if (oldUser.emails[0].address !== newEmail && existEmail) {\n        throw new Meteor.Error('403', 'El nuevo email ya se encuentra en uso');\n      }\n    } else if (existEmail) {\n      throw new Meteor.Error('403', 'El nuevo email ya se encuetra en uso');\n    }\n  },\n\n  validateUsername(newUsername, idUser) {\n    const existUsername = Accounts.findUserByUsername(newUsername);\n\n    if (idUser) {\n      const oldUser = Meteor.users.findOne(idUser);\n\n      if (oldUser.username !== newUsername && existUsername) {\n        throw new Meteor.Error('403', \"El nuevo nombre de usuario ya se encuentra en uso\");\n      }\n    } else if (existUsername) {\n      throw new Meteor.Error('403', \"El nombre de usuario ya se encuentra en uso\");\n    }\n  },\n\n  createUser(user) {\n    const idUser = Accounts.createUser({\n      username: user.username,\n      email: user.emails[0].address,\n      profile: user.profile\n    });\n\n    if (idUser) {\n      ProfilesServ.setUserRoles(idUser, user.profile.profile);\n    }\n  },\n\n  updateUser(user) {\n    const currentUser = Meteor.users.findOne(user._id);\n\n    if (currentUser.emails[0].address !== user.emails[0].address) {\n      Accounts.removeEmail(currentUser._id, currentUser.emails[0].address);\n      Accounts.addEmail(currentUser._id, user.emails[0].address);\n    }\n\n    if (currentUser.username !== user.username) {\n      Accounts.setUsername(currentUser._id, user.username);\n    }\n\n    Meteor.users.update(user._id, {\n      $set: {\n        profile: {\n          profile: user.profile.profile,\n          name: user.profile.name,\n          path: user.profile.path\n        }\n      }\n    });\n    ProfilesServ.setUserRoles(user._id, user.profile.profile);\n  }\n\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}}},\"middlewares\":{\"AuthGuard.js\":function module(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                             //\n// imports/middlewares/AuthGuard.js                                                                            //\n//                                                                                                             //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                               //\nconst checkPermission = function (methodArgs, methodOptions) {\n  const idUser = this.userId;\n  const permissions = methodOptions.permissions;\n  let hasPermission = false;\n\n  if (idUser !== null) {\n    const profileName = Meteor.user().profile.profile;\n    hasPermission = Roles.userIsInRole(idUser, permissions, profileName);\n  }\n\n  if (!hasPermission) {\n    throw new Meteor.Error('403', 'Acceso denegado', 'No tienes permiso para ejecutar esta accion');\n  }\n\n  return methodArgs;\n};\n\nmodule.exportDefault({\n  checkPermission\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"PermissionsMiddleware.js\":function module(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                             //\n// imports/middlewares/PermissionsMiddleware.js                                                                //\n//                                                                                                             //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                               //\nmodule.export({\n  PermissionMiddleware: () => PermissionMiddleware\n});\n\nclass PermissionMiddleware extends PublishMiddleware {\n  constructor(permissions) {\n    super();\n    this._permissions = permissions;\n  }\n\n  added(publish, collection, id, fields) {\n    if (publish.userId) {\n      return super.added(...arguments);\n    }\n\n    return publish.ready();\n  }\n\n  change(publish, collection, id, fields) {\n    if (this.checkPermission(publish.userId)) {\n      return super.changed(...arguments);\n    }\n\n    return publish.ready();\n  }\n\n  removed(publish, collection, id) {\n    if (this.checkPermission(publish.userId)) {\n      return super.removed(...arguments);\n    }\n\n    return publish.ready();\n  }\n\n  onReady(publish) {\n    if (publish.userId) {\n      return super.onReady(...arguments);\n    }\n  }\n\n  onStop(publish) {\n    if (publish.userId) {\n      return super.onStop(...arguments);\n    }\n  }\n\n  onError(publish) {\n    if (publish.userId) {\n      return super.onError(...arguments);\n    }\n  }\n\n  checkPermission(idUser) {\n    const profileName = Roles.getScopesForUser(idUser)[0];\n    return Roles.userIsInRole(idUser, this._permissions, profileName);\n  }\n\n}\n\n;\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}}},\"server\":{\"main.js\":function module(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                             //\n// server/main.js                                                                                              //\n//                                                                                                             //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                               //\nmodule.link(\"/imports/startup/server\");\nmodule.link(\"/imports/startup/both\");\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}}},{\n  \"extensions\": [\n    \".js\",\n    \".json\",\n    \".mjs\",\n    \".ts\",\n    \".vue\"\n  ]\n});\n\nvar exports = require(\"/server/main.js\");","hash":"d97176fc8879b33f84c56bf0251de4d3e5a52b09","servePath":"/app.js","sourceMap":{"version":3,"sources":["imports/startup/server/utilities/ResponseMessage.js","imports/startup/server/Permissions.js","imports/startup/server/index.js","imports/startup/both/index.js","imports/api/Profiles/Profile.js","imports/api/Profiles/ProfileSeeder.js","imports/api/Profiles/ProfilesCtrl.js","imports/api/Profiles/ProfilesPubs.js","imports/api/Profiles/ProfilesServ.js","imports/api/Users/User.js","imports/api/Users/UsersCtrl.js","imports/api/Users/UsersPubs.js","imports/api/Users/UsersServ.js","imports/middlewares/AuthGuard.js","imports/middlewares/PermissionsMiddleware.js","server/main.js"],"names":["module","export","ResponseMessage","constructor","message","description","data","create","permissionsArray","Permissions","USERS","LIST","VALUE","TEXT","CREATE","UPDATE","DELETE","PROFILES","PERMISSIONS","Object","keys","reduce","accumulator","systemModuleName","systemModuleObject","modulePermissions","map","permission","concat","Meteor","isDevelopment","settings","private","REFRESH_PERMISSIONS","console","log","currentRoles","Roles","getAllRoles","fetch","find","_role","_id","createRole","roles","update","$set","publicName","exportDefault","link","Accounts","config","loginExpirationInDays","Profile","Mongo","v","Collection","StaticProfiles","default","rawCollection","createIndex","unique","admin","name","permissions","p","REFRESH_STATIC_PROFILES","forEach","staticProfileName","upsert","users","user","roleAssignment","remove","length","setUserRoles","check","Match","AuthGuard","ProfilesServ","ValidatedMethod","mixins","MethodHooks","beforeHooks","checkPermission","validate","profile","OneOf","String","error","Error","validateName","run","responseMessage","oldProfile","findOne","getUsersByProfile","multi","updateProfileUsers","insert","idProfile","PermissionMiddleware","noStaticProfilesPublication","PublishEndpoint","$nin","getStaticProfileName","profilesPublication","use","existName","idUser","profileName","UsersServ","validateLoginAttempt","loginAttempt","allowed","loginTokensOfUser","services","resume","loginTokens","pop","username","emails","address","verified","Boolean","path","validateEmail","validateUsername","updateUser","createUser","usersPublication","sort","createdAt","newEmail","existEmail","findUserByEmail","oldUser","newUsername","existUsername","findUserByUsername","email","currentUser","removeEmail","addEmail","setUsername","methodArgs","methodOptions","userId","hasPermission","userIsInRole","PublishMiddleware","_permissions","added","publish","collection","id","fields","arguments","ready","change","changed","removed","onReady","onStop","onError","getScopesForUser"],"mappings":";;;;;;;;AAAAA,MAAM,CAACC,MAAP,CAAc;AAACC,iBAAe,EAAC,MAAIA;AAArB,CAAd;;AAAO,MAAMA,eAAN,CAAsB;AACzBC,aAAW,GAAE;AACT,SAAKC,OAAL,GAAe,IAAf;AACA,SAAKC,WAAL,GAAmB,IAAnB;AACA,SAAKC,IAAL,GAAY,IAAZ;AACH;;AAEDC,QAAM,CAACH,OAAD,EAA0C;AAAA,QAAhCC,WAAgC,uEAAlB,IAAkB;AAAA,QAAZC,IAAY,uEAAL,IAAK;AAC5C,SAAKF,OAAL,GAAeA,OAAf;AACA,SAAKC,WAAL,GAAmBA,WAAnB;AACA,SAAKC,IAAL,GAAYA,IAAZ;AACH;;AAXwB,C;;;;;;;;;;;ACA7BN,MAAM,CAACC,MAAP,CAAc;AAACO,kBAAgB,EAAC,MAAIA;AAAtB,CAAd;AAAA,MAAMC,WAAW,GAAG;AAChBC,OAAK,EAAE;AACHC,QAAI,EAAE;AAACC,WAAK,EAAE,YAAR;AAAsBC,UAAI,EAAE;AAA5B,KADH;AAEHC,UAAM,EAAE;AAACF,WAAK,EAAE,cAAR;AAAwBC,UAAI,EAAE;AAA9B,KAFL;AAGHE,UAAM,EAAE;AAACH,WAAK,EAAE,YAAR;AAAsBC,UAAI,EAAE;AAA5B,KAHL;AAIHG,UAAM,EAAE;AAACJ,WAAK,EAAE,cAAR;AAAwBC,UAAI,EAAE;AAA9B;AAJL,GADS;AAOhBI,UAAQ,EAAE;AACNN,QAAI,EAAE;AAACC,WAAK,EAAE,eAAR;AAAyBC,UAAI,EAAE;AAA/B,KADA;AAENC,UAAM,EAAE;AAACF,WAAK,EAAE,iBAAR;AAA2BC,UAAI,EAAE;AAAjC,KAFF;AAGNE,UAAM,EAAE;AAACH,WAAK,EAAE,eAAR;AAAyBC,UAAI,EAAE;AAA/B,KAHF;AAING,UAAM,EAAE;AAACJ,WAAK,EAAE,iBAAR;AAA2BC,UAAI,EAAE;AAAjC;AAJF,GAPM;AAahBK,aAAW,EAAE;AACTP,QAAI,EAAE;AAACC,WAAK,EAAE,kBAAR;AAA4BC,UAAI,EAAE;AAAlC;AADG;AAbG,CAApB;AAkBO,MAAML,gBAAgB,GAAGW,MAAM,CAACC,IAAP,CAAYX,WAAZ,EAAyBY,MAAzB,CAAgC,CAACC,WAAD,EAAcC,gBAAd,KAAmC;AAC/F,QAAMC,kBAAkB,GAAGf,WAAW,CAACc,gBAAD,CAAtC;AACA,QAAME,iBAAiB,GAAGN,MAAM,CAACC,IAAP,CAAYI,kBAAZ,EAAgCE,GAAhC,CAAoCC,UAAU,IAAIH,kBAAkB,CAACG,UAAD,CAApE,CAA1B;AACA,SAAOL,WAAW,CAACM,MAAZ,CAAmBH,iBAAnB,CAAP;AACH,CAJ+B,EAI7B,EAJ6B,CAAzB;;AAMP,IAAII,MAAM,CAACC,aAAX,EAA0B;AACtB,MAAID,MAAM,CAACE,QAAP,CAAgBC,OAAhB,IAA2BH,MAAM,CAACE,QAAP,CAAgBC,OAAhB,CAAwBC,mBAAvD,EAA4E;AACxEC,WAAO,CAACC,GAAR,CAAY,2BAAZ;AACA,UAAMC,YAAY,GAAGC,KAAK,CAACC,WAAN,GAAoBC,KAApB,EAArB;;AACA,SAAK,IAAIZ,UAAT,IAAuBnB,gBAAvB,EAAyC;AACrC,UAAI,CAAC4B,YAAY,CAACI,IAAb,CAAkBC,KAAK,IAAIA,KAAK,CAACC,GAAN,KAAcf,UAAU,CAACf,KAApD,CAAL,EAAiE;AAC7DyB,aAAK,CAACM,UAAN,CAAiBhB,UAAU,CAACf,KAA5B;AACH;;AACDiB,YAAM,CAACe,KAAP,CAAaC,MAAb,CAAoBlB,UAAU,CAACf,KAA/B,EAAsC;AAClCkC,YAAI,EAAE;AACFC,oBAAU,EAAEpB,UAAU,CAACd;AADrB;AAD4B,OAAtC;AAKH;AACJ;AACJ;;AAvCDb,MAAM,CAACgD,aAAP,CAyCevC,WAzCf,E;;;;;;;;;;;ACAAT,MAAM,CAACiD,IAAP,CAAY,eAAZ;AAA6BjD,MAAM,CAACiD,IAAP,CAAY,sBAAZ;AAAoCjD,MAAM,CAACiD,IAAP,CAAY,2BAAZ;AAAyCjD,MAAM,CAACiD,IAAP,CAAY,2BAAZ;AAAyCjD,MAAM,CAACiD,IAAP,CAAY,kCAAZ;AAAgDjD,MAAM,CAACiD,IAAP,CAAY,iCAAZ;AAA+CjD,MAAM,CAACiD,IAAP,CAAY,iCAAZ,E;;;;;;;;;;;ACAlPC,QAAQ,CAACC,MAAT,CAAiB;AACbC,uBAAqB,EAAE;AADV,CAAjB,E;;;;;;;;;;;ACAApD,MAAM,CAACC,MAAP,CAAc;AAACoD,SAAO,EAAC,MAAIA;AAAb,CAAd;AAAqC,IAAIC,KAAJ;AAAUtD,MAAM,CAACiD,IAAP,CAAY,cAAZ,EAA2B;AAACK,OAAK,CAACC,CAAD,EAAG;AAACD,SAAK,GAACC,CAAN;AAAQ;;AAAlB,CAA3B,EAA+C,CAA/C;AAExC,MAAMF,OAAO,GAAG,IAAIC,KAAK,CAACE,UAAV,CAAqB,UAArB,CAAhB,C;;;;;;;;;;;ACFPxD,MAAM,CAACC,MAAP,CAAc;AAACwD,gBAAc,EAAC,MAAIA;AAApB,CAAd;AAAmD,IAAIhD,WAAJ,EAAgBD,gBAAhB;AAAiCR,MAAM,CAACiD,IAAP,CAAY,kCAAZ,EAA+C;AAACS,SAAO,CAACH,CAAD,EAAG;AAAC9C,eAAW,GAAC8C,CAAZ;AAAc,GAA1B;;AAA2B/C,kBAAgB,CAAC+C,CAAD,EAAG;AAAC/C,oBAAgB,GAAC+C,CAAjB;AAAmB;;AAAlE,CAA/C,EAAmH,CAAnH;AAAsH,IAAIF,OAAJ;AAAYrD,MAAM,CAACiD,IAAP,CAAY,WAAZ,EAAwB;AAACI,SAAO,CAACE,CAAD,EAAG;AAACF,WAAO,GAACE,CAAR;AAAU;;AAAtB,CAAxB,EAAgD,CAAhD;AAGtNF,OAAO,CAACM,aAAR,GAAwBC,WAAxB,CAAoC;AAAC,UAAQ;AAAT,CAApC,EAAiD;AAACC,QAAM,EAAE;AAAT,CAAjD;AAEO,MAAMJ,cAAc,GAAG;AAC1BK,OAAK,EAAE;AACHC,QAAI,EAAE,OADH;AAEH1D,eAAW,EAAE,eAFV;AAGH2D,eAAW,EAAExD,gBAAgB,CAACkB,GAAjB,CAAqBuC,CAAC,IAAEA,CAAC,CAACrD,KAA1B;AAHV;AADmB,CAAvB;;AAQP,IAAIiB,MAAM,CAACC,aAAX,EAA0B;AACtB,MAAID,MAAM,CAACE,QAAP,CAAgBC,OAAhB,IAA2BH,MAAM,CAACE,QAAP,CAAgBC,OAAhB,CAAwBkC,uBAAvD,EAAgF;AAC5EhC,WAAO,CAACC,GAAR,CAAY,+BAAZ;AACAhB,UAAM,CAACC,IAAP,CAAYqC,cAAZ,EAA4BU,OAA5B,CAAoCC,iBAAiB,IAAI;AACrDf,aAAO,CAACgB,MAAR,CAAe;AAACN,YAAI,EAAEN,cAAc,CAACW,iBAAD,CAAd,CAAkCL;AAAzC,OAAf,EAA+D;AAC3DjB,YAAI,EAAE;AACFzC,qBAAW,EAAEoD,cAAc,CAACW,iBAAD,CAAd,CAAkC/D,WAD7C;AAEF2D,qBAAW,EAAEP,cAAc,CAACW,iBAAD,CAAd,CAAkCJ;AAF7C;AADqD,OAA/D;AAMAnC,YAAM,CAACyC,KAAP,CAAa9B,IAAb,CAAkB;AAAE,2BAAmBiB,cAAc,CAACW,iBAAD,CAAd,CAAkCL;AAAvD,OAAlB,EAAgFxB,KAAhF,GAAwF4B,OAAxF,CAAgGI,IAAI,IAAI;AACpG1C,cAAM,CAAC2C,cAAP,CAAsBC,MAAtB,CAA6B;AAAC,sBAAYF,IAAI,CAAC7B;AAAlB,SAA7B;;AACA,YAAIe,cAAc,CAACW,iBAAD,CAAd,CAAkCJ,WAAlC,CAA8CU,MAA9C,GAAuD,CAA3D,EAA8D;AAC1DrC,eAAK,CAACsC,YAAN,CAAmBJ,IAAI,CAAC7B,GAAxB,EAA6Be,cAAc,CAACW,iBAAD,CAAd,CAAkCJ,WAA/D,EAA4EP,cAAc,CAACW,iBAAD,CAAd,CAAkCL,IAA9G;AACH;AACJ,OALD;AAMH,KAbD;AAcH;AACJ;;AAAA,C;;;;;;;;;;;AC/BD,IAAIa,KAAJ,EAAUC,KAAV;AAAgB7E,MAAM,CAACiD,IAAP,CAAY,cAAZ,EAA2B;AAAC2B,OAAK,CAACrB,CAAD,EAAG;AAACqB,SAAK,GAACrB,CAAN;AAAQ,GAAlB;;AAAmBsB,OAAK,CAACtB,CAAD,EAAG;AAACsB,SAAK,GAACtB,CAAN;AAAQ;;AAApC,CAA3B,EAAiE,CAAjE;AAAoE,IAAIuB,SAAJ;AAAc9E,MAAM,CAACiD,IAAP,CAAY,6BAAZ,EAA0C;AAACS,SAAO,CAACH,CAAD,EAAG;AAACuB,aAAS,GAACvB,CAAV;AAAY;;AAAxB,CAA1C,EAAoE,CAApE;AAAuE,IAAI9C,WAAJ;AAAgBT,MAAM,CAACiD,IAAP,CAAY,kCAAZ,EAA+C;AAACS,SAAO,CAACH,CAAD,EAAG;AAAC9C,eAAW,GAAC8C,CAAZ;AAAc;;AAA1B,CAA/C,EAA2E,CAA3E;AAA8E,IAAIrD,eAAJ;AAAoBF,MAAM,CAACiD,IAAP,CAAY,gDAAZ,EAA6D;AAAC/C,iBAAe,CAACqD,CAAD,EAAG;AAACrD,mBAAe,GAACqD,CAAhB;AAAkB;;AAAtC,CAA7D,EAAqG,CAArG;AAAwG,IAAIF,OAAJ;AAAYrD,MAAM,CAACiD,IAAP,CAAY,WAAZ,EAAwB;AAACI,SAAO,CAACE,CAAD,EAAG;AAACF,WAAO,GAACE,CAAR;AAAU;;AAAtB,CAAxB,EAAgD,CAAhD;AAAmD,IAAIwB,YAAJ;AAAiB/E,MAAM,CAACiD,IAAP,CAAY,gBAAZ,EAA6B;AAACS,SAAO,CAACH,CAAD,EAAG;AAACwB,gBAAY,GAACxB,CAAb;AAAe;;AAA3B,CAA7B,EAA0D,CAA1D;AAOnd,IAAIyB,eAAJ,CAAoB;AAChBjB,MAAI,EAAE,cADU;AAEhBkB,QAAM,EAAE,CAACC,WAAD,CAFQ;AAGhBlB,aAAW,EAAE,CAACvD,WAAW,CAACQ,QAAZ,CAAqBH,MAArB,CAA4BF,KAA7B,EAAoCH,WAAW,CAACQ,QAAZ,CAAqBF,MAArB,CAA4BH,KAAhE,CAHG;AAIhBuE,aAAW,EAAE,CAACL,SAAS,CAACM,eAAX,CAJG;;AAKhBC,UAAQ,CAACC,OAAD,EAAU;AACd,QAAI;AACAV,WAAK,CAACU,OAAD,EAAU;AACX5C,WAAG,EAAEmC,KAAK,CAACU,KAAN,CAAYC,MAAZ,EAAoB,IAApB,CADM;AAEXzB,YAAI,EAAEyB,MAFK;AAGXnF,mBAAW,EAAEmF,MAHF;AAIXxB,mBAAW,EAAE,CAACwB,MAAD;AAJF,OAAV,CAAL;AAMH,KAPD,CAOE,OAAOC,KAAP,EAAc;AACZvD,aAAO,CAACuD,KAAR,CAAc,cAAd,EAA8BA,KAA9B;AACA,YAAM,IAAI5D,MAAM,CAAC6D,KAAX,CAAiB,KAAjB,EAAwB,6BAAxB,CAAN;AACH;;AACDX,gBAAY,CAACY,YAAb,CAA0BL,OAAO,CAACvB,IAAlC,EAAwCuB,OAAO,CAAC5C,GAAhD;AACH,GAlBe;;AAmBhBkD,KAAG,CAACN,OAAD,EAAU;AACT,UAAMO,eAAe,GAAG,IAAI3F,eAAJ,EAAxB;;AACA,QAAIoF,OAAO,CAAC5C,GAAR,KAAgB,IAApB,EAA0B;AAC1B,UAAI;AACA;AACA,cAAMoD,UAAU,GAAGzC,OAAO,CAAC0C,OAAR,CAAgBT,OAAO,CAAC5C,GAAxB,CAAnB;AACA,cAAM4B,KAAK,GAAGS,YAAY,CAACiB,iBAAb,CAA+BV,OAAO,CAAC5C,GAAvC,CAAd;AACAW,eAAO,CAACR,MAAR,CAAeyC,OAAO,CAAC5C,GAAvB,EAA4B;AACxBI,cAAI,EAAE;AACFiB,gBAAI,EAAEuB,OAAO,CAACvB,IADZ;AAEF1D,uBAAW,EAAEiF,OAAO,CAACjF,WAFnB;AAGF2D,uBAAW,EAAEsB,OAAO,CAACtB;AAHnB;AADkB,SAA5B;;AAOA,YAAI8B,UAAU,CAAC/B,IAAX,KAAoBuB,OAAO,CAACvB,IAAhC,EAAsC;AAClClC,gBAAM,CAACyC,KAAP,CAAazB,MAAb,CAAoB;AAAC,+BAAmBiD,UAAU,CAAC/B;AAA/B,WAApB,EAA0D;AACtDjB,gBAAI,EAAE;AACF,iCAAmBwC,OAAO,CAACvB;AADzB;AADgD,WAA1D,EAIE;AAAEkC,iBAAK,EAAC;AAAR,WAJF;AAKH;;AACDlB,oBAAY,CAACmB,kBAAb,CAAgC5B,KAAhC,EAAuCgB,OAAvC;AACAO,uBAAe,CAACtF,MAAhB,CAAuB,qCAAvB;AACH,OApBD,CAoBE,OAAOkF,KAAP,EAAc;AACZvD,eAAO,CAACuD,KAAR,CAAc,cAAd,EAA8BA,KAA9B;AACA,cAAM,IAAI5D,MAAM,CAAC6D,KAAX,CAAiB,KAAjB,EAAwB,0CAAxB,CAAN;AACH;AACA,KAzBD,MAyBO;AACH,UAAI;AACA;AACArC,eAAO,CAAC8C,MAAR,CAAe;AACXpC,cAAI,EAAEuB,OAAO,CAACvB,IADH;AAEX1D,qBAAW,EAAEiF,OAAO,CAACjF,WAFV;AAGX2D,qBAAW,EAAEsB,OAAO,CAACtB;AAHV,SAAf;AAKA6B,uBAAe,CAACtF,MAAhB,CAAuB,gCAAvB;AACH,OARD,CAQE,OAAOkF,KAAP,EAAc;AACZvD,eAAO,CAACuD,KAAR,CAAc,cAAd,EAA8BA,KAA9B;AACA,cAAM,IAAI5D,MAAM,CAAC6D,KAAX,CAAiB,KAAjB,EAAwB,2CAAxB,CAAN;AACH;AACJ;;AACD,WAAOG,eAAP;AACH;;AA7De,CAApB;AAgEA,IAAIb,eAAJ,CAAqB;AACjBjB,MAAI,EAAE,gBADW;AAEjBkB,QAAM,EAAE,CAACC,WAAD,CAFS;AAGjBlB,aAAW,EAAE,CAACvD,WAAW,CAACQ,QAAZ,CAAqBD,MAArB,CAA4BJ,KAA7B,CAHI;AAIjBuE,aAAW,EAAE,CAACL,SAAS,CAACM,eAAX,CAJI;;AAKjBC,UAAQ,OAAgB;AAAA,QAAf;AAAEe;AAAF,KAAe;;AACpB,QAAI;AACAxB,WAAK,CAACwB,SAAD,EAAYZ,MAAZ,CAAL;AACH,KAFD,CAEE,OAAOC,KAAP,EAAc;AACZvD,aAAO,CAACuD,KAAR,CAAc,gBAAd,EAAgCA,KAAhC;AACA,YAAM,IAAI5D,MAAM,CAAC6D,KAAX,CAAiB,KAAjB,EAAwB,yCAAxB,CAAN;AACH;AACJ,GAZgB;;AAajBE,KAAG,QAAgB;AAAA,QAAf;AAAEQ;AAAF,KAAe;AACf,UAAMP,eAAe,GAAG,IAAI3F,eAAJ,EAAxB;;AACA,QAAI;AACAmD,aAAO,CAACoB,MAAR,CAAe2B,SAAf;AACAP,qBAAe,CAACtF,MAAhB,CAAuB,+BAAvB;AACH,KAHD,CAGE,OAAOkF,KAAP,EAAc;AACZvD,aAAO,CAACuD,KAAR,CAAc,gBAAd,EAAgCA,KAAhC;AACA,YAAM,IAAI5D,MAAM,CAAC6D,KAAX,CAAiB,KAAjB,EAAwB,yCAAxB,CAAN;AACH;;AACD,WAAOG,eAAP;AACH;;AAvBgB,CAArB,E;;;;;;;;;;;ACvEA,IAAIQ,oBAAJ;AAAyBrG,MAAM,CAACiD,IAAP,CAAY,yCAAZ,EAAsD;AAACoD,sBAAoB,CAAC9C,CAAD,EAAG;AAAC8C,wBAAoB,GAAC9C,CAArB;AAAuB;;AAAhD,CAAtD,EAAwG,CAAxG;AAA2G,IAAI9C,WAAJ;AAAgBT,MAAM,CAACiD,IAAP,CAAY,kCAAZ,EAA+C;AAACS,SAAO,CAACH,CAAD,EAAG;AAAC9C,eAAW,GAAC8C,CAAZ;AAAc;;AAA1B,CAA/C,EAA2E,CAA3E;AAA8E,IAAIF,OAAJ;AAAYrD,MAAM,CAACiD,IAAP,CAAY,WAAZ,EAAwB;AAACI,SAAO,CAACE,CAAD,EAAG;AAACF,WAAO,GAACE,CAAR;AAAU;;AAAtB,CAAxB,EAAgD,CAAhD;AAAmD,IAAIwB,YAAJ;AAAiB/E,MAAM,CAACiD,IAAP,CAAY,gBAAZ,EAA6B;AAACS,SAAO,CAACH,CAAD,EAAG;AAACwB,gBAAY,GAACxB,CAAb;AAAe;;AAA3B,CAA7B,EAA0D,CAA1D;AAKlT,MAAM+C,2BAA2B,GAAG,IAAIC,eAAJ,CAAoB,+BAApB,EAAqD,YAAW;AAChG,SAAOlD,OAAO,CAACb,IAAR,CAAa;AAACuB,QAAI,EAAE;AAACyC,UAAI,EAAEzB,YAAY,CAAC0B,oBAAb;AAAP;AAAP,GAAb,CAAP;AACH,CAFmC,CAApC;AAIA,MAAMC,mBAAmB,GAAG,IAAIH,eAAJ,CAAoB,iBAApB,EAAuC,YAAW;AAC1E,SAAOlD,OAAO,CAACb,IAAR,EAAP;AACH,CAF2B,CAA5B;AAIAkE,mBAAmB,CAACC,GAApB,CAAwB,IAAIN,oBAAJ,CAAyB,CAAC5F,WAAW,CAACQ,QAAZ,CAAqBN,IAArB,CAA0BC,KAA3B,CAAzB,CAAxB;AACA0F,2BAA2B,CAACK,GAA5B,CAAgC,IAAIN,oBAAJ,CAAyB,CAAC5F,WAAW,CAACQ,QAAZ,CAAqBN,IAArB,CAA0BC,KAA3B,CAAzB,CAAhC,E;;;;;;;;;;;ACdA,IAAIyC,OAAJ;AAAYrD,MAAM,CAACiD,IAAP,CAAY,WAAZ,EAAwB;AAACI,SAAO,CAACE,CAAD,EAAG;AAACF,WAAO,GAACE,CAAR;AAAU;;AAAtB,CAAxB,EAAgD,CAAhD;AAAmD,IAAIE,cAAJ;AAAmBzD,MAAM,CAACiD,IAAP,CAAY,iBAAZ,EAA8B;AAACQ,gBAAc,CAACF,CAAD,EAAG;AAACE,kBAAc,GAACF,CAAf;AAAiB;;AAApC,CAA9B,EAAoE,CAApE;AAAlFvD,MAAM,CAACgD,aAAP,CAGe;AACX2C,cAAY,CAAC5B,IAAD,EAAOqC,SAAP,EAAiB;AACzB,UAAMQ,SAAS,GAAGvD,OAAO,CAAC0C,OAAR,CAAgB;AAAChC;AAAD,KAAhB,CAAlB;;AACA,QAAIqC,SAAJ,EAAe;AACX,YAAMN,UAAU,GAAGzC,OAAO,CAAC0C,OAAR,CAAgBK,SAAhB,CAAnB;;AACA,UAAIN,UAAU,CAAC/B,IAAX,KAAoBA,IAApB,IAA4B6C,SAAhC,EAA2C;AACvC,cAAM,IAAI/E,MAAM,CAAC6D,KAAX,CAAiB,KAAjB,EAAwB,kDAAxB,CAAN;AACH;AACJ,KALD,MAKO,IAAIkB,SAAJ,EAAe;AAClB,YAAM,IAAI/E,MAAM,CAAC6D,KAAX,CAAiB,KAAjB,EAAwB,4CAAxB,CAAN;AACH;AACJ,GAXU;;AAYXM,mBAAiB,CAACI,SAAD,EAAY;AACzB,UAAMd,OAAO,GAAGjC,OAAO,CAAC0C,OAAR,CAAgBK,SAAhB,CAAhB;AACA,WAAOvE,MAAM,CAACyC,KAAP,CAAa9B,IAAb,CAAkB;AAAC,yBAAmB8C,OAAO,CAACvB;AAA5B,KAAlB,EAAqDxB,KAArD,EAAP;AACH,GAfU;;AAgBXoC,cAAY,CAACkC,MAAD,EAASC,WAAT,EAAsB;AAC9B,UAAM9C,WAAW,GAAGX,OAAO,CAAC0C,OAAR,CAAgB;AAAChC,UAAI,EAAE+C;AAAP,KAAhB,EAAqC9C,WAAzD;AACAnC,UAAM,CAAC2C,cAAP,CAAsBC,MAAtB,CAA6B;AAAC,kBAAYoC;AAAb,KAA7B;AACAxE,SAAK,CAACsC,YAAN,CAAmBkC,MAAnB,EAA2B7C,WAA3B,EAAwC8C,WAAxC;AACH,GApBU;;AAqBXZ,oBAAkB,CAAC5B,KAAD,EAAQgB,OAAR,EAAiB;AAC/BhB,SAAK,CAACH,OAAN,CAAcI,IAAI,IAAI;AAClB,WAAKI,YAAL,CAAkBJ,IAAI,CAAC7B,GAAvB,EAA4B4C,OAAO,CAACvB,IAApC;AACH,KAFD;AAGH,GAzBU;;AA0BX0C,sBAAoB,GAAG;AACnB,WAAOtF,MAAM,CAACC,IAAP,CAAYqC,cAAZ,EAA4B/B,GAA5B,CAAgC0C,iBAAiB,IAAI;AACxD,aAAOX,cAAc,CAACW,iBAAD,CAAd,CAAkCL,IAAzC;AACH,KAFM,CAAP;AAGH;;AA9BU,CAHf,E;;;;;;;;;;;ACAAlC,MAAM,CAACyC,KAAP,CAAaX,aAAb,GAA6BC,WAA7B,CAAyC;AAAE,qBAAmB;AAArB,CAAzC,E;;;;;;;;;;;ACAA,IAAIoB,eAAJ;AAAoBhF,MAAM,CAACiD,IAAP,CAAY,6BAAZ,EAA0C;AAAC+B,iBAAe,CAACzB,CAAD,EAAG;AAACyB,mBAAe,GAACzB,CAAhB;AAAkB;;AAAtC,CAA1C,EAAkF,CAAlF;AAAqF,IAAIqB,KAAJ,EAAUC,KAAV;AAAgB7E,MAAM,CAACiD,IAAP,CAAY,cAAZ,EAA2B;AAAC2B,OAAK,CAACrB,CAAD,EAAG;AAACqB,SAAK,GAACrB,CAAN;AAAQ,GAAlB;;AAAmBsB,OAAK,CAACtB,CAAD,EAAG;AAACsB,SAAK,GAACtB,CAAN;AAAQ;;AAApC,CAA3B,EAAiE,CAAjE;AAAoE,IAAIrD,eAAJ;AAAoBF,MAAM,CAACiD,IAAP,CAAY,gDAAZ,EAA6D;AAAC/C,iBAAe,CAACqD,CAAD,EAAG;AAACrD,mBAAe,GAACqD,CAAhB;AAAkB;;AAAtC,CAA7D,EAAqG,CAArG;AAAwG,IAAIwD,SAAJ;AAAc/G,MAAM,CAACiD,IAAP,CAAY,aAAZ,EAA0B;AAACS,SAAO,CAACH,CAAD,EAAG;AAACwD,aAAS,GAACxD,CAAV;AAAY;;AAAxB,CAA1B,EAAoD,CAApD;AAAuD,IAAIuB,SAAJ;AAAc9E,MAAM,CAACiD,IAAP,CAAY,6BAAZ,EAA0C;AAACS,SAAO,CAACH,CAAD,EAAG;AAACuB,aAAS,GAACvB,CAAV;AAAY;;AAAxB,CAA1C,EAAoE,CAApE;AAAuE,IAAI9C,WAAJ;AAAgBT,MAAM,CAACiD,IAAP,CAAY,kCAAZ,EAA+C;AAACS,SAAO,CAACH,CAAD,EAAG;AAAC9C,eAAW,GAAC8C,CAAZ;AAAc;;AAA1B,CAA/C,EAA2E,CAA3E;AAOneL,QAAQ,CAAC8D,oBAAT,CAA8BC,YAAY,IAAI;AAC1C,MAAIA,YAAY,CAACC,OAAjB,EAA0B;AAAA;;AACtB,UAAMC,iBAAiB,GAAG,0BAAAF,YAAY,CAAC1C,IAAb,CAAkB6C,QAAlB,CAA2BC,MAA3B,gFAAmCC,WAAnC,KAAkD,EAA5E;;AACA,QAAIH,iBAAiB,CAACzC,MAAlB,GAA2B,CAA/B,EAAkC;AAC9B7C,YAAM,CAACyC,KAAP,CAAazB,MAAb,CAAoBoE,YAAY,CAAC1C,IAAb,CAAkB7B,GAAtC,EAA2C;AACvCI,YAAI,EAAE;AACF,yCAA+B,CAACqE,iBAAiB,CAACI,GAAlB,EAAD;AAD7B;AADiC,OAA3C;AAKH;;AACD,WAAO,IAAP;AACH;AACJ,CAZD;AAcA,IAAIvC,eAAJ,CAAqB;AACjBjB,MAAI,EAAE,WADW;AAEjBkB,QAAM,EAAE,CAACC,WAAD,CAFS;AAGjBlB,aAAW,EAAE,CAACvD,WAAW,CAACC,KAAZ,CAAkBI,MAAlB,CAAyBF,KAA1B,EAAiCH,WAAW,CAACC,KAAZ,CAAkBK,MAAlB,CAAyBH,KAA1D,CAHI;AAIjBuE,aAAW,EAAE,CAACL,SAAS,CAACM,eAAX,CAJI;;AAKjBC,UAAQ,CAACd,IAAD,EAAM;AACV,QAAI;AACAK,WAAK,CAACL,IAAD,EAAO;AACR7B,WAAG,EAAEmC,KAAK,CAACU,KAAN,CAAYC,MAAZ,EAAoB,IAApB,CADG;AAERgC,gBAAQ,EAAEhC,MAFF;AAGRiC,cAAM,EAAE,CAAC;AAACC,iBAAO,EAAElC,MAAV;AAAkBmC,kBAAQ,EAAEC;AAA5B,SAAD,CAHA;AAIRtC,eAAO,EAAE;AACLA,iBAAO,EAAEE,MADJ;AAELzB,cAAI,EAAEyB,MAFD;AAGLqC,cAAI,EAAEhD,KAAK,CAACU,KAAN,CAAYC,MAAZ,EAAoB,IAApB;AAHD;AAJD,OAAP,CAAL;AAUH,KAXD,CAWE,OAAOC,KAAP,EAAc;AACZvD,aAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBsD,KAAzB;AACA,YAAM,IAAI5D,MAAM,CAAC6D,KAAX,CAAiB,KAAjB,EAAwB,yCAAxB,CAAN;AACH;;AACDqB,aAAS,CAACe,aAAV,CAAwBvD,IAAI,CAACkD,MAAL,CAAY,CAAZ,EAAeC,OAAvC,EAAgDnD,IAAI,CAAC7B,GAArD;AACAqE,aAAS,CAACgB,gBAAV,CAA2BxD,IAAI,CAACiD,QAAhC,EAA0CjD,IAAI,CAAC7B,GAA/C;AACH,GAvBgB;;AAwBjBkD,KAAG,CAACrB,IAAD,EAAM;AACL,UAAMsB,eAAe,GAAG,IAAI3F,eAAJ,EAAxB;;AACA,QAAIqE,IAAI,CAAC7B,GAAL,KAAa,IAAjB,EAAuB;AACnB,UAAI;AACA;AACAqE,iBAAS,CAACiB,UAAV,CAAqBzD,IAArB;AACAsB,uBAAe,CAACtF,MAAhB,CAAuB,sCAAvB;AACH,OAJD,CAIE,OAAOkF,KAAP,EAAc;AACZvD,eAAO,CAACuD,KAAR,CAAc,WAAd,EAA2BA,KAA3B;AACA,cAAM,IAAI5D,MAAM,CAAC6D,KAAX,CAAiB,KAAjB,EAAwB,2CAAxB,CAAN;AACH;AACJ,KATD,MASO;AACH,UAAI;AACA;AACAqB,iBAAS,CAACkB,UAAV,CAAqB1D,IAArB;AACAsB,uBAAe,CAACtF,MAAhB,CAAuB,mCAAvB;AACH,OAJD,CAIE,OAAOkF,KAAP,EAAc;AACZvD,eAAO,CAACuD,KAAR,CAAc,aAAd,EAA6BA,KAA7B;AACA,cAAM,IAAI5D,MAAM,CAAC6D,KAAX,CAAiB,KAAjB,EAAwB,sCAAxB,CAAN;AACH;AACJ;;AACD,WAAOG,eAAP;AACH;;AA9CgB,CAArB;AAiDA,IAAIb,eAAJ,CAAoB;AAChBjB,MAAI,EAAE,aADU;AAEhBkB,QAAM,EAAE,CAACC,WAAD,CAFQ;AAGhBlB,aAAW,EAAE,CAACvD,WAAW,CAACC,KAAZ,CAAkBM,MAAlB,CAAyBJ,KAA1B,CAHG;AAIhBuE,aAAW,EAAE,CAACL,SAAS,CAACM,eAAX,CAJG;;AAKhBC,UAAQ,OAAU;AAAA,QAAT;AAACwB;AAAD,KAAS;;AACd,QAAI;AACAjC,WAAK,CAACiC,MAAD,EAASrB,MAAT,CAAL;AACH,KAFD,CAEE,OAAOC,KAAP,EAAc;AACZvD,aAAO,CAACuD,KAAR,CAAc,aAAd,EAA6BA,KAA7B;AACA,YAAM,IAAI5D,MAAM,CAAC6D,KAAX,CAAiB,KAAjB,EAAwB,yCAAxB,CAAN;AACH;AACJ,GAZe;;AAahBE,KAAG,QAAU;AAAA,QAAT;AAACiB;AAAD,KAAS;AACT,UAAMhB,eAAe,GAAG,IAAI3F,eAAJ,EAAxB;;AACA,QAAI;AACA2B,YAAM,CAACyC,KAAP,CAAaG,MAAb,CAAoBoC,MAApB;AACAhF,YAAM,CAAC2C,cAAP,CAAsBC,MAAtB,CAA6B;AAAC,oBAAYoC;AAAb,OAA7B;AACAhB,qBAAe,CAACtF,MAAhB,CAAuB,yCAAvB;AACH,KAJD,CAIE,OAAOkF,KAAP,EAAc;AACZvD,aAAO,CAACuD,KAAR,CAAc,aAAd,EAA6BA,KAA7B;AACA,YAAM,IAAI5D,MAAM,CAAC6D,KAAX,CAAiB,KAAjB,EAAwB,yCAAxB,CAAN;AACH;;AACD,WAAOG,eAAP;AACH;;AAxBe,CAApB,E;;;;;;;;;;;ACtEA,IAAIhE,MAAJ;AAAW7B,MAAM,CAACiD,IAAP,CAAY,eAAZ,EAA4B;AAACpB,QAAM,CAAC0B,CAAD,EAAG;AAAC1B,UAAM,GAAC0B,CAAP;AAAS;;AAApB,CAA5B,EAAkD,CAAlD;AAAqD,IAAIgD,eAAJ;AAAoBvG,MAAM,CAACiD,IAAP,CAAY,+BAAZ,EAA4C;AAACsD,iBAAe,CAAChD,CAAD,EAAG;AAACgD,mBAAe,GAAChD,CAAhB;AAAkB;;AAAtC,CAA5C,EAAoF,CAApF;AAAuF,IAAI8C,oBAAJ;AAAyBrG,MAAM,CAACiD,IAAP,CAAY,yCAAZ,EAAsD;AAACoD,sBAAoB,CAAC9C,CAAD,EAAG;AAAC8C,wBAAoB,GAAC9C,CAArB;AAAuB;;AAAhD,CAAtD,EAAwG,CAAxG;AAA2G,IAAI9C,WAAJ;AAAgBT,MAAM,CAACiD,IAAP,CAAY,kCAAZ,EAA+C;AAACS,SAAO,CAACH,CAAD,EAAG;AAAC9C,eAAW,GAAC8C,CAAZ;AAAc;;AAA1B,CAA/C,EAA2E,CAA3E;AAK/T,MAAM2E,gBAAgB,GAAG,IAAI3B,eAAJ,CAAoB,WAApB,EAAiC,YAAW;AACjE,SAAO1E,MAAM,CAACyC,KAAP,CAAa9B,IAAb,CAAkB,EAAlB,EAAsB;AACzB2F,QAAI,EAAE;AAACC,eAAS,EAAE,CAAC;AAAb;AADmB,GAAtB,CAAP;AAGH,CAJwB,CAAzB;AAMAF,gBAAgB,CAACvB,GAAjB,CAAqB,IAAIN,oBAAJ,CAAyB,CAAC5F,WAAW,CAACC,KAAZ,CAAkBC,IAAlB,CAAuBC,KAAxB,CAAzB,CAArB,E;;;;;;;;;;;ACXA,IAAImE,YAAJ;AAAiB/E,MAAM,CAACiD,IAAP,CAAY,0BAAZ,EAAuC;AAACS,SAAO,CAACH,CAAD,EAAG;AAACwB,gBAAY,GAACxB,CAAb;AAAe;;AAA3B,CAAvC,EAAoE,CAApE;AAAjBvD,MAAM,CAACgD,aAAP,CAEe;AACX8E,eAAa,CAACO,QAAD,EAAWxB,MAAX,EAAkB;AAC3B,UAAMyB,UAAU,GAAGpF,QAAQ,CAACqF,eAAT,CAAyBF,QAAzB,CAAnB;;AACA,QAAIxB,MAAJ,EAAY;AACR,YAAM2B,OAAO,GAAG3G,MAAM,CAACyC,KAAP,CAAayB,OAAb,CAAqBc,MAArB,CAAhB;;AACA,UAAI2B,OAAO,CAACf,MAAR,CAAe,CAAf,EAAkBC,OAAlB,KAA8BW,QAA9B,IAA0CC,UAA9C,EAA0D;AACtD,cAAM,IAAIzG,MAAM,CAAC6D,KAAX,CAAiB,KAAjB,EAAwB,uCAAxB,CAAN;AACH;AACJ,KALD,MAKO,IAAI4C,UAAJ,EAAgB;AACnB,YAAM,IAAIzG,MAAM,CAAC6D,KAAX,CAAiB,KAAjB,EAAwB,sCAAxB,CAAN;AACH;AACJ,GAXU;;AAYXqC,kBAAgB,CAACU,WAAD,EAAc5B,MAAd,EAAqB;AACjC,UAAM6B,aAAa,GAAGxF,QAAQ,CAACyF,kBAAT,CAA4BF,WAA5B,CAAtB;;AACA,QAAI5B,MAAJ,EAAY;AACR,YAAM2B,OAAO,GAAG3G,MAAM,CAACyC,KAAP,CAAayB,OAAb,CAAqBc,MAArB,CAAhB;;AACA,UAAI2B,OAAO,CAAChB,QAAR,KAAqBiB,WAArB,IAAoCC,aAAxC,EAAuD;AACnD,cAAM,IAAI7G,MAAM,CAAC6D,KAAX,CAAiB,KAAjB,EAAwB,mDAAxB,CAAN;AACH;AACJ,KALD,MAKO,IAAIgD,aAAJ,EAAmB;AACtB,YAAM,IAAI7G,MAAM,CAAC6D,KAAX,CAAiB,KAAjB,EAAwB,6CAAxB,CAAN;AACH;AACJ,GAtBU;;AAuBXuC,YAAU,CAAC1D,IAAD,EAAM;AACZ,UAAMsC,MAAM,GAAG3D,QAAQ,CAAC+E,UAAT,CAAoB;AAC/BT,cAAQ,EAAEjD,IAAI,CAACiD,QADgB;AAE/BoB,WAAK,EAAErE,IAAI,CAACkD,MAAL,CAAY,CAAZ,EAAeC,OAFS;AAG/BpC,aAAO,EAAEf,IAAI,CAACe;AAHiB,KAApB,CAAf;;AAKA,QAAIuB,MAAJ,EAAY;AACR9B,kBAAY,CAACJ,YAAb,CAA0BkC,MAA1B,EAAkCtC,IAAI,CAACe,OAAL,CAAaA,OAA/C;AACH;AACJ,GAhCU;;AAiCX0C,YAAU,CAACzD,IAAD,EAAM;AACZ,UAAMsE,WAAW,GAAGhH,MAAM,CAACyC,KAAP,CAAayB,OAAb,CAAqBxB,IAAI,CAAC7B,GAA1B,CAApB;;AACA,QAAImG,WAAW,CAACpB,MAAZ,CAAmB,CAAnB,EAAsBC,OAAtB,KAAkCnD,IAAI,CAACkD,MAAL,CAAY,CAAZ,EAAeC,OAArD,EAA8D;AAC1DxE,cAAQ,CAAC4F,WAAT,CAAqBD,WAAW,CAACnG,GAAjC,EAAsCmG,WAAW,CAACpB,MAAZ,CAAmB,CAAnB,EAAsBC,OAA5D;AACAxE,cAAQ,CAAC6F,QAAT,CAAkBF,WAAW,CAACnG,GAA9B,EAAmC6B,IAAI,CAACkD,MAAL,CAAY,CAAZ,EAAeC,OAAlD;AACH;;AACD,QAAImB,WAAW,CAACrB,QAAZ,KAAyBjD,IAAI,CAACiD,QAAlC,EAA4C;AACxCtE,cAAQ,CAAC8F,WAAT,CAAqBH,WAAW,CAACnG,GAAjC,EAAsC6B,IAAI,CAACiD,QAA3C;AACH;;AACD3F,UAAM,CAACyC,KAAP,CAAazB,MAAb,CAAoB0B,IAAI,CAAC7B,GAAzB,EAA8B;AAC1BI,UAAI,EAAE;AACFwC,eAAO,EAAE;AACLA,iBAAO,EAAEf,IAAI,CAACe,OAAL,CAAaA,OADjB;AAELvB,cAAI,EAAEQ,IAAI,CAACe,OAAL,CAAavB,IAFd;AAGL8D,cAAI,EAAEtD,IAAI,CAACe,OAAL,CAAauC;AAHd;AADP;AADoB,KAA9B;AASA9C,gBAAY,CAACJ,YAAb,CAA0BJ,IAAI,CAAC7B,GAA/B,EAAoC6B,IAAI,CAACe,OAAL,CAAaA,OAAjD;AACH;;AApDU,CAFf,E;;;;;;;;;;;ACAA,MAAMF,eAAe,GAAG,UAAU6D,UAAV,EAAsBC,aAAtB,EAAqC;AACzD,QAAMrC,MAAM,GAAG,KAAKsC,MAApB;AACA,QAAMnF,WAAW,GAAGkF,aAAa,CAAClF,WAAlC;AACA,MAAIoF,aAAa,GAAG,KAApB;;AACA,MAAIvC,MAAM,KAAK,IAAf,EAAqB;AACjB,UAAMC,WAAW,GAAGjF,MAAM,CAAC0C,IAAP,GAAce,OAAd,CAAsBA,OAA1C;AACA8D,iBAAa,GAAG/G,KAAK,CAACgH,YAAN,CAAmBxC,MAAnB,EAA2B7C,WAA3B,EAAwC8C,WAAxC,CAAhB;AACH;;AACD,MAAI,CAACsC,aAAL,EAAoB;AAChB,UAAM,IAAIvH,MAAM,CAAC6D,KAAX,CAAiB,KAAjB,EAAwB,iBAAxB,EACM,6CADN,CAAN;AAEH;;AACD,SAAOuD,UAAP;AACH,CAbD;;AAAAjJ,MAAM,CAACgD,aAAP,CAee;AAAEoC;AAAF,CAff,E;;;;;;;;;;;ACAApF,MAAM,CAACC,MAAP,CAAc;AAACoG,sBAAoB,EAAC,MAAIA;AAA1B,CAAd;;AAAO,MAAMA,oBAAN,SAAmCiD,iBAAnC,CAAqD;AACxDnJ,aAAW,CAAE6D,WAAF,EAAe;AACtB;AACA,SAAKuF,YAAL,GAAoBvF,WAApB;AACH;;AAEDwF,OAAK,CAAEC,OAAF,EAAWC,UAAX,EAAuBC,EAAvB,EAA2BC,MAA3B,EAAmC;AACpC,QAAIH,OAAO,CAACN,MAAZ,EAAoB;AAChB,aAAO,MAAMK,KAAN,CAAY,GAAGK,SAAf,CAAP;AACH;;AACD,WAAOJ,OAAO,CAACK,KAAR,EAAP;AACH;;AAEDC,QAAM,CAAEN,OAAF,EAAWC,UAAX,EAAuBC,EAAvB,EAA2BC,MAA3B,EAAmC;AACrC,QAAI,KAAKxE,eAAL,CAAqBqE,OAAO,CAACN,MAA7B,CAAJ,EAA0C;AACtC,aAAO,MAAMa,OAAN,CAAc,GAAGH,SAAjB,CAAP;AACH;;AACD,WAAOJ,OAAO,CAACK,KAAR,EAAP;AACH;;AAEDG,SAAO,CAAER,OAAF,EAAWC,UAAX,EAAuBC,EAAvB,EAA2B;AAC9B,QAAI,KAAKvE,eAAL,CAAqBqE,OAAO,CAACN,MAA7B,CAAJ,EAA0C;AACtC,aAAO,MAAMc,OAAN,CAAc,GAAGJ,SAAjB,CAAP;AACH;;AACD,WAAOJ,OAAO,CAACK,KAAR,EAAP;AACH;;AAEDI,SAAO,CAAET,OAAF,EAAW;AACd,QAAIA,OAAO,CAACN,MAAZ,EAAoB;AAChB,aAAO,MAAMe,OAAN,CAAc,GAAGL,SAAjB,CAAP;AACH;AACJ;;AAEDM,QAAM,CAAEV,OAAF,EAAW;AACb,QAAIA,OAAO,CAACN,MAAZ,EAAoB;AAChB,aAAO,MAAMgB,MAAN,CAAa,GAAGN,SAAhB,CAAP;AACH;AACJ;;AAEDO,SAAO,CAAEX,OAAF,EAAW;AACd,QAAIA,OAAO,CAACN,MAAZ,EAAoB;AAChB,aAAO,MAAMiB,OAAN,CAAc,GAAGP,SAAjB,CAAP;AACH;AACJ;;AAEDzE,iBAAe,CAAEyB,MAAF,EAAU;AACrB,UAAMC,WAAW,GAAGzE,KAAK,CAACgI,gBAAN,CAAuBxD,MAAvB,EAA+B,CAA/B,CAApB;AACA,WAAOxE,KAAK,CAACgH,YAAN,CAAmBxC,MAAnB,EAA2B,KAAK0C,YAAhC,EAA8CzC,WAA9C,CAAP;AACH;;AAhDuD;;AAiD3D,C;;;;;;;;;;;ACjDD9G,MAAM,CAACiD,IAAP,CAAY,yBAAZ;AAAuCjD,MAAM,CAACiD,IAAP,CAAY,uBAAZ,E","file":"/app.js","sourcesContent":["export class ResponseMessage {\r\n    constructor(){\r\n        this.message = null;\r\n        this.description = null;\r\n        this.data = null;\r\n    }\r\n    \r\n    create(message, description = null, data = null){\r\n        this.message = message;\r\n        this.description = description;\r\n        this.data = data;\r\n    }\r\n}","const Permissions = {\r\n    USERS: {\r\n        LIST: {VALUE: 'users-view', TEXT: 'Listar usuarios'},\r\n        CREATE: {VALUE: 'users-create', TEXT: 'Crear usuario'},\r\n        UPDATE: {VALUE: 'users-edit', TEXT: 'Actualizar usuario'},\r\n        DELETE: {VALUE: 'users-delete', TEXT: 'Eliminar usuario'}\r\n    },\r\n    PROFILES: {\r\n        LIST: {VALUE: 'profiles-view', TEXT: 'Listar perfiles'},\r\n        CREATE: {VALUE: 'profiles-create', TEXT: 'Crear perfil'},\r\n        UPDATE: {VALUE: 'profiles-edit', TEXT: 'Actualizar perfil'},\r\n        DELETE: {VALUE: 'profiles-delete', TEXT: 'Eliminar perfil'}\r\n    },\r\n    PERMISSIONS: {\r\n        LIST: {VALUE: 'permissions-view', TEXT: 'Listar permisos'}\r\n    }\r\n};\r\n\r\nexport const permissionsArray = Object.keys(Permissions).reduce((accumulator, systemModuleName) => {\r\n    const systemModuleObject = Permissions[systemModuleName];\r\n    const modulePermissions = Object.keys(systemModuleObject).map(permission => systemModuleObject[permission]);\r\n    return accumulator.concat(modulePermissions);\r\n}, []);\r\n\r\nif (Meteor.isDevelopment) {\r\n    if (Meteor.settings.private && Meteor.settings.private.REFRESH_PERMISSIONS) {\r\n        console.log('uplading permissions. . .');\r\n        const currentRoles = Roles.getAllRoles().fetch();\r\n        for (let permission of permissionsArray) {\r\n            if (!currentRoles.find(_role => _role._id === permission.VALUE)) {\r\n                Roles.createRole(permission.VALUE);\r\n            }\r\n            Meteor.roles.update(permission.VALUE, {\r\n                $set: {\r\n                    publicName: permission.TEXT\r\n                }\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\nexport default Permissions;","import './Permissions';\r\n\r\nimport '../../api/Users/User';\r\nimport '../../api/Users/UsersCtrl';\r\nimport '../../api/Users/UsersPubs'; \r\n\r\nimport '../../api/Profiles/ProfileSeeder';\r\nimport '../../api/Profiles/ProfilesCtrl';\r\nimport '../../api/Profiles/ProfilesPubs';","Accounts.config( {\r\n    loginExpirationInDays: 30\r\n})","import {Mongo} from 'meteor/mongo';\r\n\r\nexport const Profile = new Mongo.Collection('profiles');","import Permissions, {permissionsArray} from \"../../startup/server/Permissions\"\r\nimport { Profile } from \"./Profile\";\r\n\r\nProfile.rawCollection().createIndex({'name': 1}, {unique: true});\r\n\r\nexport const StaticProfiles = {\r\n    admin: {\r\n        name: 'admin',\r\n        description: 'Administrador',\r\n        permissions: permissionsArray.map(p=>p.VALUE)\r\n    }\r\n};\r\n\r\nif (Meteor.isDevelopment) {\r\n    if (Meteor.settings.private && Meteor.settings.private.REFRESH_STATIC_PROFILES) {\r\n        console.log('updating static profiles. . .');\r\n        Object.keys(StaticProfiles).forEach(staticProfileName => {\r\n            Profile.upsert({name: StaticProfiles[staticProfileName].name}, {\r\n                $set: {\r\n                    description: StaticProfiles[staticProfileName].description,\r\n                    permissions: StaticProfiles[staticProfileName].permissions,\r\n                }\r\n            });\r\n            Meteor.users.find({ 'profile.profile': StaticProfiles[staticProfileName].name}).fetch().forEach(user => {\r\n                Meteor.roleAssignment.remove({'user._id': user._id});\r\n                if (StaticProfiles[staticProfileName].permissions.length > 0) {\r\n                    Roles.setUserRoles(user._id, StaticProfiles[staticProfileName].permissions, StaticProfiles[staticProfileName].name);\r\n                }\r\n            })\r\n        });\r\n    }\r\n};","import {check, Match} from 'meteor/check';\r\nimport AuthGuard from '../../middlewares/AuthGuard';\r\nimport Permissions from '../../startup/server/Permissions';\r\nimport { ResponseMessage } from '../../startup/server/utilities/ResponseMessage';\r\nimport {Profile} from './Profile';\r\nimport ProfilesServ from './ProfilesServ';\r\n\r\nnew ValidatedMethod({\r\n    name: 'profile.save',\r\n    mixins: [MethodHooks],\r\n    permissions: [Permissions.PROFILES.CREATE.VALUE, Permissions.PROFILES.UPDATE.VALUE],\r\n    beforeHooks: [AuthGuard.checkPermission],\r\n    validate(profile) {\r\n        try {\r\n            check(profile, {\r\n                _id: Match.OneOf(String, null),\r\n                name: String,\r\n                description: String,\r\n                permissions: [String]\r\n            });\r\n        } catch (error) {\r\n            console.error('profile.save', error);\r\n            throw new Meteor.Error('403', 'La informacion no es valida');\r\n        }\r\n        ProfilesServ.validateName(profile.name, profile._id);\r\n    },\r\n    run(profile) {\r\n        const responseMessage = new ResponseMessage();\r\n        if (profile._id !== null) {\r\n        try {\r\n            // UPDATE PROFILE\r\n            const oldProfile = Profile.findOne(profile._id);\r\n            const users = ProfilesServ.getUsersByProfile(profile._id);\r\n            Profile.update(profile._id, {\r\n                $set: {\r\n                    name: profile.name,\r\n                    description: profile.description,\r\n                    permissions: profile.permissions\r\n                }\r\n            });\r\n            if (oldProfile.name !== profile.name) {\r\n                Meteor.users.update({'profile.profile': oldProfile.name}, {\r\n                    $set: {\r\n                        'profile.profile': profile.name\r\n                    }\r\n                },{ multi:true });\r\n            }\r\n            ProfilesServ.updateProfileUsers(users, profile);\r\n            responseMessage.create('Se actualizo el perfil exitosamente');\r\n        } catch (error) {\r\n            console.error('profile.save', error);\r\n            throw new Meteor.Error('500', 'Ocurrio un error al actualizar el perfil');\r\n        }         \r\n        } else {\r\n            try {\r\n                // CREATE PROFILE\r\n                Profile.insert({\r\n                    name: profile.name,\r\n                    description: profile.description,\r\n                    permissions: profile.permissions\r\n                });\r\n                responseMessage.create('Se creo el perfil exitosamente');\r\n            } catch (error) {\r\n                console.error('profile.save', error);\r\n                throw new Meteor.Error('500', 'Ocurrio un error al crear el nuevo perfil');\r\n            }\r\n        }\r\n        return responseMessage;\r\n    }\r\n});\r\n\r\nnew ValidatedMethod( {\r\n    name: 'profile.delete',\r\n    mixins: [MethodHooks],\r\n    permissions: [Permissions.PROFILES.DELETE.VALUE],\r\n    beforeHooks: [AuthGuard.checkPermission],\r\n    validate({ idProfile }) {\r\n        try {\r\n            check(idProfile, String);\r\n        } catch (error) {\r\n            console.error('profile.delete', error);\r\n            throw new Meteor.Error('403', 'La informacion introducida no es valida');\r\n        }\r\n    },\r\n    run({ idProfile }) {\r\n        const responseMessage = new ResponseMessage();\r\n        try {\r\n            Profile.remove(idProfile);\r\n            responseMessage.create('Perfil eliminado exitosamente');\r\n        } catch (error) {\r\n            console.error('profile.delete', error);\r\n            throw new Meteor.Error('403', 'La informacion introducida no es valida');\r\n        }\r\n        return responseMessage;\r\n    }\r\n});","import { PermissionMiddleware } from \"../../middlewares/PermissionsMiddleware\";\r\nimport Permissions from \"../../startup/server/Permissions\";\r\nimport { Profile } from \"./Profile\"\r\nimport ProfilesServ from \"./ProfilesServ\";\r\n\r\nconst noStaticProfilesPublication = new PublishEndpoint('profile.listNotStaticProfiles', function() {\r\n    return Profile.find({name: {$nin: ProfilesServ.getStaticProfileName() }});\r\n}); \r\n\r\nconst profilesPublication = new PublishEndpoint('profile.listAll', function() {\r\n    return Profile.find();\r\n}); \r\n\r\nprofilesPublication.use(new PermissionMiddleware([Permissions.PROFILES.LIST.VALUE]));\r\nnoStaticProfilesPublication.use(new PermissionMiddleware([Permissions.PROFILES.LIST.VALUE]));","import { Profile } from \"./Profile\"\r\nimport { StaticProfiles } from \"./ProfileSeeder\";\r\n\r\nexport default {\r\n    validateName(name, idProfile){\r\n        const existName = Profile.findOne({name});\r\n        if (idProfile) {\r\n            const oldProfile = Profile.findOne(idProfile);\r\n            if (oldProfile.name !== name && existName) {\r\n                throw new Meteor.Error('403', \"El nuevo nombre de perfil ya se encuentra en uso\");\r\n            }\r\n        } else if (existName) {\r\n            throw new Meteor.Error('403', \"El nombre de perfil ya se encuentra en uso\");\r\n        }\r\n    },\r\n    getUsersByProfile(idProfile) {\r\n        const profile = Profile.findOne(idProfile);\r\n        return Meteor.users.find({'profile.profile': profile.name}).fetch();\r\n    },\r\n    setUserRoles(idUser, profileName) {\r\n        const permissions = Profile.findOne({name: profileName}).permissions;\r\n        Meteor.roleAssignment.remove({'user._id': idUser});\r\n        Roles.setUserRoles(idUser, permissions, profileName);\r\n    },\r\n    updateProfileUsers(users, profile) {\r\n        users.forEach(user => {\r\n            this.setUserRoles(user._id, profile.name);\r\n        });\r\n    },\r\n    getStaticProfileName() {\r\n        return Object.keys(StaticProfiles).map(staticProfileName => {\r\n            return StaticProfiles[staticProfileName].name;\r\n        });\r\n    }\r\n};","Meteor.users.rawCollection().createIndex({ 'profile.profile': 1 })","import {ValidatedMethod} from 'meteor/mdg:validated-method';\r\nimport {check, Match} from 'meteor/check';\r\nimport { ResponseMessage } from '../../startup/server/utilities/ResponseMessage';\r\nimport UsersServ from './UsersServ';\r\nimport AuthGuard from '../../middlewares/AuthGuard';\r\nimport Permissions from '../../startup/server/Permissions';\r\n\r\nAccounts.validateLoginAttempt(loginAttempt => {\r\n    if (loginAttempt.allowed) {\r\n        const loginTokensOfUser = loginAttempt.user.services.resume?.loginTokens || [];\r\n        if (loginTokensOfUser.length > 1) {\r\n            Meteor.users.update(loginAttempt.user._id, {\r\n                $set: {\r\n                    'services.resume.loginTokens': [loginTokensOfUser.pop()]\r\n                }\r\n            });\r\n        }\r\n        return true;\r\n    }\r\n});\r\n\r\nnew ValidatedMethod ({\r\n    name: 'user.save',\r\n    mixins: [MethodHooks],\r\n    permissions: [Permissions.USERS.CREATE.VALUE, Permissions.USERS.UPDATE.VALUE],\r\n    beforeHooks: [AuthGuard.checkPermission],\r\n    validate(user){\r\n        try {\r\n            check(user, {\r\n                _id: Match.OneOf(String, null),\r\n                username: String,\r\n                emails: [{address: String, verified: Boolean}],\r\n                profile: {\r\n                    profile: String,\r\n                    name: String,\r\n                    path: Match.OneOf(String, null)\r\n                }\r\n            })\r\n        } catch (error) {\r\n            console.log('save.user', error);\r\n            throw new Meteor.Error('403', 'La informacion introducida no es valida');\r\n        }\r\n        UsersServ.validateEmail(user.emails[0].address, user._id);\r\n        UsersServ.validateUsername(user.username, user._id);\r\n    },\r\n    run(user){\r\n        const responseMessage = new ResponseMessage();\r\n        if (user._id !== null) {\r\n            try {\r\n                // UPDATE USER \r\n                UsersServ.updateUser(user);\r\n                responseMessage.create('Se actualizo el usuario exitosamente');\r\n            } catch (error) {\r\n                console.error('user.save', error);\r\n                throw new Meteor.Error('500', 'Ocurrio un error al actualizar el usuario');\r\n            }\r\n        } else {\r\n            try {\r\n                // CREATE USER\r\n                UsersServ.createUser(user);\r\n                responseMessage.create('Se ha creado usuario exitosamente');\r\n            } catch (error) {\r\n                console.error('user.save: ', error);\r\n                throw new Meteor.Error('500', 'Ocurrió un error al crear un usuario');\r\n            }\r\n        }\r\n        return responseMessage;\r\n    }\r\n});\r\n\r\nnew ValidatedMethod({\r\n    name: 'user.delete',\r\n    mixins: [MethodHooks],\r\n    permissions: [Permissions.USERS.DELETE.VALUE],\r\n    beforeHooks: [AuthGuard.checkPermission],\r\n    validate({idUser}){\r\n        try {\r\n            check(idUser, String);\r\n        } catch (error) {\r\n            console.error('user.delete', error);\r\n            throw new Meteor.Error('403', 'La informacion introducida no es valida');\r\n        }\r\n    },\r\n    run({idUser}){\r\n        const responseMessage = new ResponseMessage;\r\n        try {\r\n            Meteor.users.remove(idUser);\r\n            Meteor.roleAssignment.remove({'user._id': idUser});\r\n            responseMessage.create('Se ha eliminado exitosamente al usuario');\r\n        } catch (error) {\r\n            console.error('user.delete', error);\r\n            throw new Meteor.Error('500', 'Ocurrio un error al eliminar un usuario');\r\n        }\r\n        return responseMessage;\r\n    }\r\n});","import {Meteor} from 'meteor/meteor';\r\nimport {PublishEndpoint} from 'meteor/peerlibrary:middleware';\r\nimport { PermissionMiddleware } from '../../middlewares/PermissionsMiddleware';\r\nimport Permissions from '../../startup/server/Permissions';\r\n\r\nconst usersPublication = new PublishEndpoint('user.list', function() {\r\n    return Meteor.users.find({}, {\r\n        sort: {createdAt: -1}\r\n    });\r\n});\r\n\r\nusersPublication.use(new PermissionMiddleware([Permissions.USERS.LIST.VALUE]));","import ProfilesServ from '../Profiles/ProfilesServ';\r\n\r\nexport default {\r\n    validateEmail(newEmail, idUser){\r\n        const existEmail = Accounts.findUserByEmail(newEmail);\r\n        if (idUser) {\r\n            const oldUser = Meteor.users.findOne(idUser);\r\n            if (oldUser.emails[0].address !== newEmail && existEmail) {\r\n                throw new Meteor.Error('403', 'El nuevo email ya se encuentra en uso');\r\n            }\r\n        } else if (existEmail) {\r\n            throw new Meteor.Error('403', 'El nuevo email ya se encuetra en uso');\r\n        }\r\n    },\r\n    validateUsername(newUsername, idUser){\r\n        const existUsername = Accounts.findUserByUsername(newUsername);\r\n        if (idUser) {\r\n            const oldUser = Meteor.users.findOne(idUser);\r\n            if (oldUser.username !== newUsername && existUsername) {\r\n                throw new Meteor.Error('403', \"El nuevo nombre de usuario ya se encuentra en uso\");\r\n            }\r\n        } else if (existUsername) {\r\n            throw new Meteor.Error('403', \"El nombre de usuario ya se encuentra en uso\");\r\n        }\r\n    },\r\n    createUser(user){\r\n        const idUser = Accounts.createUser({\r\n            username: user.username,\r\n            email: user.emails[0].address,\r\n            profile: user.profile\r\n        });\r\n        if (idUser) {\r\n            ProfilesServ.setUserRoles(idUser, user.profile.profile);\r\n        }\r\n    },\r\n    updateUser(user){\r\n        const currentUser = Meteor.users.findOne(user._id);\r\n        if (currentUser.emails[0].address !== user.emails[0].address) {\r\n            Accounts.removeEmail(currentUser._id, currentUser.emails[0].address);\r\n            Accounts.addEmail(currentUser._id, user.emails[0].address);\r\n        }\r\n        if (currentUser.username !== user.username) {\r\n            Accounts.setUsername(currentUser._id, user.username);\r\n        }\r\n        Meteor.users.update(user._id, {\r\n            $set: {\r\n                profile: {\r\n                    profile: user.profile.profile,\r\n                    name: user.profile.name,\r\n                    path: user.profile.path\r\n                }\r\n            }\r\n        });\r\n        ProfilesServ.setUserRoles(user._id, user.profile.profile);\r\n    }\r\n}","const checkPermission = function (methodArgs, methodOptions) {\r\n    const idUser = this.userId;\r\n    const permissions = methodOptions.permissions;\r\n    let hasPermission = false;\r\n    if (idUser !== null) {\r\n        const profileName = Meteor.user().profile.profile;\r\n        hasPermission = Roles.userIsInRole(idUser, permissions, profileName);\r\n    }\r\n    if (!hasPermission) {\r\n        throw new Meteor.Error('403', 'Acceso denegado', \r\n                    'No tienes permiso para ejecutar esta accion');\r\n    }\r\n    return methodArgs;\r\n};\r\n\r\nexport default { checkPermission };","export class PermissionMiddleware extends PublishMiddleware {\r\n    constructor (permissions) {\r\n        super();\r\n        this._permissions = permissions;\r\n    }\r\n    \r\n    added (publish, collection, id, fields) {\r\n        if (publish.userId) {\r\n            return super.added(...arguments);\r\n        }\r\n        return publish.ready();\r\n    }\r\n    \r\n    change (publish, collection, id, fields) {\r\n        if (this.checkPermission(publish.userId)) {\r\n            return super.changed(...arguments);\r\n        }\r\n        return publish.ready();\r\n    }\r\n    \r\n    removed (publish, collection, id) {\r\n        if (this.checkPermission(publish.userId)) {\r\n            return super.removed(...arguments);\r\n        }\r\n        return publish.ready();\r\n    }\r\n\r\n    onReady (publish) {\r\n        if (publish.userId) {\r\n            return super.onReady(...arguments);\r\n        }\r\n    }\r\n\r\n    onStop (publish) {\r\n        if (publish.userId) {\r\n            return super.onStop(...arguments);\r\n        }\r\n    }\r\n\r\n    onError (publish) {\r\n        if (publish.userId) {\r\n            return super.onError(...arguments);\r\n        }\r\n    }\r\n\r\n    checkPermission (idUser) {\r\n        const profileName = Roles.getScopesForUser(idUser)[0];\r\n        return Roles.userIsInRole(idUser, this._permissions, profileName);\r\n    }\r\n};","import \"/imports/startup/server\";\r\nimport \"/imports/startup/both\";"]}}]