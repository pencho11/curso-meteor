[{"type":"js","data":"//////////////////////////////////////////////////////////////////////////\n//                                                                      //\n// This is a generated file. You can view the original                  //\n// source in your browser if your browser supports source maps.         //\n// Source maps are supported by all recent versions of Chrome, Safari,  //\n// and Firefox, and by Internet Explorer 11.                            //\n//                                                                      //\n//////////////////////////////////////////////////////////////////////////\n\n\n(function () {\n\n/* Imports */\nvar Meteor = Package.meteor.Meteor;\nvar global = Package.meteor.global;\nvar meteorEnv = Package.meteor.meteorEnv;\nvar meteorInstall = Package.modules.meteorInstall;\nvar Promise = Package.promise.Promise;\n\nvar require = meteorInstall({\"node_modules\":{\"meteor\":{\"socialize:server-time\":{\"client\":{\"entry-meteor.js\":function module(require,exports,module){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                              //\n// packages/socialize_server-time/client/entry-meteor.js                                        //\n//                                                                                              //\n//////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                //\nmodule.export({\n  ServerTime: () => ServerTime\n});\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet construct;\nmodule.link(\"./server-time.js\", {\n  default(v) {\n    construct = v;\n  }\n\n}, 1);\nconst ServerTime = construct({\n  Meteor\n}); // At startup, wait a couple seconds so that we can get a more accurate latency estimation.\n// This is far from optimal but should work.\n\nMeteor.startup(() => Meteor.setTimeout(() => ServerTime.init(), 2000));\n//////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"server-time.js\":function module(require,exports,module){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                              //\n// packages/socialize_server-time/client/server-time.js                                         //\n//                                                                                              //\n//////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                //\nlet ServerTime;\nmodule.link(\"../common/server-time\", {\n  ServerTime(v) {\n    ServerTime = v;\n  }\n\n}, 0);\nmodule.exportDefault(_ref => {\n  let {\n    Meteor\n  } = _ref;\n\n  ServerTime.init = () => {\n    ServerTime._diffStart = Date.now();\n    Meteor.call('socialize:getServerTime', (error, serverTimeStamp) => {\n      if (!error) {\n        const now = Date.now();\n        const latency = now - ServerTime._diffStart;\n        ServerTime._timeDifference = serverTimeStamp + latency - now;\n      } else {\n        throw error;\n      }\n    });\n  };\n\n  if (!Meteor.isReactNative) {} else {\n    setTimeout(() => ServerTime.init(), 2000);\n  }\n\n  return ServerTime;\n});\n//////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"common\":{\"server-time.js\":function module(require,exports,module){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                              //\n// packages/socialize_server-time/common/server-time.js                                         //\n//                                                                                              //\n//////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                //\nmodule.export({\n  ServerTime: () => ServerTime\n});\nconst ServerTime = {\n  _timeDifference: 0\n};\n\nServerTime.now = function now() {\n  return Date.now() + this._timeDifference;\n};\n\nServerTime.date = function date() {\n  return new Date(this.now());\n};\n//////////////////////////////////////////////////////////////////////////////////////////////////\n\n}}}}}},{\n  \"extensions\": [\n    \".js\",\n    \".json\"\n  ]\n});\n\nvar exports = require(\"/node_modules/meteor/socialize:server-time/client/entry-meteor.js\");\n\n/* Exports */\nPackage._define(\"socialize:server-time\", exports);\n\n})();\n","servePath":"/packages/socialize_server-time.js","sourceMap":{"version":3,"sources":["packages/socialize:server-time/client/entry-meteor.js","packages/socialize:server-time/client/server-time.js","packages/socialize:server-time/common/server-time.js"],"names":["module","export","ServerTime","Meteor","link","v","construct","default","startup","setTimeout","init","exportDefault","_diffStart","Date","now","call","error","serverTimeStamp","latency","_timeDifference","isReactNative","date"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAAA,MAAM,CAACC,MAAP,CAAc;AAACC,YAAU,EAAC,MAAIA;AAAhB,CAAd;AAA2C,IAAIC,MAAJ;AAAWH,MAAM,CAACI,IAAP,CAAY,eAAZ,EAA4B;AAACD,QAAM,CAACE,CAAD,EAAG;AAACF,UAAM,GAACE,CAAP;AAAS;;AAApB,CAA5B,EAAkD,CAAlD;AAAqD,IAAIC,SAAJ;AAAcN,MAAM,CAACI,IAAP,CAAY,kBAAZ,EAA+B;AAACG,SAAO,CAACF,CAAD,EAAG;AAACC,aAAS,GAACD,CAAV;AAAY;;AAAxB,CAA/B,EAAyD,CAAzD;AAMzH,MAAMH,UAAU,GAAGI,SAAS,CAAC;AAAEH;AAAF,CAAD,CAA5B,C,CAEA;AACA;;AACAA,MAAM,CAACK,OAAP,CAAe,MAAML,MAAM,CAACM,UAAP,CAAkB,MAAMP,UAAU,CAACQ,IAAX,EAAxB,EAA2C,IAA3C,CAArB,E;;;;;;;;;;;ACVA,IAAIR,UAAJ;AAAeF,MAAM,CAACI,IAAP,CAAY,uBAAZ,EAAoC;AAACF,YAAU,CAACG,CAAD,EAAG;AAACH,cAAU,GAACG,CAAX;AAAa;;AAA5B,CAApC,EAAkE,CAAlE;AAAfL,MAAM,CAACW,aAAP,CAEe,QAAgB;AAAA,MAAf;AAAER;AAAF,GAAe;;AAC3BD,YAAU,CAACQ,IAAX,GAAkB,MAAM;AACpBR,cAAU,CAACU,UAAX,GAAwBC,IAAI,CAACC,GAAL,EAAxB;AAEAX,UAAM,CAACY,IAAP,CAAY,yBAAZ,EAAuC,CAACC,KAAD,EAAQC,eAAR,KAA4B;AAC/D,UAAI,CAACD,KAAL,EAAY;AACR,cAAMF,GAAG,GAAGD,IAAI,CAACC,GAAL,EAAZ;AACA,cAAMI,OAAO,GAAGJ,GAAG,GAAGZ,UAAU,CAACU,UAAjC;AAEAV,kBAAU,CAACiB,eAAX,GAA8BF,eAAe,GAAGC,OAAnB,GAA8BJ,GAA3D;AACH,OALD,MAKO;AACH,cAAOE,KAAP;AACH;AACJ,KATD;AAUH,GAbD;;AAeA,MAAI,CAACb,MAAM,CAACiB,aAAZ,EAA2B,CAE1B,CAFD,MAEO;AACHX,cAAU,CAAC,MAAMP,UAAU,CAACQ,IAAX,EAAP,EAA0B,IAA1B,CAAV;AACH;;AAED,SAAOR,UAAP;AACH,CAzBD,E;;;;;;;;;;;ACAAF,MAAM,CAACC,MAAP,CAAc;AAACC,YAAU,EAAC,MAAIA;AAAhB,CAAd;AAAO,MAAMA,UAAU,GAAG;AACtBiB,iBAAe,EAAE;AADK,CAAnB;;AAIPjB,UAAU,CAACY,GAAX,GAAiB,SAASA,GAAT,GAAe;AAAE,SAAOD,IAAI,CAACC,GAAL,KAAa,KAAKK,eAAzB;AAA2C,CAA7E;;AAEAjB,UAAU,CAACmB,IAAX,GAAkB,SAASA,IAAT,GAAgB;AAAE,SAAO,IAAIR,IAAJ,CAAS,KAAKC,GAAL,EAAT,CAAP;AAA8B,CAAlE,C","file":"/packages/socialize_server-time.js","sourcesContent":["/* eslint-disable import/no-unresolved */\nimport { Meteor } from 'meteor/meteor';\n/* eslint-enable import/no-unresolved */\n\nimport construct from './server-time.js';\n\nconst ServerTime = construct({ Meteor });\n\n// At startup, wait a couple seconds so that we can get a more accurate latency estimation.\n// This is far from optimal but should work.\nMeteor.startup(() => Meteor.setTimeout(() => ServerTime.init(), 2000));\n\nexport { ServerTime };\n","import { ServerTime } from '../common/server-time';\n\nexport default ({ Meteor }) => {\n    ServerTime.init = () => {\n        ServerTime._diffStart = Date.now();\n\n        Meteor.call('socialize:getServerTime', (error, serverTimeStamp) => {\n            if (!error) {\n                const now = Date.now();\n                const latency = now - ServerTime._diffStart;\n\n                ServerTime._timeDifference = (serverTimeStamp + latency) - now;\n            } else {\n                throw (error);\n            }\n        });\n    };\n\n    if (!Meteor.isReactNative) {\n        \n    } else {\n        setTimeout(() => ServerTime.init(), 2000);\n    }\n\n    return ServerTime;\n};\n","export const ServerTime = {\n    _timeDifference: 0,\n};\n\nServerTime.now = function now() { return Date.now() + this._timeDifference; };\n\nServerTime.date = function date() { return new Date(this.now()); };\n"]}}]