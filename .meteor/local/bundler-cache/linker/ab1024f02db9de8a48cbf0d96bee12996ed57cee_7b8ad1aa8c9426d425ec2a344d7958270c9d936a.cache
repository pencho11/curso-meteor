[{"type":"js","data":"(function () {\n\n/* Imports */\nvar Meteor = Package.meteor.Meteor;\nvar global = Package.meteor.global;\nvar meteorEnv = Package.meteor.meteorEnv;\nvar MongoInternals = Package.mongo.MongoInternals;\nvar Mongo = Package.mongo.Mongo;\nvar ECMAScript = Package.ecmascript.ECMAScript;\nvar Collection2 = Package['aldeed:collection2'].Collection2;\nvar CollectionHooks = Package['matb33:collection-hooks'].CollectionHooks;\nvar meteorInstall = Package.modules.meteorInstall;\nvar Promise = Package.promise.Promise;\n\nvar require = meteorInstall({\"node_modules\":{\"meteor\":{\"socialize:linkable-model\":{\"common\":{\"common.js\":function module(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// packages/socialize_linkable-model/common/common.js                                                                //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\nmodule.export({\n  LinkableModel: () => LinkableModel,\n  LinkParent: () => LinkParent\n});\nlet BaseModel;\nmodule.link(\"meteor/socialize:base-model\", {\n  BaseModel(v) {\n    BaseModel = v;\n  }\n\n}, 0);\nlet LinkParentConstruct;\nmodule.link(\"./link-parent.js\", {\n  default(v) {\n    LinkParentConstruct = v;\n  }\n\n}, 1);\nlet LinkableModelConstruct;\nmodule.link(\"./linkable-model.js\", {\n  default(v) {\n    LinkableModelConstruct = v;\n  }\n\n}, 2);\nconst LinkParent = LinkParentConstruct(BaseModel);\nconst LinkableModel = LinkableModelConstruct();\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"link-parent.js\":function module(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// packages/socialize_linkable-model/common/link-parent.js                                                           //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\nmodule.exportDefault(BaseModel =>\n/**\n* A Model that is linked to by LinkableModel's\n* @class LinkedModel\n*/\nclass LinkParent extends BaseModel {\n  getLinkObject() {\n    return {\n      linkedObjectId: this._id,\n      objectType: this._objectType\n    };\n  }\n\n});\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"linkable-model.js\":function module(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// packages/socialize_linkable-model/common/linkable-model.js                                                        //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\nlet SimpleSchema;\nmodule.link(\"simpl-schema\", {\n  default(v) {\n    SimpleSchema = v;\n  }\n\n}, 0);\nmodule.exportDefault(() => {\n  // a place to store references to the collections where the commentable objects are stored.\n  const LinkableTypes = {};\n  /**\n  * A scaffold for creating models which can link records from one collection to records from many other collections\n  * @mixin LinkableModel\n  */\n\n  const LinkableModel = Base => class extends Base {\n    /**\n    * getCollectionForParentLink - Get the collection for the ParentLink\n    *\n    * @return {Mongo.Collection} The Collection attached to the ParentLink\n    */\n    getCollectionForParentLink() {\n      return LinkableTypes[this.objectType];\n    }\n    /**\n    * linkedObject - Get the model for the linked record\n    *\n    * @return {Model}  A model of varying types depending on the linked objects type\n    */\n\n\n    linkedParent() {\n      const collection = this.getCollectionForParentLink();\n      return collection.findOne({\n        _id: this.linkedObjectId\n      });\n    }\n\n  };\n  /**\n  * Register a data type that can be linked to another model, storing its collection so we can find the object later\n  * @param {BaseModel}           type       The name of the type\n  * @param {Mongo.Collection} collection The collection where the type of data is stored\n  */\n\n\n  LinkableModel.registerParentModel = function registerParentModel(model) {\n    const type = model.prototype.getCollectionName();\n    model.prototype._objectType = type; // eslint-disable-line\n\n    LinkableTypes[type] = model.prototype.getCollection();\n  };\n\n  LinkableModel.LinkableSchema = new SimpleSchema({\n    linkedObjectId: {\n      type: String,\n      regEx: SimpleSchema.RegEx.Id,\n      index: 1\n    },\n    objectType: {\n      type: String,\n      denyUpdate: true\n    }\n  });\n  return LinkableModel;\n});\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}}}}}},{\n  \"extensions\": [\n    \".js\",\n    \".json\"\n  ]\n});\n\nvar exports = require(\"/node_modules/meteor/socialize:linkable-model/common/common.js\");\n\n/* Exports */\nPackage._define(\"socialize:linkable-model\", exports);\n\n})();\n","servePath":"/packages/socialize_linkable-model.js","sourceMap":{"version":3,"sources":["packages/socialize:linkable-model/common/common.js","packages/socialize:linkable-model/common/link-parent.js","packages/socialize:linkable-model/common/linkable-model.js"],"names":["module","export","LinkableModel","LinkParent","BaseModel","link","v","LinkParentConstruct","default","LinkableModelConstruct","exportDefault","getLinkObject","linkedObjectId","_id","objectType","_objectType","SimpleSchema","LinkableTypes","Base","getCollectionForParentLink","linkedParent","collection","findOne","registerParentModel","model","type","prototype","getCollectionName","getCollection","LinkableSchema","String","regEx","RegEx","Id","index","denyUpdate"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAAA,MAAM,CAACC,MAAP,CAAc;AAACC,eAAa,EAAC,MAAIA,aAAnB;AAAiCC,YAAU,EAAC,MAAIA;AAAhD,CAAd;AAA2E,IAAIC,SAAJ;AAAcJ,MAAM,CAACK,IAAP,CAAY,6BAAZ,EAA0C;AAACD,WAAS,CAACE,CAAD,EAAG;AAACF,aAAS,GAACE,CAAV;AAAY;;AAA1B,CAA1C,EAAsE,CAAtE;AAAyE,IAAIC,mBAAJ;AAAwBP,MAAM,CAACK,IAAP,CAAY,kBAAZ,EAA+B;AAACG,SAAO,CAACF,CAAD,EAAG;AAACC,uBAAmB,GAACD,CAApB;AAAsB;;AAAlC,CAA/B,EAAmE,CAAnE;AAAsE,IAAIG,sBAAJ;AAA2BT,MAAM,CAACK,IAAP,CAAY,qBAAZ,EAAkC;AAACG,SAAO,CAACF,CAAD,EAAG;AAACG,0BAAsB,GAACH,CAAvB;AAAyB;;AAArC,CAAlC,EAAyE,CAAzE;AAO3R,MAAMH,UAAU,GAAGI,mBAAmB,CAACH,SAAD,CAAtC;AACA,MAAMF,aAAa,GAAGO,sBAAsB,EAA5C,C;;;;;;;;;;;ACRAT,MAAM,CAACU,aAAP,CAAeN,SAAS;AACpB;AACJ;AACA;AACA;AACI,MAAMD,UAAN,SAAyBC,SAAzB,CAAmC;AAC/BO,eAAa,GAAG;AACZ,WAAO;AAAEC,oBAAc,EAAE,KAAKC,GAAvB;AAA4BC,gBAAU,EAAE,KAAKC;AAA7C,KAAP;AACH;;AAH8B,CALvC,E;;;;;;;;;;;ACAA,IAAIC,YAAJ;AAAiBhB,MAAM,CAACK,IAAP,CAAY,cAAZ,EAA2B;AAACG,SAAO,CAACF,CAAD,EAAG;AAACU,gBAAY,GAACV,CAAb;AAAe;;AAA3B,CAA3B,EAAwD,CAAxD;AAAjBN,MAAM,CAACU,aAAP,CAIe,MAAM;AACjB;AACA,QAAMO,aAAa,GAAG,EAAtB;AAEA;AACJ;AACA;AACA;;AACI,QAAMf,aAAa,GAAGgB,IAAI,IAAI,cAAcA,IAAd,CAAmB;AAC7C;AACR;AACA;AACA;AACA;AACQC,8BAA0B,GAAG;AACzB,aAAOF,aAAa,CAAC,KAAKH,UAAN,CAApB;AACH;AACD;AACR;AACA;AACA;AACA;;;AACQM,gBAAY,GAAG;AACX,YAAMC,UAAU,GAAG,KAAKF,0BAAL,EAAnB;AACA,aAAOE,UAAU,CAACC,OAAX,CAAmB;AAAET,WAAG,EAAE,KAAKD;AAAZ,OAAnB,CAAP;AACH;;AAjB4C,GAAjD;AAoBA;AACJ;AACA;AACA;AACA;;;AACIV,eAAa,CAACqB,mBAAd,GAAoC,SAASA,mBAAT,CAA6BC,KAA7B,EAAoC;AACpE,UAAMC,IAAI,GAAGD,KAAK,CAACE,SAAN,CAAgBC,iBAAhB,EAAb;AAEAH,SAAK,CAACE,SAAN,CAAgBX,WAAhB,GAA8BU,IAA9B,CAHoE,CAGhC;;AAEpCR,iBAAa,CAACQ,IAAD,CAAb,GAAsBD,KAAK,CAACE,SAAN,CAAgBE,aAAhB,EAAtB;AACH,GAND;;AAQA1B,eAAa,CAAC2B,cAAd,GAA+B,IAAIb,YAAJ,CAAiB;AAC5CJ,kBAAc,EAAE;AACZa,UAAI,EAAEK,MADM;AAEZC,WAAK,EAAEf,YAAY,CAACgB,KAAb,CAAmBC,EAFd;AAGZC,WAAK,EAAE;AAHK,KAD4B;AAM5CpB,cAAU,EAAE;AACRW,UAAI,EAAEK,MADE;AAERK,gBAAU,EAAE;AAFJ;AANgC,GAAjB,CAA/B;AAYA,SAAOjC,aAAP;AACH,CA1DD,E","file":"/packages/socialize_linkable-model.js","sourcesContent":["/* eslint-disable import/no-unresolved */\nimport { BaseModel } from 'meteor/socialize:base-model';\n/* eslint-enable import/no-unresolved */\n\nimport LinkParentConstruct from './link-parent.js';\nimport LinkableModelConstruct from './linkable-model.js';\n\nconst LinkParent = LinkParentConstruct(BaseModel);\nconst LinkableModel = LinkableModelConstruct();\n\nexport { LinkableModel, LinkParent };\n","export default BaseModel =>\n    /**\n    * A Model that is linked to by LinkableModel's\n    * @class LinkedModel\n    */\n    class LinkParent extends BaseModel {\n        getLinkObject() {\n            return { linkedObjectId: this._id, objectType: this._objectType };\n        }\n    }\n;\n","/* eslint-disable import/no-unresolved */\nimport SimpleSchema from 'simpl-schema';\n/* eslint-enable import/no-unresolved */\n\nexport default () => {\n    // a place to store references to the collections where the commentable objects are stored.\n    const LinkableTypes = {};\n\n    /**\n    * A scaffold for creating models which can link records from one collection to records from many other collections\n    * @mixin LinkableModel\n    */\n    const LinkableModel = Base => class extends Base {\n        /**\n        * getCollectionForParentLink - Get the collection for the ParentLink\n        *\n        * @return {Mongo.Collection} The Collection attached to the ParentLink\n        */\n        getCollectionForParentLink() {\n            return LinkableTypes[this.objectType];\n        }\n        /**\n        * linkedObject - Get the model for the linked record\n        *\n        * @return {Model}  A model of varying types depending on the linked objects type\n        */\n        linkedParent() {\n            const collection = this.getCollectionForParentLink();\n            return collection.findOne({ _id: this.linkedObjectId });\n        }\n    };\n\n    /**\n    * Register a data type that can be linked to another model, storing its collection so we can find the object later\n    * @param {BaseModel}           type       The name of the type\n    * @param {Mongo.Collection} collection The collection where the type of data is stored\n    */\n    LinkableModel.registerParentModel = function registerParentModel(model) {\n        const type = model.prototype.getCollectionName();\n\n        model.prototype._objectType = type; // eslint-disable-line\n\n        LinkableTypes[type] = model.prototype.getCollection();\n    };\n\n    LinkableModel.LinkableSchema = new SimpleSchema({\n        linkedObjectId: {\n            type: String,\n            regEx: SimpleSchema.RegEx.Id,\n            index: 1,\n        },\n        objectType: {\n            type: String,\n            denyUpdate: true,\n        },\n    });\n\n    return LinkableModel;\n};\n"]}}]