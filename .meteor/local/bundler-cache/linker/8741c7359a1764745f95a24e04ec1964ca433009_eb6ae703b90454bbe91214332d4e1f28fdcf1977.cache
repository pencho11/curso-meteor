[{"type":"js","data":"/* Imports for global scope */\n\nMongoInternals = Package.mongo.MongoInternals;\nMongo = Package.mongo.Mongo;\nTracker = Package.tracker.Tracker;\nDeps = Package.tracker.Deps;\nECMAScript = Package.ecmascript.ECMAScript;\nValidatedMethod = Package['mdg:validated-method'].ValidatedMethod;\ncheck = Package.check.check;\nMatch = Package.check.Match;\nAccounts = Package['accounts-base'].Accounts;\nPublishEndpoint = Package['peerlibrary:middleware'].PublishEndpoint;\nPublishMiddleware = Package['peerlibrary:middleware'].PublishMiddleware;\nRoles = Package['alanning:roles'].Roles;\nMethodHooks = Package['lacosta:method-hooks'].MethodHooks;\nTemplate = Package['meteorhacks:ssr'].Template;\nSSR = Package['meteorhacks:ssr'].SSR;\nMeteor = Package.meteor.Meteor;\nglobal = Package.meteor.global;\nmeteorEnv = Package.meteor.meteorEnv;\nWebApp = Package.webapp.WebApp;\nWebAppInternals = Package.webapp.WebAppInternals;\nmain = Package.webapp.main;\nDDP = Package['ddp-client'].DDP;\nDDPServer = Package['ddp-server'].DDPServer;\nLaunchScreen = Package['launch-screen'].LaunchScreen;\nmeteorInstall = Package.modules.meteorInstall;\nPromise = Package.promise.Promise;\nAutoupdate = Package.autoupdate.Autoupdate;\nCollection2 = Package['aldeed:collection2'].Collection2;\nCollectionHooks = Package['matb33:collection-hooks'].CollectionHooks;\n\n","servePath":"/global-imports.js"},{"type":"js","data":"var require = meteorInstall({\"imports\":{\"startup\":{\"server\":{\"services\":{\"FirebaseAdmin.js\":function module(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                             //\n// imports/startup/server/services/FirebaseAdmin.js                                                            //\n//                                                                                                             //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                               //\nmodule.export({\n  firebaseAdminStorage: () => firebaseAdminStorage,\n  BASE_URL_STORAGE: () => BASE_URL_STORAGE\n});\nlet firebaseAdmin;\nmodule.link(\"firebase-admin\", {\n  default(v) {\n    firebaseAdmin = v;\n  }\n\n}, 0);\nlet serviceAccount;\nmodule.link(\"../../../../settings/meteor-vue-fb643-firebase-adminsdk-50cu3-4c287411da.json\", {\n  default(v) {\n    serviceAccount = v;\n  }\n\n}, 1);\nfirebaseAdmin.initializeApp({\n  credential: firebaseAdmin.credential.cert(serviceAccount),\n  storageBucket: 'meteor-vue-fb643.appspot.com'\n});\nconst firebaseAdminStorage = firebaseAdmin.storage().bucket();\nconst BASE_URL_STORAGE = 'https://storage.googleapis.com';\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"MailServ.js\":function module(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                             //\n// imports/startup/server/services/MailServ.js                                                                 //\n//                                                                                                             //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                               //\nif (Meteor.isDevelopment) {\n  var _Meteor$settings$priv;\n\n  if ((_Meteor$settings$priv = Meteor.settings.private) !== null && _Meteor$settings$priv !== void 0 && _Meteor$settings$priv.SENDER_EMAILS) {\n    process.env.EMAIL_SERVICES = Meteor.settings.private.SENDER_EMAILS.SERVICES;\n  } else {\n    console.warn('[Meteor + Vue] - Sender emails are not configured, Emails will not be send');\n  }\n}\n\nconst name = 'Scaffold Metor + Vue';\nconst email = \"<\".concat(process.env.EMAIL_SERVICES, \">\");\nconst from = \"\".concat(name, \" \").concat(email);\nAccounts.emailTemplates.siteName = name;\nAccounts.emailTemplates.from = from;\nconst emailTemplates = Accounts.emailTemplates;\nconst emailEnrollAccount = 'email_enroll_account.html';\nconst emailResetPassword = 'email_reset_password.html';\nconst emailVerifyEmail = 'email_verify_email.html';\nconst productSrc = 'https://firebasestorage.googleapis.com/v0/b/meteor-vue-fb643.appspot.com/o/vue-meteor.png?alt=media';\nconst logoSrc = 'https://firebasestorage.googleapis.com/v0/b/meteor-vue-fb643.appspot.com/o/PoweredDark.png?alt=media';\nemailTemplates.enrollAccount = {\n  subject() {\n    return \"Bienvenido a \".concat(name);\n  },\n\n  html(user, url) {\n    const urlWithoutHash = url.replace('#/', '');\n    if (Meteor.isDevelopment) console.info('Set initial password link: ', urlWithoutHash);\n    SSR.compileTemplate('emailEnrollAccount', Assets.getText(emailEnrollAccount));\n    return SSR.render('emailEnrollAccount', {\n      urlWithoutHash,\n      productSrc,\n      logoSrc\n    });\n  }\n\n};\nemailTemplates.resetPassword = {\n  subject() {\n    return \"Restablece tu contrase\\xF1a\";\n  },\n\n  html(user, url) {\n    const urlWithoutHash = url.replace('#/', '');\n    if (Meteor.isDevelopment) console.info('Password reset link: ', urlWithoutHash);\n    SSR.compileTemplate('emailResetPassword', Assets.getText(emailResetPassword));\n    return SSR.render('emailResetPassword', {\n      urlWithoutHash,\n      productSrc,\n      logoSrc\n    });\n  }\n\n};\nemailTemplates.verifyEmail = {\n  subject() {\n    return \"Verifica tu correo\";\n  },\n\n  html(user, url) {\n    const urlWithoutHash = url.replace('#/', '');\n    if (Meteor.isDevelopment) console.info('Verify email link: ', urlWithoutHash);\n    SSR.compileTemplate('emailVerifyEmail', Assets.getText(emailVerifyEmail));\n    return SSR.render('emailVerifyEmail', {\n      urlWithoutHash,\n      productSrc,\n      logoSrc\n    });\n  }\n\n};\n\nif (Meteor.isDevelopment) {\n  var _Meteor$settings$priv2;\n\n  if ((_Meteor$settings$priv2 = Meteor.settings.private) !== null && _Meteor$settings$priv2 !== void 0 && _Meteor$settings$priv2.MAIL_URL) {\n    process.env.MAIL_URL = Meteor.settings.private.MAIL_URL;\n  } else {\n    console.warn('[Meteor + Vue] - Email settings are not configured, Emails will not be send');\n  }\n}\n\n;\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"utilities\":{\"FileOperations.js\":function module(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                             //\n// imports/startup/server/utilities/FileOperations.js                                                          //\n//                                                                                                             //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                               //\nlet ResponseMessage;\nmodule.link(\"./ResponseMessage\", {\n  ResponseMessage(v) {\n    ResponseMessage = v;\n  }\n\n}, 0);\nlet mimetypes;\nmodule.link(\"mimetypes\", {\n  default(v) {\n    mimetypes = v;\n  }\n\n}, 1);\nlet Utilities;\nmodule.link(\"./Utilities\", {\n  default(v) {\n    Utilities = v;\n  }\n\n}, 2);\nlet BASE_URL_STORAGE, firebaseAdminStorage;\nmodule.link(\"../services/FirebaseAdmin\", {\n  BASE_URL_STORAGE(v) {\n    BASE_URL_STORAGE = v;\n  },\n\n  firebaseAdminStorage(v) {\n    firebaseAdminStorage = v;\n  }\n\n}, 3);\nmodule.exportDefault({\n  saveFileFromBufferToGoogleStorage(fileBuffer, name, path, mimeType) {\n    return Promise.asyncApply(() => {\n      const responseMessage = new ResponseMessage();\n      const filename = \"\".concat(name).concat(Utilities.generateNumberToken(10, 99), \".\").concat(mimetypes.detectExtension(mimeType));\n      const file = firebaseAdminStorage.file(\"\".concat(path, \"/\").concat(filename));\n      const fileUrl = \"\".concat(BASE_URL_STORAGE, \"/\").concat(firebaseAdminStorage.name, \"/\").concat(path, \"/\").concat(filename);\n\n      try {\n        Promise.await(file.save(fileBuffer, {\n          metadata: {\n            contentType: mimeType\n          },\n          public: true\n        }));\n        responseMessage.create('File uploaded', null, {\n          success: true,\n          fileUrl\n        });\n      } catch (error) {\n        console.error('Error uploading file to Google Storage');\n        responseMessage.create('Error uploading file to Google Storage', null, {\n          success: false\n        });\n      }\n\n      return responseMessage;\n    });\n  },\n\n  saveFileFromBase64ToGoogleStorage(base64file, name, path) {\n    return Promise.asyncApply(() => {\n      const mimeType = base64file.match(/data:([a-zA-Z0-9]+\\/[a-zA-Z0-9-.+]+).*,.*/)[1];\n      const base64EncodedImageString = base64file.split(';base64,').pop();\n      const fileBuffer = Buffer.from(base64EncodedImageString, 'base64');\n      return Promise.await(this.saveFileFromBufferToGoogleStorage(fileBuffer, name, path, mimeType));\n    });\n  },\n\n  deleteFileFromGoogleStorageIfExists(fileLocation) {\n    return Promise.asyncApply(() => {\n      const file = firebaseAdminStorage.file(fileLocation);\n\n      try {\n        const existsFile = Promise.await(file.exists());\n\n        if (existsFile[0]) {\n          Promise.await(file.delete());\n        }\n      } catch (error) {\n        console.error('Error delete file from Google Storage', error);\n      }\n    });\n  },\n\n  deleteFilesOfFolderFromGoogleStorage(userFolder) {\n    return Promise.asyncApply(() => {\n      try {\n        Promise.await(firebaseAdminStorage.deleteFiles({\n          prefix: userFolder + '/'\n        }));\n      } catch (error) {\n        console.error('Error deleting files from Google Storage: ', error);\n      }\n    });\n  }\n\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"ResponseMessage.js\":function module(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                             //\n// imports/startup/server/utilities/ResponseMessage.js                                                         //\n//                                                                                                             //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                               //\nmodule.export({\n  ResponseMessage: () => ResponseMessage\n});\n\nclass ResponseMessage {\n  constructor() {\n    this.message = null;\n    this.description = null;\n    this.data = null;\n  }\n\n  create(message) {\n    let description = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    let data = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n    this.message = message;\n    this.description = description;\n    this.data = data;\n  }\n\n}\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"Utilities.js\":function module(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                             //\n// imports/startup/server/utilities/Utilities.js                                                               //\n//                                                                                                             //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                               //\nmodule.exportDefault({\n  generateNumberToken(min, max) {\n    return Math.floor(Math.random() * (max + 1 - min) + min);\n  }\n\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"Permissions.js\":function module(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                             //\n// imports/startup/server/Permissions.js                                                                       //\n//                                                                                                             //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                               //\nmodule.export({\n  permissionsArray: () => permissionsArray\n});\nconst Permissions = {\n  USERS: {\n    LIST: {\n      VALUE: 'users-view',\n      TEXT: 'Listar usuarios'\n    },\n    CREATE: {\n      VALUE: 'users-create',\n      TEXT: 'Crear usuario'\n    },\n    UPDATE: {\n      VALUE: 'users-edit',\n      TEXT: 'Actualizar usuario'\n    },\n    DELETE: {\n      VALUE: 'users-delete',\n      TEXT: 'Eliminar usuario'\n    }\n  },\n  PROFILES: {\n    LIST: {\n      VALUE: 'profiles-view',\n      TEXT: 'Listar perfiles'\n    },\n    CREATE: {\n      VALUE: 'profiles-create',\n      TEXT: 'Crear perfil'\n    },\n    UPDATE: {\n      VALUE: 'profiles-edit',\n      TEXT: 'Actualizar perfil'\n    },\n    DELETE: {\n      VALUE: 'profiles-delete',\n      TEXT: 'Eliminar perfil'\n    }\n  },\n  PERMISSIONS: {\n    LIST: {\n      VALUE: 'permissions-view',\n      TEXT: 'Listar permisos'\n    }\n  },\n  CHAT: {\n    CREATE: {\n      VALUE: 'messages-create',\n      TEXT: 'Enviar mensajes de chat'\n    },\n    LIST: {\n      VALUE: 'messages-view',\n      TEXT: 'Ver mensajes de chat'\n    }\n  }\n};\nconst permissionsArray = Object.keys(Permissions).reduce((accumulator, systemModuleName) => {\n  const systemModuleObject = Permissions[systemModuleName];\n  const modulePermissions = Object.keys(systemModuleObject).map(permission => systemModuleObject[permission]);\n  return accumulator.concat(modulePermissions);\n}, []);\n\nif (Meteor.isDevelopment) {\n  if (Meteor.settings.private && Meteor.settings.private.REFRESH_PERMISSIONS) {\n    console.log('uplading permissions. . .');\n    const currentRoles = Roles.getAllRoles().fetch();\n\n    for (let permission of permissionsArray) {\n      if (!currentRoles.find(_role => _role._id === permission.VALUE)) {\n        Roles.createRole(permission.VALUE);\n      }\n\n      Meteor.roles.update(permission.VALUE, {\n        $set: {\n          publicName: permission.TEXT\n        }\n      });\n    }\n  }\n}\n\nmodule.exportDefault(Permissions);\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"index.js\":function module(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                             //\n// imports/startup/server/index.js                                                                             //\n//                                                                                                             //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                               //\nmodule.link(\"./Permissions\");\nmodule.link(\"./services/MailServ\");\nmodule.link(\"./services/FirebaseAdmin\");\nmodule.link(\"../../api/Users/User\");\nmodule.link(\"../../api/Users/UsersCtrl\");\nmodule.link(\"../../api/Users/UsersPubs\");\nmodule.link(\"../../api/Profiles/ProfileSeeder\");\nmodule.link(\"../../api/Profiles/ProfilesCtrl\");\nmodule.link(\"../../api/Profiles/ProfilesPubs\");\nmodule.link(\"../../api/Permissions/PermissionsCtrl\");\nmodule.link(\"../../api/Permissions/PermissionsPubs\");\nmodule.link(\"../../api/SystemOptions/SystemOptionsCtrl\");\nmodule.link(\"../../api/Messages/MessageSeeder\");\nmodule.link(\"../../api/Messages/MessagesCtrl\");\nmodule.link(\"../../api/Messages/MessagesPubs\");\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"both\":{\"index.js\":function module(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                             //\n// imports/startup/both/index.js                                                                               //\n//                                                                                                             //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                               //\nAccounts.config({\n  loginExpirationInDays: 30\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}}},\"api\":{\"Messages\":{\"Message.js\":function module(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                             //\n// imports/api/Messages/Message.js                                                                             //\n//                                                                                                             //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                               //\nmodule.export({\n  Message: () => Message\n});\nlet Mongo;\nmodule.link(\"meteor/mongo\", {\n  Mongo(v) {\n    Mongo = v;\n  }\n\n}, 0);\nconst Message = new Mongo.Collection('messages');\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"MessageSeeder.js\":function module(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                             //\n// imports/api/Messages/MessageSeeder.js                                                                       //\n//                                                                                                             //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                               //\nlet Message;\nmodule.link(\"./Message\", {\n  Message(v) {\n    Message = v;\n  }\n\n}, 0);\nMessage.rawCollection().createIndex({\n  idSender: 1\n});\nMessage.rawCollection().createIndex({\n  idReceiver: 1\n});\nMessage.rawCollection().createIndex({\n  date: 1\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"MessagesCtrl.js\":function module(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                             //\n// imports/api/Messages/MessagesCtrl.js                                                                        //\n//                                                                                                             //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                               //\nlet ValidatedMethod;\nmodule.link(\"meteor/mdg:validated-method\", {\n  ValidatedMethod(v) {\n    ValidatedMethod = v;\n  }\n\n}, 0);\nlet check;\nmodule.link(\"meteor/check\", {\n  check(v) {\n    check = v;\n  }\n\n}, 1);\nlet AuthGuard;\nmodule.link(\"../../middlewares/AuthGuard\", {\n  default(v) {\n    AuthGuard = v;\n  }\n\n}, 2);\nlet ResponseMessage;\nmodule.link(\"../../startup/server/utilities/ResponseMessage\", {\n  ResponseMessage(v) {\n    ResponseMessage = v;\n  }\n\n}, 3);\nlet Message;\nmodule.link(\"./Message\", {\n  Message(v) {\n    Message = v;\n  }\n\n}, 4);\nlet Permissions;\nmodule.link(\"../../startup/server/Permissions\", {\n  default(v) {\n    Permissions = v;\n  }\n\n}, 5);\nnew ValidatedMethod({\n  name: 'message.save',\n  mixins: [MethodHooks],\n  beforeHooks: [AuthGuard.checkPermission],\n  permissions: [Permissions.CHAT.CREATE.VALUE],\n\n  validate(message) {\n    try {\n      check(message, {\n        idSender: String,\n        idReceiver: String,\n        text: String,\n        date: String,\n        read: Boolean\n      });\n    } catch (error) {\n      console.error('message.save', error);\n      throw new Meteor.Error('403', 'La informacion introducida no es valida');\n    }\n  },\n\n  run(message) {\n    const responseMessage = new ResponseMessage();\n\n    try {\n      Message.insert(message);\n      responseMessage.create('Se inserto el mensaje exitosamente');\n    } catch (error) {\n      console.error('message.save', error);\n      throw new Meteor.Error('500', 'Ha ocurrido un error al insertar el mensaje');\n    }\n\n    return responseMessage;\n  }\n\n});\nnew ValidatedMethod({\n  name: 'messages.read',\n  mixins: [MethodHooks],\n  beforeHooks: [AuthGuard.isUserLogged],\n\n  validate(messages) {\n    try {\n      check(messages, [{\n        _id: String,\n        idSender: String,\n        idReceiver: String,\n        text: String,\n        date: String,\n        read: Boolean\n      }]);\n    } catch (error) {\n      console.error('messages.read', error);\n      throw new Meteor.Error('403', 'La informacion no es valida');\n    }\n  },\n\n  run(messages) {\n    const responseMessage = new ResponseMessage();\n\n    try {\n      Message.update({\n        _id: {\n          $in: messages.map(m => m._id)\n        }\n      }, {\n        $set: {\n          read: true\n        }\n      }, {\n        multi: true\n      });\n    } catch (error) {\n      console.error('messages.read', error);\n      throw new Meteor.Error('500', 'Ha ocurrido un error al marcar los mensajes como leidos.');\n    }\n\n    return responseMessage;\n  }\n\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"MessagesPubs.js\":function module(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                             //\n// imports/api/Messages/MessagesPubs.js                                                                        //\n//                                                                                                             //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                               //\nlet PermissionMiddleware;\nmodule.link(\"../../middlewares/PermissionsMiddleware\", {\n  PermissionMiddleware(v) {\n    PermissionMiddleware = v;\n  }\n\n}, 0);\nlet Permissions;\nmodule.link(\"../../startup/server/Permissions\", {\n  default(v) {\n    Permissions = v;\n  }\n\n}, 1);\nlet Message;\nmodule.link(\"./Message\", {\n  Message(v) {\n    Message = v;\n  }\n\n}, 2);\nconst messagesPublication = new PublishEndpoint('messages.list', function () {\n  let idContact = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n  const idUserLogged = this.userId;\n  return Message.find({\n    $or: [{\n      idSender: idUserLogged,\n      idReceiver: idContact\n    }, {\n      idSender: idContact,\n      idReceiver: idUserLogged\n    }]\n  }, {\n    limit: 20,\n    sort: {\n      date: -1\n    }\n  });\n});\nmessagesPublication.use(new PermissionMiddleware([Permissions.CHAT.LIST.VALUE]));\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"Permissions\":{\"PermissionsCtrl.js\":function module(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                             //\n// imports/api/Permissions/PermissionsCtrl.js                                                                  //\n//                                                                                                             //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                               //\nlet Permissions;\nmodule.link(\"../../startup/server/Permissions\", {\n  default(v) {\n    Permissions = v;\n  }\n\n}, 0);\nlet ResponseMessage;\nmodule.link(\"../../startup/server/utilities/ResponseMessage\", {\n  ResponseMessage(v) {\n    ResponseMessage = v;\n  }\n\n}, 1);\nlet AuthGuard;\nmodule.link(\"../../middlewares/AuthGuard\", {\n  default(v) {\n    AuthGuard = v;\n  }\n\n}, 2);\nlet check;\nmodule.link(\"meteor/check\", {\n  check(v) {\n    check = v;\n  }\n\n}, 3);\nlet Profile;\nmodule.link(\"../Profiles/Profile\", {\n  Profile(v) {\n    Profile = v;\n  }\n\n}, 4);\nnew ValidatedMethod({\n  name: 'permissions.list',\n  mixins: [MethodHooks],\n  permissions: [Permissions.PERMISSIONS.LIST.VALUE],\n  beforeHooks: [AuthGuard.checkPermission],\n  validate: null,\n\n  run() {\n    const responseMessage = new ResponseMessage();\n\n    try {\n      const permissions = Meteor.roles.find().fetch();\n      responseMessage.create('Permisos disponibles del sistema', null, permissions);\n    } catch (error) {\n      console.error('permissions.list: ', error);\n      throw new Meteor.Error('500', 'Ocurrio un error al obtener los permisos');\n    }\n\n    return responseMessage;\n  }\n\n});\nnew ValidatedMethod({\n  name: 'permissions.listByIdProfile',\n  mixins: [MethodHooks],\n  permissions: [Permissions.PERMISSIONS.LIST.VALUE],\n  beforeHooks: [AuthGuard.checkPermission],\n\n  validate(_ref) {\n    let {\n      idProfile\n    } = _ref;\n\n    try {\n      check(idProfile, String);\n    } catch (error) {\n      console.error('permissions.listByIdProfile: ', error);\n      throw new Meteor.Error('403', 'La informacion introducida es valida');\n    }\n  },\n\n  run(_ref2) {\n    let {\n      idProfile\n    } = _ref2;\n    const responseMessage = new ResponseMessage();\n\n    try {\n      const profile = Profile.findOne(idProfile);\n      const permissions = Meteor.roles.find({\n        _id: {\n          $nin: profile.permissions\n        }\n      }).fetch();\n      responseMessage.create('Permisos asociados al perfil.', null, permissions);\n    } catch (error) {\n      console.error('permissions.listByIdProfile: ', error);\n      throw new Meteor.Error('500', 'Ocurrio un error al obtener los permisos del perfil');\n    }\n\n    return responseMessage;\n  }\n\n});\nnew ValidatedMethod({\n  name: 'permissions.listOtherForIdProfile',\n  mixins: [MethodHooks],\n  permissions: [Permissions.PERMISSIONS.LIST.VALUE],\n  beforeHooks: [AuthGuard.checkPermission],\n\n  validate(_ref3) {\n    let {\n      idProfile\n    } = _ref3;\n\n    try {\n      check(idProfile, String);\n    } catch (error) {\n      console.error('permissions.listOtherForIdProfile: ', error);\n      throw new Meteor.Error('403', 'La informacion introducida no es valida');\n    }\n  },\n\n  run(_ref4) {\n    let {\n      idProfile\n    } = _ref4;\n    const responseMessage = new ResponseMessage();\n\n    try {\n      const profile = Profile.findOne(idProfile);\n      const permissions = Meteor.roles.find({\n        _id: {\n          $not: {\n            $nin: profile.permissions\n          }\n        }\n      }).fetch();\n      responseMessage.create('Permisos no asociados al perfil.', null, permissions);\n    } catch (error) {\n      console.error('permissions.listOtherForIdProfile: ', error);\n      throw new Meteor.Error('500', 'Ocurrio un error al obtener los permisos no asociados al perfil');\n    }\n\n    return responseMessage;\n  }\n\n});\nnew ValidatedMethod({\n  name: 'permission.check',\n  mixins: [MethodHooks],\n  beforeHooks: [AuthGuard.isUserLogged],\n\n  validate(_ref5) {\n    let {\n      permission\n    } = _ref5;\n\n    try {\n      check(permission, String);\n    } catch (error) {\n      console.error('permissions.listOtherForIdProfile: ', error);\n      throw new Meteor.Error('403', 'La informacion introducida no es valida');\n    }\n  },\n\n  run(_ref6) {\n    let {\n      permission\n    } = _ref6;\n    const responseMessage = new ResponseMessage();\n\n    try {\n      const scope = Roles.getScopesForUser(this.userId)[0];\n      const hasPermission = Roles.userIsInRole(this.userId, permission, scope);\n      responseMessage.create(\"El usuario \".concat(hasPermission ? 'si' : 'no', \" tiene el permiso\"), null, {\n        hasPermission\n      });\n    } catch (error) {\n      console.error('permissions.check: ', error);\n      throw new Meteor.Error('500', 'Ocurrio un error al verificar el permiso');\n    }\n\n    return responseMessage;\n  }\n\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"PermissionsPubs.js\":function module(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                             //\n// imports/api/Permissions/PermissionsPubs.js                                                                  //\n//                                                                                                             //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                               //\nMeteor.publish('roles', function () {\n  return Meteor.roleAssignment.find({\n    'user._id': this.userId\n  });\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"Profiles\":{\"Profile.js\":function module(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                             //\n// imports/api/Profiles/Profile.js                                                                             //\n//                                                                                                             //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                               //\nmodule.export({\n  Profile: () => Profile\n});\nlet Mongo;\nmodule.link(\"meteor/mongo\", {\n  Mongo(v) {\n    Mongo = v;\n  }\n\n}, 0);\nconst Profile = new Mongo.Collection('profiles');\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"ProfileSeeder.js\":function module(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                             //\n// imports/api/Profiles/ProfileSeeder.js                                                                       //\n//                                                                                                             //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                               //\nmodule.export({\n  StaticProfiles: () => StaticProfiles\n});\nlet Permissions, permissionsArray;\nmodule.link(\"../../startup/server/Permissions\", {\n  default(v) {\n    Permissions = v;\n  },\n\n  permissionsArray(v) {\n    permissionsArray = v;\n  }\n\n}, 0);\nlet Profile;\nmodule.link(\"./Profile\", {\n  Profile(v) {\n    Profile = v;\n  }\n\n}, 1);\nProfile.rawCollection().createIndex({\n  'name': 1\n}, {\n  unique: true\n});\nconst StaticProfiles = {\n  admin: {\n    name: 'admin',\n    description: 'Administrador',\n    permissions: permissionsArray.map(p => p.VALUE)\n  }\n};\n\nif (Meteor.isDevelopment) {\n  if (Meteor.settings.private && Meteor.settings.private.REFRESH_STATIC_PROFILES) {\n    console.log('updating static profiles. . .');\n    Object.keys(StaticProfiles).forEach(staticProfileName => {\n      Profile.upsert({\n        name: StaticProfiles[staticProfileName].name\n      }, {\n        $set: {\n          description: StaticProfiles[staticProfileName].description,\n          permissions: StaticProfiles[staticProfileName].permissions\n        }\n      });\n      Meteor.users.find({\n        'profile.profile': StaticProfiles[staticProfileName].name\n      }).fetch().forEach(user => {\n        Meteor.roleAssignment.remove({\n          'user._id': user._id\n        });\n\n        if (StaticProfiles[staticProfileName].permissions.length > 0) {\n          Roles.setUserRoles(user._id, StaticProfiles[staticProfileName].permissions, StaticProfiles[staticProfileName].name);\n        }\n      });\n    });\n  }\n}\n\n;\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"ProfilesCtrl.js\":function module(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                             //\n// imports/api/Profiles/ProfilesCtrl.js                                                                        //\n//                                                                                                             //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                               //\nlet check, Match;\nmodule.link(\"meteor/check\", {\n  check(v) {\n    check = v;\n  },\n\n  Match(v) {\n    Match = v;\n  }\n\n}, 0);\nlet AuthGuard;\nmodule.link(\"../../middlewares/AuthGuard\", {\n  default(v) {\n    AuthGuard = v;\n  }\n\n}, 1);\nlet Permissions;\nmodule.link(\"../../startup/server/Permissions\", {\n  default(v) {\n    Permissions = v;\n  }\n\n}, 2);\nlet ResponseMessage;\nmodule.link(\"../../startup/server/utilities/ResponseMessage\", {\n  ResponseMessage(v) {\n    ResponseMessage = v;\n  }\n\n}, 3);\nlet Profile;\nmodule.link(\"./Profile\", {\n  Profile(v) {\n    Profile = v;\n  }\n\n}, 4);\nlet ProfilesServ;\nmodule.link(\"./ProfilesServ\", {\n  default(v) {\n    ProfilesServ = v;\n  }\n\n}, 5);\nnew ValidatedMethod({\n  name: 'profile.save',\n  mixins: [MethodHooks],\n  permissions: [Permissions.PROFILES.CREATE.VALUE, Permissions.PROFILES.UPDATE.VALUE],\n  beforeHooks: [AuthGuard.checkPermission],\n\n  validate(profile) {\n    try {\n      check(profile, {\n        _id: Match.OneOf(String, null),\n        name: String,\n        description: String,\n        permissions: [String]\n      });\n    } catch (error) {\n      console.error('profile.save', error);\n      throw new Meteor.Error('403', 'La informacion no es valida');\n    }\n\n    ProfilesServ.validateName(profile.name, profile._id);\n  },\n\n  run(profile) {\n    const responseMessage = new ResponseMessage();\n\n    if (profile._id !== null) {\n      try {\n        // UPDATE PROFILE\n        const oldProfile = Profile.findOne(profile._id);\n        const users = ProfilesServ.getUsersByProfile(profile._id);\n        Profile.update(profile._id, {\n          $set: {\n            name: profile.name,\n            description: profile.description,\n            permissions: profile.permissions\n          }\n        });\n\n        if (oldProfile.name !== profile.name) {\n          Meteor.users.update({\n            'profile.profile': oldProfile.name\n          }, {\n            $set: {\n              'profile.profile': profile.name\n            }\n          }, {\n            multi: true\n          });\n        }\n\n        ProfilesServ.updateProfileUsers(users, profile);\n        responseMessage.create('Se actualizo el perfil exitosamente');\n      } catch (error) {\n        console.error('profile.save', error);\n        throw new Meteor.Error('500', 'Ocurrio un error al actualizar el perfil');\n      }\n    } else {\n      try {\n        // CREATE PROFILE\n        Profile.insert({\n          name: profile.name,\n          description: profile.description,\n          permissions: profile.permissions\n        });\n        responseMessage.create('Se creo el perfil exitosamente');\n      } catch (error) {\n        console.error('profile.save', error);\n        throw new Meteor.Error('500', 'Ocurrio un error al crear el nuevo perfil');\n      }\n    }\n\n    return responseMessage;\n  }\n\n});\nnew ValidatedMethod({\n  name: 'profile.delete',\n  mixins: [MethodHooks],\n  permissions: [Permissions.PROFILES.DELETE.VALUE],\n  beforeHooks: [AuthGuard.checkPermission],\n\n  validate(_ref) {\n    let {\n      idProfile\n    } = _ref;\n\n    try {\n      check(idProfile, String);\n    } catch (error) {\n      console.error('profile.delete', error);\n      throw new Meteor.Error('403', 'La informacion introducida no es valida');\n    }\n\n    const users = ProfilesServ.getUsersByProfile(idProfile);\n\n    if (users.length > 0) {\n      throw new Meteor.Error('403', 'No se puede eliminar perfil.', 'Hay usuarios usando este perfil');\n    }\n  },\n\n  run(_ref2) {\n    let {\n      idProfile\n    } = _ref2;\n    const responseMessage = new ResponseMessage();\n\n    try {\n      Profile.remove(idProfile);\n      responseMessage.create('Perfil eliminado exitosamente');\n    } catch (error) {\n      console.error('profile.delete', error);\n      throw new Meteor.Error('403', 'La informacion introducida no es valida');\n    }\n\n    return responseMessage;\n  }\n\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"ProfilesPubs.js\":function module(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                             //\n// imports/api/Profiles/ProfilesPubs.js                                                                        //\n//                                                                                                             //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                               //\nlet PermissionMiddleware;\nmodule.link(\"../../middlewares/PermissionsMiddleware\", {\n  PermissionMiddleware(v) {\n    PermissionMiddleware = v;\n  }\n\n}, 0);\nlet Permissions;\nmodule.link(\"../../startup/server/Permissions\", {\n  default(v) {\n    Permissions = v;\n  }\n\n}, 1);\nlet Profile;\nmodule.link(\"./Profile\", {\n  Profile(v) {\n    Profile = v;\n  }\n\n}, 2);\nlet ProfilesServ;\nmodule.link(\"./ProfilesServ\", {\n  default(v) {\n    ProfilesServ = v;\n  }\n\n}, 3);\nconst noStaticProfilesPublication = new PublishEndpoint('profile.listNotStaticProfiles', function () {\n  return Profile.find({\n    name: {\n      $nin: ProfilesServ.getStaticProfileName()\n    }\n  });\n});\nconst profilesPublication = new PublishEndpoint('profile.listAll', function () {\n  return Profile.find();\n});\nprofilesPublication.use(new PermissionMiddleware([Permissions.PROFILES.LIST.VALUE]));\nnoStaticProfilesPublication.use(new PermissionMiddleware([Permissions.PROFILES.LIST.VALUE]));\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"ProfilesServ.js\":function module(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                             //\n// imports/api/Profiles/ProfilesServ.js                                                                        //\n//                                                                                                             //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                               //\nlet Profile;\nmodule.link(\"./Profile\", {\n  Profile(v) {\n    Profile = v;\n  }\n\n}, 0);\nlet StaticProfiles;\nmodule.link(\"./ProfileSeeder\", {\n  StaticProfiles(v) {\n    StaticProfiles = v;\n  }\n\n}, 1);\nmodule.exportDefault({\n  validateName(name, idProfile) {\n    const existName = Profile.findOne({\n      name\n    });\n\n    if (idProfile) {\n      const oldProfile = Profile.findOne(idProfile);\n\n      if (oldProfile.name !== name && existName) {\n        throw new Meteor.Error('403', \"El nuevo nombre de perfil ya se encuentra en uso\");\n      }\n    } else if (existName) {\n      throw new Meteor.Error('403', \"El nombre de perfil ya se encuentra en uso\");\n    }\n  },\n\n  getUsersByProfile(idProfile) {\n    const profile = Profile.findOne(idProfile);\n    return Meteor.users.find({\n      'profile.profile': profile.name\n    }).fetch();\n  },\n\n  setUserRoles(idUser, profileName) {\n    const permissions = Profile.findOne({\n      name: profileName\n    }).permissions;\n    Meteor.roleAssignment.remove({\n      'user._id': idUser\n    });\n    Roles.setUserRoles(idUser, permissions, profileName);\n  },\n\n  updateProfileUsers(users, profile) {\n    users.forEach(user => {\n      this.setUserRoles(user._id, profile.name);\n    });\n  },\n\n  getStaticProfileName() {\n    return Object.keys(StaticProfiles).map(staticProfileName => {\n      return StaticProfiles[staticProfileName].name;\n    });\n  }\n\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"SystemOptions\":{\"SystemOptions.js\":function module(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                             //\n// imports/api/SystemOptions/SystemOptions.js                                                                  //\n//                                                                                                             //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                               //\nlet Permissions;\nmodule.link(\"../../startup/server/Permissions\", {\n  default(v) {\n    Permissions = v;\n  }\n\n}, 0);\nmodule.exportDefault([{\n  title: 'Inicio',\n  permission: null,\n  routeName: 'home'\n}, {\n  title: 'Usuarios',\n  permission: Permissions.USERS.LIST.VALUE,\n  routeName: 'home.users'\n}, {\n  title: 'Perfiles',\n  permission: Permissions.PROFILES.LIST.VALUE,\n  routeName: 'home.profiles'\n}, {\n  title: 'Chat',\n  permission: Permissions.CHAT.LIST.VALUE,\n  routeName: 'home.chat'\n}]);\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"SystemOptionsCtrl.js\":function module(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                             //\n// imports/api/SystemOptions/SystemOptionsCtrl.js                                                              //\n//                                                                                                             //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                               //\nlet SystemOptions;\nmodule.link(\"./SystemOptions\", {\n  default(v) {\n    SystemOptions = v;\n  }\n\n}, 0);\nlet ResponseMessage;\nmodule.link(\"../../startup/server/utilities/ResponseMessage\", {\n  ResponseMessage(v) {\n    ResponseMessage = v;\n  }\n\n}, 1);\nlet AuthGuard;\nmodule.link(\"../../middlewares/AuthGuard\", {\n  default(v) {\n    AuthGuard = v;\n  }\n\n}, 2);\nnew ValidatedMethod({\n  name: 'user.getSystemOptions',\n  mixins: [MethodHooks],\n  beforeHooks: [AuthGuard.isUserLogged],\n  validate: null,\n\n  run() {\n    const responseMessage = new ResponseMessage();\n    const userLogged = Meteor.user();\n    const userRoles = Roles.getRolesForUser(userLogged._id, userLogged.profile.profile);\n    const optionsOfUser = SystemOptions.reduce((accumulator, systemOption) => {\n      if (!systemOption.permission || !!userRoles.find(role => role === systemOption.permission)) {\n        accumulator.push(systemOption);\n      }\n\n      return accumulator;\n    }, []);\n    responseMessage.create('Opciones del sistema de usuario.', null, optionsOfUser);\n    return responseMessage;\n  }\n\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"Users\":{\"User.js\":function module(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                             //\n// imports/api/Users/User.js                                                                                   //\n//                                                                                                             //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                               //\nlet User;\nmodule.link(\"meteor/socialize:user-model\", {\n  User(v) {\n    User = v;\n  }\n\n}, 0);\nlet SimpleSchema;\nmodule.link(\"simpl-schema\", {\n  default(v) {\n    SimpleSchema = v;\n  }\n\n}, 1);\nMeteor.users.rawCollection().createIndex({\n  'profile.profile': 1\n});\nconst UserProfileSchema = new SimpleSchema({\n  profile: {\n    type: Object,\n    optional: false,\n    blackbox: true\n  }\n});\nUser.attachSchema(UserProfileSchema);\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"UserPresenceConfig.js\":function module(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                             //\n// imports/api/Users/UserPresenceConfig.js                                                                     //\n//                                                                                                             //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                               //\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet User;\nmodule.link(\"meteor/socialize:user-model\", {\n  User(v) {\n    User = v;\n  }\n\n}, 1);\nlet UserPresence;\nmodule.link(\"meteor/socialize:user-presence\", {\n  UserPresence(v) {\n    UserPresence = v;\n  }\n\n}, 2);\nlet SimpleSchema;\nmodule.link(\"simpl-schema\", {\n  default(v) {\n    SimpleSchema = v;\n  }\n\n}, 3);\n// Schema for the fields where we will store the status data\nconst StatusSchema = new SimpleSchema({\n  status: Object,\n  'status.online': {\n    type: Boolean\n  },\n  'status.idle': {\n    type: Boolean,\n    optional: true\n  },\n  'status.lastLogin': {\n    type: Object,\n    optional: true,\n    blackbox: true\n  }\n}); // Add the schema to the existing schema currently attached to the User model\n\nUser.attachSchema(StatusSchema); // If `sessionIds` is undefined this signifies we need a fresh start.\n// When a full cleanup is necessary we will unset the status field to show all users as offline\n\nUserPresence.onCleanup(function onCleanup(sessionIds) {\n  if (!sessionIds) {\n    Meteor.users.update({}, {\n      $set: {\n        'status.online': false\n      },\n      $unset: {\n        'status.idle': true\n      }\n    }, {\n      multi: true\n    });\n  }\n}); // When a user comes online we set their status to online and set the lastOnline field to the current time\n\nUserPresence.onUserOnline(function onUserOnline(userId, connection) {\n  if (connection) {\n    Meteor.users.update(userId, {\n      $set: {\n        'status.online': true,\n        'status.idle': false,\n        'status.lastLogin': {\n          date: new Date(),\n          ipAddr: connection.clientAddress,\n          userAgent: connection.httpHeaders['user-agent']\n        }\n      }\n    });\n  }\n}); // When a user goes idle we'll set their status to indicate this\n\nUserPresence.onUserIdle(function onUserIdle(userId) {\n  Meteor.users.update(userId, {\n    $set: {\n      'status.idle': true\n    }\n  });\n}); // When a user goes offline we'll unset their status field to indicate offline status\n\nUserPresence.onUserOffline(function onUserOffline(userId) {\n  Meteor.users.update(userId, {\n    $set: {\n      'status.online': false\n    },\n    $unset: {\n      'status.idle': true\n    }\n  });\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"UsersCtrl.js\":function module(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                             //\n// imports/api/Users/UsersCtrl.js                                                                              //\n//                                                                                                             //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                               //\nlet ValidatedMethod;\nmodule.link(\"meteor/mdg:validated-method\", {\n  ValidatedMethod(v) {\n    ValidatedMethod = v;\n  }\n\n}, 0);\nlet check, Match;\nmodule.link(\"meteor/check\", {\n  check(v) {\n    check = v;\n  },\n\n  Match(v) {\n    Match = v;\n  }\n\n}, 1);\nlet ResponseMessage;\nmodule.link(\"../../startup/server/utilities/ResponseMessage\", {\n  ResponseMessage(v) {\n    ResponseMessage = v;\n  }\n\n}, 2);\nlet UsersServ;\nmodule.link(\"./UsersServ\", {\n  default(v) {\n    UsersServ = v;\n  }\n\n}, 3);\nlet AuthGuard;\nmodule.link(\"../../middlewares/AuthGuard\", {\n  default(v) {\n    AuthGuard = v;\n  }\n\n}, 4);\nlet Permissions;\nmodule.link(\"../../startup/server/Permissions\", {\n  default(v) {\n    Permissions = v;\n  }\n\n}, 5);\nmodule.link(\"./UserPresenceConfig\");\nAccounts.onCreateUser((options, user) => {\n  const customizedUser = Object.assign({\n    status: {\n      online: false\n    }\n  }, user);\n\n  if (options.profile) {\n    customizedUser.profile = options.profile;\n  }\n\n  return customizedUser;\n});\nAccounts.validateLoginAttempt(loginAttempt => {\n  if (loginAttempt.allowed) {\n    var _loginAttempt$user$se;\n\n    if (!loginAttempt.user.emails[0].verified) {\n      throw new Meteor.Error('403', 'El correo de la cuenta no se ha verificado aun.');\n    }\n\n    const loginTokensOfUser = ((_loginAttempt$user$se = loginAttempt.user.services.resume) === null || _loginAttempt$user$se === void 0 ? void 0 : _loginAttempt$user$se.loginTokens) || [];\n\n    if (loginTokensOfUser.length > 1) {\n      Meteor.users.update(loginAttempt.user._id, {\n        $set: {\n          'services.resume.loginTokens': [loginTokensOfUser.pop()]\n        }\n      });\n    }\n\n    return true;\n  }\n});\nnew ValidatedMethod({\n  name: 'user.save',\n  mixins: [MethodHooks],\n  permissions: [Permissions.USERS.CREATE.VALUE, Permissions.USERS.UPDATE.VALUE],\n  beforeHooks: [AuthGuard.checkPermission],\n\n  validate(_ref) {\n    let {\n      user\n    } = _ref;\n\n    try {\n      check(user, {\n        _id: Match.OneOf(String, null),\n        username: String,\n        emails: [{\n          address: String,\n          verified: Boolean\n        }],\n        profile: {\n          profile: String,\n          name: String,\n          path: Match.OneOf(String, null)\n        }\n      });\n    } catch (error) {\n      console.log('save.user', error);\n      throw new Meteor.Error('403', 'La informacion introducida no es valida');\n    }\n\n    UsersServ.validateEmail(user.emails[0].address, user._id);\n    UsersServ.validateUsername(user.username, user._id);\n  },\n\n  run(_ref2) {\n    return Promise.asyncApply(() => {\n      let {\n        user,\n        photoFileUser\n      } = _ref2;\n      const responseMessage = new ResponseMessage();\n\n      if (user._id !== null) {\n        try {\n          // UPDATE USER \n          Promise.await(UsersServ.updateUser(user, photoFileUser));\n          responseMessage.create('Se actualizo el usuario exitosamente');\n        } catch (error) {\n          console.error('user.save', error);\n          throw new Meteor.Error('500', 'Ocurrio un error al actualizar el usuario');\n        }\n      } else {\n        try {\n          // CREATE USER\n          Promise.await(UsersServ.createUser(user, photoFileUser));\n          responseMessage.create('Se ha creado usuario exitosamente');\n        } catch (error) {\n          console.error('user.save: ', error);\n          throw new Meteor.Error('500', 'Ocurrió un error al crear un usuario');\n        }\n      }\n\n      return responseMessage;\n    });\n  }\n\n});\nnew ValidatedMethod({\n  name: 'user.delete',\n  mixins: [MethodHooks],\n  permissions: [Permissions.USERS.DELETE.VALUE],\n  beforeHooks: [AuthGuard.checkPermission],\n\n  validate(_ref3) {\n    let {\n      idUser\n    } = _ref3;\n\n    try {\n      check(idUser, String);\n    } catch (error) {\n      console.error('user.delete', error);\n      throw new Meteor.Error('403', 'La informacion introducida no es valida');\n    }\n  },\n\n  run(_ref4) {\n    return Promise.asyncApply(() => {\n      let {\n        idUser\n      } = _ref4;\n      const responseMessage = new ResponseMessage();\n\n      try {\n        Promise.await(UsersServ.deleteUser(idUser));\n        responseMessage.create('Se ha eliminado exitosamente al usuario');\n      } catch (error) {\n        console.error('user.delete', error);\n        throw new Meteor.Error('500', 'Ocurrio un error al eliminar un usuario');\n      }\n\n      return responseMessage;\n    });\n  }\n\n});\nnew ValidatedMethod({\n  name: 'user.updatePersonalData',\n  mixins: [MethodHooks],\n  beforeHooks: [AuthGuard.isUserLogged],\n\n  validate(_ref5) {\n    let {\n      user\n    } = _ref5;\n\n    try {\n      check(user, {\n        _id: Match.OneOf(String, null),\n        username: String,\n        emails: [{\n          address: String,\n          verified: Boolean\n        }],\n        profile: {\n          profile: String,\n          name: String,\n          path: Match.OneOf(String, null)\n        }\n      });\n    } catch (error) {\n      console.log('user.updatePersonalData', error);\n      throw new Meteor.Error('403', 'La informacion introducida no es valida');\n    }\n\n    UsersServ.validateEmail(user.emails[0].address, user._id);\n    UsersServ.validateUsername(user.username, user._id);\n  },\n\n  run(_ref6) {\n    return Promise.asyncApply(() => {\n      let {\n        user,\n        photoFileUser\n      } = _ref6;\n      const responseMessage = new ResponseMessage();\n\n      try {\n        // UPDATE USER \n        Promise.await(UsersServ.updateUser(user, photoFileUser));\n        responseMessage.create('Se actualizo la informacion exitosamente');\n      } catch (error) {\n        console.error('user.updatePersonalData', error);\n        throw new Meteor.Error('500', 'Ocurrio un error al actualizar la informacion');\n      }\n\n      return responseMessage;\n    });\n  }\n\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"UsersPubs.js\":function module(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                             //\n// imports/api/Users/UsersPubs.js                                                                              //\n//                                                                                                             //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                               //\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet PublishEndpoint;\nmodule.link(\"meteor/peerlibrary:middleware\", {\n  PublishEndpoint(v) {\n    PublishEndpoint = v;\n  }\n\n}, 1);\nlet PermissionMiddleware;\nmodule.link(\"../../middlewares/PermissionsMiddleware\", {\n  PermissionMiddleware(v) {\n    PermissionMiddleware = v;\n  }\n\n}, 2);\nlet Permissions;\nmodule.link(\"../../startup/server/Permissions\", {\n  default(v) {\n    Permissions = v;\n  }\n\n}, 3);\nconst usersPublication = new PublishEndpoint('user.list', function () {\n  return Meteor.users.find({}, {\n    sort: {\n      createdAt: -1\n    }\n  });\n});\nusersPublication.use(new PermissionMiddleware([Permissions.USERS.LIST.VALUE]));\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"UsersServ.js\":function module(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                             //\n// imports/api/Users/UsersServ.js                                                                              //\n//                                                                                                             //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                               //\nlet FileOperations;\nmodule.link(\"../../startup/server/utilities/FileOperations\", {\n  default(v) {\n    FileOperations = v;\n  }\n\n}, 0);\nlet ProfilesServ;\nmodule.link(\"../Profiles/ProfilesServ\", {\n  default(v) {\n    ProfilesServ = v;\n  }\n\n}, 1);\nconst PATH_USER_FILES = 'users/';\nmodule.exportDefault({\n  validateEmail(newEmail, idUser) {\n    const existEmail = Accounts.findUserByEmail(newEmail);\n\n    if (idUser) {\n      const oldUser = Meteor.users.findOne(idUser);\n\n      if (oldUser.emails[0].address !== newEmail && existEmail) {\n        throw new Meteor.Error('403', 'El nuevo email ya se encuentra en uso');\n      }\n    } else if (existEmail) {\n      throw new Meteor.Error('403', 'El nuevo email ya se encuetra en uso');\n    }\n  },\n\n  validateUsername(newUsername, idUser) {\n    const existUsername = Accounts.findUserByUsername(newUsername);\n\n    if (idUser) {\n      const oldUser = Meteor.users.findOne(idUser);\n\n      if (oldUser.username !== newUsername && existUsername) {\n        throw new Meteor.Error('403', \"El nuevo nombre de usuario ya se encuentra en uso\");\n      }\n    } else if (existUsername) {\n      throw new Meteor.Error('403', \"El nombre de usuario ya se encuentra en uso\");\n    }\n  },\n\n  createUser(user, photoFileUser) {\n    return Promise.asyncApply(() => {\n      const idUser = Accounts.createUser({\n        username: user.username,\n        email: user.emails[0].address,\n        profile: user.profile\n      });\n      let avatarSrc = null;\n\n      if (idUser) {\n        ProfilesServ.setUserRoles(idUser, user.profile.profile);\n        Accounts.sendEnrollmentEmail(idUser, user.emails[0].address);\n      }\n\n      if (photoFileUser) {\n        const response = Promise.await(FileOperations.saveFileFromBase64ToGoogleStorage(photoFileUser, 'avatar', PATH_USER_FILES + idUser));\n\n        if (!response.data.success) {\n          throw new Meteor.Error('500', 'Error al subir la foto');\n        } else {\n          avatarSrc = response.data.fileUrl;\n        }\n      }\n\n      Meteor.users.update(idUser, {\n        $set: {\n          'profile.path': avatarSrc\n        }\n      });\n    });\n  },\n\n  updateUser(user, photoFileUser) {\n    return Promise.asyncApply(() => {\n      const currentUser = Meteor.users.findOne(user._id);\n\n      if (currentUser.emails[0].address !== user.emails[0].address) {\n        Accounts.removeEmail(currentUser._id, currentUser.emails[0].address);\n        Accounts.addEmail(currentUser._id, user.emails[0].address);\n        Accounts.sendVerificationEmail(user._id, user.emails[0].address);\n      }\n\n      if (currentUser.username !== user.username) {\n        Accounts.setUsername(currentUser._id, user.username);\n      }\n\n      Meteor.users.update(user._id, {\n        $set: {\n          profile: {\n            profile: user.profile.profile,\n            name: user.profile.name,\n            path: currentUser.profile.path\n          }\n        }\n      });\n      ProfilesServ.setUserRoles(user._id, user.profile.profile);\n\n      if (photoFileUser) {\n        if (currentUser.profile.path) {\n          Promise.await(FileOperations.deleteFileFromGoogleStorageIfExists(currentUser.profile.path.substring(currentUser.profile.path.indexOf(PATH_USER_FILES))));\n        }\n\n        const response = Promise.await(FileOperations.saveFileFromBase64ToGoogleStorage(photoFileUser, 'avatar', PATH_USER_FILES + user._id));\n\n        if (!response.data.success) {\n          throw new Meteor.Error('403', 'Error al subir la foto.');\n        } else {\n          Meteor.users.update(user._id, {\n            $set: {\n              'profile.path': response.data.fileUrl\n            }\n          });\n        }\n      }\n    });\n  },\n\n  deleteUser(idUser) {\n    return Promise.asyncApply(() => {\n      Meteor.users.remove(idUser);\n      Meteor.roleAssignment.remove({\n        'user._id': idUser\n      });\n      Promise.await(FileOperations.deleteFilesOfFolderFromGoogleStorage(PATH_USER_FILES + idUser));\n    });\n  }\n\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}}},\"middlewares\":{\"AuthGuard.js\":function module(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                             //\n// imports/middlewares/AuthGuard.js                                                                            //\n//                                                                                                             //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                               //\nconst checkPermission = function (methodArgs, methodOptions) {\n  const idUser = this.userId;\n  const permissions = methodOptions.permissions;\n  let hasPermission = false;\n\n  if (idUser !== null) {\n    const profileName = Meteor.user().profile.profile;\n    hasPermission = Roles.userIsInRole(idUser, permissions, profileName);\n  }\n\n  if (!hasPermission) {\n    throw new Meteor.Error('403', 'Acceso denegado', 'No tienes permiso para ejecutar esta accion');\n  }\n\n  return methodArgs;\n};\n\nconst isUserLogged = function (methodArgs, methodOptions) {\n  if (!this.userId) {\n    throw new Meteor.Error('403', 'Acceso denegado', 'No tienes permiso para ejecutar esta accion');\n  }\n\n  return methodArgs;\n};\n\nmodule.exportDefault({\n  checkPermission,\n  isUserLogged\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"PermissionsMiddleware.js\":function module(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                             //\n// imports/middlewares/PermissionsMiddleware.js                                                                //\n//                                                                                                             //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                               //\nmodule.export({\n  PermissionMiddleware: () => PermissionMiddleware\n});\n\nclass PermissionMiddleware extends PublishMiddleware {\n  constructor(permissions) {\n    super();\n    this._permissions = permissions;\n  }\n\n  added(publish, collection, id, fields) {\n    if (publish.userId) {\n      return super.added(...arguments);\n    }\n\n    return publish.ready();\n  }\n\n  change(publish, collection, id, fields) {\n    if (this.checkPermission(publish.userId)) {\n      return super.changed(...arguments);\n    }\n\n    return publish.ready();\n  }\n\n  removed(publish, collection, id) {\n    if (this.checkPermission(publish.userId)) {\n      return super.removed(...arguments);\n    }\n\n    return publish.ready();\n  }\n\n  onReady(publish) {\n    if (publish.userId) {\n      return super.onReady(...arguments);\n    }\n  }\n\n  onStop(publish) {\n    if (publish.userId) {\n      return super.onStop(...arguments);\n    }\n  }\n\n  onError(publish) {\n    if (publish.userId) {\n      return super.onError(...arguments);\n    }\n  }\n\n  checkPermission(idUser) {\n    const profileName = Roles.getScopesForUser(idUser)[0];\n    return Roles.userIsInRole(idUser, this._permissions, profileName);\n  }\n\n}\n\n;\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}}},\"server\":{\"main.js\":function module(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                             //\n// server/main.js                                                                                              //\n//                                                                                                             //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                               //\nmodule.link(\"/imports/startup/server\");\nmodule.link(\"/imports/startup/both\");\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"settings\":{\"meteor-vue-fb643-firebase-adminsdk-50cu3-4c287411da.json\":function module(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                             //\n// settings/meteor-vue-fb643-firebase-adminsdk-50cu3-4c287411da.json                                           //\n//                                                                                                             //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                               //\nmodule.exports = {\n  \"type\": \"service_account\",\n  \"project_id\": \"meteor-vue-fb643\",\n  \"private_key_id\": \"4c287411dad90a48a241628463b1be3ae291fc75\",\n  \"private_key\": \"-----BEGIN PRIVATE KEY-----\\nMIIEvQIBADANBgkqhkiG9w0BAQEFAASCBKcwggSjAgEAAoIBAQC2PqG7w4cQD6a1\\nPEAJfZOO/V83SpAifGcvVQznUrh+KfNg29X4EFQ8lpETl24CCzvJZfUqXqymp3wI\\n5+UaTPf9/VhMYNBHf0VTzfaRRW1Zhr4I1AeZLhgNbLGBCstaTgyaXUCWn4cNzAOg\\nt3vm695uSq7afpRRa0C7RL852fDy6zxQMvg53LJdS1iUZp5+73YG/80X4lkSQc3n\\nQ8C2xcPXeG6JXF+vhZMn9wc8KVhr5/EnppF3UGlaR4D21K0cW16OixvV7EuTGfEW\\nxUZtv6CeE692y2I3nQZw0t1aSpwpmJM540VgUmETGq8JXThAloBe1bAP8xhfijc9\\nbNP7UYwlAgMBAAECggEAE1hT+VxoqoR0IRTY2f5h0ByGeOtfSr8t13u4YkMI9nYk\\nMYnkYpqednf9GmPz93ToecPANykpkTSCGWfpjSsnv+bz8oJBrvU25LhzjeQdbBK+\\nJVhsc2QjMCRI4KEcCOVJYoa3jnA3TnhI16Hicxa327lDFPUOxWhpzKHK3Vc3GRyV\\na6Qh7C+uoaKRbLZs9QsHN2LFX3ZNQ2kkjr5PWIqtTYKaiifZ5ppYBErH9aV5+xyH\\nbg+vz6DY7gDiX3qGg+u/LrsmTDgJOhtft6wv3FDZUg948P56RSRiWv4f33vrq+8V\\nYdlvpE+b9X/xL1u9Wh48eAlXoCrpFWSQP74dsq+n2QKBgQDd3gNx81NqzXT3GEqT\\nIqeEphrlqSkVRL9X/us+N+qEP198u7mCKTY5morocTSwazMnwtSeGxlhIb59FywH\\nzRVr0lJLEmSyWlNmno3E2/jwBbtKNbi6zc0mkYh+ev0VskNa60RPhjM2jG0KgqO1\\n0M1D7RTzWB1GqtvWYActNxOsIwKBgQDSSCDYbJnoQKA47xmzjXIB0yTbkxfiwvIP\\nwdJisbZOxedWXCIKmWl6n7HIw9ZfN35m7AECX/5KrGkbzem7Rk8hxYg9S7L36chD\\nwITArIPsw+Lrh5oBC7Rd/m313JZYX9PCyPwt5PGZRodSXfdUo51TRj0U+w9aBgU8\\n3Smwc7lnFwKBgDwVZ7FwR+LgiRBxj6CQ/fS6VwZi7TFJUNgvvN04n1X5I47P98j8\\nCCdJZtzT64TrQws9g/7dL95SGRgfMllafLaaWpbiAEsckwFzZsktGRlHNBVAvyo3\\nmZscRm6aN/esMvloRTOUEEJxfQYfot4WEcCXb9kGv8bndmlzz/26sKUpAoGAVOsv\\n6HajCLngel2EgZAjdD0ya0HRqY+UdWyOa7DcsJ8XNzbpwGIHyK9o+myry7P7ZdD0\\n72KYrMtHfyT+uNRB7J96z1YcpiVQ7Jt4gN6qQBkzMG6IcNerNTIkcd9tD69TMxw7\\nSsVkE8P5rfeohBO22wRIcoqYvoAj6VpfFZUGUG0CgYEA0msmpy4Bo+UIaUix0hyW\\nBV0rAVNC8r/YxH2AE23QHriDPrdZPKC8IauxxOSYkyu+tt4tplCfqDiT5jZr2Kzo\\nXKkHGRB2zBL69UM+EsdTTqubzAgaiwOlFOb3PJVzuS8xtWQCCYHvINp27umdhdVi\\n7CY4VXUrjDBvHatNawnFuk4=\\n-----END PRIVATE KEY-----\\n\",\n  \"client_email\": \"firebase-adminsdk-50cu3@meteor-vue-fb643.iam.gserviceaccount.com\",\n  \"client_id\": \"110615919374658839855\",\n  \"auth_uri\": \"https://accounts.google.com/o/oauth2/auth\",\n  \"token_uri\": \"https://oauth2.googleapis.com/token\",\n  \"auth_provider_x509_cert_url\": \"https://www.googleapis.com/oauth2/v1/certs\",\n  \"client_x509_cert_url\": \"https://www.googleapis.com/robot/v1/metadata/x509/firebase-adminsdk-50cu3%40meteor-vue-fb643.iam.gserviceaccount.com\"\n};\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}}},{\n  \"extensions\": [\n    \".js\",\n    \".json\",\n    \".ts\",\n    \".mjs\",\n    \".vue\"\n  ]\n});\n\nvar exports = require(\"/server/main.js\");","hash":"171704daa52d3d6c2f038507e3e51653b30ddd17","servePath":"/app.js","sourceMap":{"version":3,"sources":["imports/startup/server/services/FirebaseAdmin.js","imports/startup/server/services/MailServ.js","imports/startup/server/utilities/FileOperations.js","imports/startup/server/utilities/ResponseMessage.js","imports/startup/server/utilities/Utilities.js","imports/startup/server/Permissions.js","imports/startup/server/index.js","imports/startup/both/index.js","imports/api/Messages/Message.js","imports/api/Messages/MessageSeeder.js","imports/api/Messages/MessagesCtrl.js","imports/api/Messages/MessagesPubs.js","imports/api/Permissions/PermissionsCtrl.js","imports/api/Permissions/PermissionsPubs.js","imports/api/Profiles/Profile.js","imports/api/Profiles/ProfileSeeder.js","imports/api/Profiles/ProfilesCtrl.js","imports/api/Profiles/ProfilesPubs.js","imports/api/Profiles/ProfilesServ.js","imports/api/SystemOptions/SystemOptions.js","imports/api/SystemOptions/SystemOptionsCtrl.js","imports/api/Users/User.js","imports/api/Users/UserPresenceConfig.js","imports/api/Users/UsersCtrl.js","imports/api/Users/UsersPubs.js","imports/api/Users/UsersServ.js","imports/middlewares/AuthGuard.js","imports/middlewares/PermissionsMiddleware.js","server/main.js"],"names":["module","export","firebaseAdminStorage","BASE_URL_STORAGE","firebaseAdmin","link","default","v","serviceAccount","initializeApp","credential","cert","storageBucket","storage","bucket","Meteor","isDevelopment","settings","private","SENDER_EMAILS","process","env","EMAIL_SERVICES","SERVICES","console","warn","name","email","from","Accounts","emailTemplates","siteName","emailEnrollAccount","emailResetPassword","emailVerifyEmail","productSrc","logoSrc","enrollAccount","subject","html","user","url","urlWithoutHash","replace","info","SSR","compileTemplate","Assets","getText","render","resetPassword","verifyEmail","MAIL_URL","ResponseMessage","mimetypes","Utilities","exportDefault","saveFileFromBufferToGoogleStorage","fileBuffer","path","mimeType","responseMessage","filename","generateNumberToken","detectExtension","file","fileUrl","save","metadata","contentType","public","create","success","error","saveFileFromBase64ToGoogleStorage","base64file","match","base64EncodedImageString","split","pop","Buffer","deleteFileFromGoogleStorageIfExists","fileLocation","existsFile","exists","delete","deleteFilesOfFolderFromGoogleStorage","userFolder","deleteFiles","prefix","constructor","message","description","data","min","max","Math","floor","random","permissionsArray","Permissions","USERS","LIST","VALUE","TEXT","CREATE","UPDATE","DELETE","PROFILES","PERMISSIONS","CHAT","Object","keys","reduce","accumulator","systemModuleName","systemModuleObject","modulePermissions","map","permission","concat","REFRESH_PERMISSIONS","log","currentRoles","Roles","getAllRoles","fetch","find","_role","_id","createRole","roles","update","$set","publicName","config","loginExpirationInDays","Message","Mongo","Collection","rawCollection","createIndex","idSender","idReceiver","date","ValidatedMethod","check","AuthGuard","mixins","MethodHooks","beforeHooks","checkPermission","permissions","validate","String","text","read","Boolean","Error","run","insert","isUserLogged","messages","$in","m","multi","PermissionMiddleware","messagesPublication","PublishEndpoint","idContact","idUserLogged","userId","$or","limit","sort","use","Profile","idProfile","profile","findOne","$nin","$not","scope","getScopesForUser","hasPermission","userIsInRole","publish","roleAssignment","StaticProfiles","unique","admin","p","REFRESH_STATIC_PROFILES","forEach","staticProfileName","upsert","users","remove","length","setUserRoles","Match","ProfilesServ","OneOf","validateName","oldProfile","getUsersByProfile","updateProfileUsers","noStaticProfilesPublication","getStaticProfileName","profilesPublication","existName","idUser","profileName","title","routeName","SystemOptions","userLogged","userRoles","getRolesForUser","optionsOfUser","systemOption","role","push","User","SimpleSchema","UserProfileSchema","type","optional","blackbox","attachSchema","UserPresence","StatusSchema","status","onCleanup","sessionIds","$unset","onUserOnline","connection","Date","ipAddr","clientAddress","userAgent","httpHeaders","onUserIdle","onUserOffline","UsersServ","onCreateUser","options","customizedUser","assign","online","validateLoginAttempt","loginAttempt","allowed","emails","verified","loginTokensOfUser","services","resume","loginTokens","username","address","validateEmail","validateUsername","photoFileUser","updateUser","createUser","deleteUser","usersPublication","createdAt","FileOperations","PATH_USER_FILES","newEmail","existEmail","findUserByEmail","oldUser","newUsername","existUsername","findUserByUsername","avatarSrc","sendEnrollmentEmail","response","currentUser","removeEmail","addEmail","sendVerificationEmail","setUsername","substring","indexOf","methodArgs","methodOptions","PublishMiddleware","_permissions","added","collection","id","fields","arguments","ready","change","changed","removed","onReady","onStop","onError"],"mappings":"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","file":"/app.js","sourcesContent":["import firebaseAdmin from 'firebase-admin';\r\nimport serviceAccount from '../../../../settings/meteor-vue-fb643-firebase-adminsdk-50cu3-4c287411da.json';\r\n\r\nfirebaseAdmin.initializeApp({\r\n    credential: firebaseAdmin.credential.cert(serviceAccount),\r\n    storageBucket: 'meteor-vue-fb643.appspot.com'\r\n});\r\n\r\nexport const firebaseAdminStorage = firebaseAdmin.storage().bucket();\r\n\r\nexport const BASE_URL_STORAGE = 'https://storage.googleapis.com';","if (Meteor.isDevelopment) {\r\n    if (Meteor.settings.private?.SENDER_EMAILS) {\r\n        process.env.EMAIL_SERVICES = Meteor.settings.private.SENDER_EMAILS.SERVICES;\r\n        } else {\r\n        console.warn('[Meteor + Vue] - Sender emails are not configured, Emails will not be send');\r\n    }\r\n}\r\n\r\nconst name = 'Scaffold Metor + Vue';\r\nconst email = `<${process.env.EMAIL_SERVICES}>`;\r\nconst from = `${name} ${email}`;\r\n\r\nAccounts.emailTemplates.siteName = name;\r\nAccounts.emailTemplates.from = from;\r\nconst emailTemplates = Accounts.emailTemplates;\r\n\r\nconst emailEnrollAccount = 'email_enroll_account.html';\r\nconst emailResetPassword = 'email_reset_password.html';\r\nconst emailVerifyEmail = 'email_verify_email.html';\r\n\r\nconst productSrc = 'https://firebasestorage.googleapis.com/v0/b/meteor-vue-fb643.appspot.com/o/vue-meteor.png?alt=media'\r\nconst logoSrc = 'https://firebasestorage.googleapis.com/v0/b/meteor-vue-fb643.appspot.com/o/PoweredDark.png?alt=media'\r\n\r\nemailTemplates.enrollAccount = {\r\n    subject() {\r\n        return `Bienvenido a ${name}`;\r\n    },\r\n    html (user, url) {\r\n        const urlWithoutHash = url.replace('#/', '');\r\n        if (Meteor.isDevelopment) console.info('Set initial password link: ', urlWithoutHash);\r\n        SSR.compileTemplate('emailEnrollAccount', Assets.getText(emailEnrollAccount));\r\n        return SSR.render('emailEnrollAccount', {\r\n            urlWithoutHash,\r\n            productSrc,\r\n            logoSrc\r\n        });\r\n    }\r\n};\r\n\r\nemailTemplates.resetPassword = {\r\n    subject() {\r\n        return `Restablece tu contraseña`;\r\n    },\r\n    html (user, url) {\r\n        const urlWithoutHash = url.replace('#/', '');\r\n        if (Meteor.isDevelopment) console.info('Password reset link: ', urlWithoutHash);\r\n        SSR.compileTemplate('emailResetPassword', Assets.getText(emailResetPassword));\r\n        return SSR.render('emailResetPassword', {\r\n            urlWithoutHash,\r\n            productSrc,\r\n            logoSrc\r\n        });\r\n    }\r\n};\r\n\r\nemailTemplates.verifyEmail = {\r\n    subject() {\r\n        return `Verifica tu correo`;\r\n    },\r\n    html (user, url) {\r\n        const urlWithoutHash = url.replace('#/', '');\r\n        if (Meteor.isDevelopment) console.info('Verify email link: ', urlWithoutHash);\r\n        SSR.compileTemplate('emailVerifyEmail', Assets.getText(emailVerifyEmail));\r\n        return SSR.render('emailVerifyEmail', {\r\n            urlWithoutHash,\r\n            productSrc,\r\n            logoSrc\r\n        });\r\n    }\r\n};\r\n\r\nif (Meteor.isDevelopment) {\r\n    if (Meteor.settings.private?.MAIL_URL) {\r\n        process.env.MAIL_URL = Meteor.settings.private.MAIL_URL;\r\n        } else {\r\n        console.warn('[Meteor + Vue] - Email settings are not configured, Emails will not be send');\r\n    }\r\n};","import { ResponseMessage } from \"./ResponseMessage\";\r\nimport mimetypes from 'mimetypes';\r\nimport Utilities from \"./Utilities\";\r\nimport { BASE_URL_STORAGE, firebaseAdminStorage } from \"../services/FirebaseAdmin\";\r\n\r\nexport default {\r\n    async saveFileFromBufferToGoogleStorage (fileBuffer, name, path, mimeType){\r\n        const responseMessage = new ResponseMessage();\r\n        const filename = `${name}${Utilities.generateNumberToken(10, 99)}.${mimetypes.detectExtension(mimeType)}`;\r\n        const file = firebaseAdminStorage.file(`${path}/${filename}`);\r\n        const fileUrl = `${BASE_URL_STORAGE}/${firebaseAdminStorage.name}/${path}/${filename}`;\r\n        \r\n        try {\r\n            await file.save(fileBuffer, {\r\n                metadata: {\r\n                    contentType: mimeType\r\n                },\r\n                public: true\r\n            });\r\n            responseMessage.create('File uploaded', null, {success: true, fileUrl});\r\n        } catch (error) {\r\n            console.error('Error uploading file to Google Storage');\r\n            responseMessage.create('Error uploading file to Google Storage', null, {success: false});\r\n        }\r\n        return responseMessage;\r\n    },\r\n    async saveFileFromBase64ToGoogleStorage(base64file, name, path){\r\n        const mimeType = base64file.match(/data:([a-zA-Z0-9]+\\/[a-zA-Z0-9-.+]+).*,.*/)[1];\r\n        const base64EncodedImageString = base64file.split(';base64,').pop();\r\n        const fileBuffer = Buffer.from(base64EncodedImageString, 'base64');\r\n        return await this.saveFileFromBufferToGoogleStorage(fileBuffer, name, path, mimeType);\r\n    },\r\n    async deleteFileFromGoogleStorageIfExists(fileLocation) {\r\n        const file = firebaseAdminStorage.file(fileLocation);\r\n        \r\n        try {\r\n            const existsFile = await file.exists();\r\n            if (existsFile[0]) {\r\n                await file.delete();\r\n            }\r\n        } catch (error) {\r\n            console.error('Error delete file from Google Storage', error);    \r\n        }\r\n    },\r\n    async deleteFilesOfFolderFromGoogleStorage (userFolder) {\r\n        try {\r\n            await firebaseAdminStorage.deleteFiles({prefix: userFolder + '/'})\r\n        } catch (error) {\r\n            console.error('Error deleting files from Google Storage: ', error);\r\n        }\r\n    }\r\n};","export class ResponseMessage {\r\n    constructor(){\r\n        this.message = null;\r\n        this.description = null;\r\n        this.data = null;\r\n    }\r\n    \r\n    create(message, description = null, data = null){\r\n        this.message = message;\r\n        this.description = description;\r\n        this.data = data;\r\n    }\r\n}","export default {\r\n    generateNumberToken (min, max) {\r\n        return Math.floor(Math.random() * (max + 1 - min) + min);\r\n    }\r\n}","const Permissions = { \r\n    USERS: {\r\n        LIST: {VALUE: 'users-view', TEXT: 'Listar usuarios'},\r\n        CREATE: {VALUE: 'users-create', TEXT: 'Crear usuario'},\r\n        UPDATE: {VALUE: 'users-edit', TEXT: 'Actualizar usuario'},\r\n        DELETE: {VALUE: 'users-delete', TEXT: 'Eliminar usuario'}\r\n    }, \r\n    PROFILES: {\r\n        LIST: {VALUE: 'profiles-view', TEXT: 'Listar perfiles'},\r\n        CREATE: {VALUE: 'profiles-create', TEXT: 'Crear perfil'},\r\n        UPDATE: {VALUE: 'profiles-edit', TEXT: 'Actualizar perfil'},\r\n        DELETE: {VALUE: 'profiles-delete', TEXT: 'Eliminar perfil'}\r\n    },\r\n    PERMISSIONS: {\r\n        LIST: {VALUE: 'permissions-view', TEXT: 'Listar permisos'}\r\n    },\r\n    CHAT: {\r\n        CREATE: {VALUE: 'messages-create', TEXT: 'Enviar mensajes de chat'},\r\n        LIST: {VALUE: 'messages-view', TEXT: 'Ver mensajes de chat'}\r\n    }\r\n};\r\n\r\nexport const permissionsArray = Object.keys(Permissions).reduce((accumulator, systemModuleName) => {\r\n    const systemModuleObject = Permissions[systemModuleName];\r\n    const modulePermissions = Object.keys(systemModuleObject).map(permission => systemModuleObject[permission]);\r\n    return accumulator.concat(modulePermissions);\r\n}, []);\r\n\r\nif (Meteor.isDevelopment) {\r\n    if (Meteor.settings.private && Meteor.settings.private.REFRESH_PERMISSIONS) {\r\n        console.log('uplading permissions. . .');\r\n        const currentRoles = Roles.getAllRoles().fetch();\r\n        for (let permission of permissionsArray) {\r\n            if (!currentRoles.find(_role => _role._id === permission.VALUE)) {\r\n                Roles.createRole(permission.VALUE);\r\n            }\r\n            Meteor.roles.update(permission.VALUE, {\r\n                $set: {\r\n                    publicName: permission.TEXT\r\n                }\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\nexport default Permissions;","import './Permissions';\r\n\r\nimport './services/MailServ';\r\nimport './services/FirebaseAdmin';\r\n\r\nimport '../../api/Users/User';\r\nimport '../../api/Users/UsersCtrl';\r\nimport '../../api/Users/UsersPubs'; \r\n\r\nimport '../../api/Profiles/ProfileSeeder';\r\nimport '../../api/Profiles/ProfilesCtrl';\r\nimport '../../api/Profiles/ProfilesPubs';\r\n\r\nimport '../../api/Permissions/PermissionsCtrl';\r\nimport '../../api/Permissions/PermissionsPubs';\r\n\r\nimport '../../api/SystemOptions/SystemOptionsCtrl';\r\n\r\nimport '../../api/Messages/MessageSeeder';\r\nimport '../../api/Messages/MessagesCtrl';\r\nimport '../../api/Messages/MessagesPubs';\r\n\r\n\r\n","Accounts.config( {\r\n    loginExpirationInDays: 30\r\n})","import {Mongo} from 'meteor/mongo';\r\n\r\nexport const Message = new Mongo.Collection('messages');","import {Message} from './Message';\r\n\r\nMessage.rawCollection().createIndex({ idSender: 1 });\r\nMessage.rawCollection().createIndex({ idReceiver: 1 });\r\nMessage.rawCollection().createIndex({ date: 1 });","import {ValidatedMethod} from 'meteor/mdg:validated-method';\r\nimport {check} from 'meteor/check';\r\nimport AuthGuard from '../../middlewares/AuthGuard';\r\nimport {ResponseMessage} from '../../startup/server/utilities/ResponseMessage';\r\nimport { Message } from './Message';\r\nimport Permissions from '../../startup/server/Permissions';\r\n\r\nnew ValidatedMethod({\r\n    name: 'message.save',\r\n    mixins: [MethodHooks],\r\n    beforeHooks: [AuthGuard.checkPermission],\r\n    permissions: [Permissions.CHAT.CREATE.VALUE],\r\n    validate (message) {\r\n        try {\r\n            check(message, {\r\n                idSender: String,\r\n                idReceiver: String,\r\n                text: String,\r\n                date: String,\r\n                read: Boolean\r\n            })\r\n        } catch (error) {\r\n            console.error('message.save', error);\r\n            throw new Meteor.Error('403', 'La informacion introducida no es valida')\r\n        }\r\n    },\r\n    run (message) {\r\n        const responseMessage = new ResponseMessage();\r\n        try {\r\n            Message.insert(message);\r\n            responseMessage.create('Se inserto el mensaje exitosamente');\r\n        } catch (error) {\r\n            console.error('message.save', error);\r\n            throw new Meteor.Error('500', 'Ha ocurrido un error al insertar el mensaje');\r\n        }\r\n        return responseMessage;\r\n    }\r\n});\r\n\r\nnew ValidatedMethod({\r\n    name: 'messages.read',\r\n    mixins: [MethodHooks],\r\n    beforeHooks: [AuthGuard.isUserLogged],\r\n    validate (messages) {\r\n        try {\r\n            check(messages, [\r\n                {\r\n                    _id: String,\r\n                    idSender: String,\r\n                    idReceiver: String,\r\n                    text: String,\r\n                    date: String,\r\n                    read: Boolean\r\n                }\r\n            ]);\r\n        } catch (error) {\r\n            console.error('messages.read', error);\r\n            throw new Meteor.Error('403', 'La informacion no es valida');\r\n        }\r\n    },\r\n    run (messages) {\r\n        const responseMessage = new ResponseMessage();\r\n        try {\r\n            Message.update({_id: {$in: messages.map(m => m._id) }},{\r\n                $set: {\r\n                    read: true\r\n                }\r\n            },{multi: true});\r\n        } catch (error) {\r\n            console.error('messages.read', error);\r\n            throw new Meteor.Error('500', 'Ha ocurrido un error al marcar los mensajes como leidos.');\r\n        }\r\n        return responseMessage;\r\n    }\r\n});\r\n\r\n","import { PermissionMiddleware } from \"../../middlewares/PermissionsMiddleware\";\r\nimport Permissions from \"../../startup/server/Permissions\";\r\nimport { Message } from \"./Message\";\r\n\r\nconst messagesPublication = new PublishEndpoint('messages.list', function(idContact = null) {\r\n   const idUserLogged = this.userId;\r\n   return Message.find({\r\n       $or: [\r\n           {idSender: idUserLogged, idReceiver: idContact},\r\n           {idSender: idContact, idReceiver: idUserLogged}\r\n       ]\r\n   },{\r\n       limit: 20,\r\n       sort: {\r\n           date: -1\r\n       }\r\n   });\r\n});\r\n\r\nmessagesPublication.use(new PermissionMiddleware([Permissions.CHAT.LIST.VALUE]));","import Permissions from '../../startup/server/Permissions';\r\nimport { ResponseMessage } from '../../startup/server/utilities/ResponseMessage';\r\nimport AuthGuard from '../../middlewares/AuthGuard';\r\nimport { check } from 'meteor/check';\r\nimport { Profile } from '../Profiles/Profile';\r\n\r\nnew ValidatedMethod({\r\n    name: 'permissions.list',\r\n    mixins: [MethodHooks],\r\n    permissions: [Permissions.PERMISSIONS.LIST.VALUE],\r\n    beforeHooks: [AuthGuard.checkPermission],\r\n    validate:null,\r\n    run() {\r\n        const responseMessage = new ResponseMessage();\r\n        try {\r\n            const permissions = Meteor.roles.find().fetch();\r\n            responseMessage.create('Permisos disponibles del sistema', null, permissions);\r\n        } catch (error) {\r\n            console.error('permissions.list: ', error);\r\n            throw new Meteor.Error('500', 'Ocurrio un error al obtener los permisos');\r\n        }\r\n        return responseMessage;\r\n    }\r\n});\r\n\r\nnew ValidatedMethod({\r\n    name: 'permissions.listByIdProfile',\r\n    mixins: [MethodHooks],\r\n    permissions: [Permissions.PERMISSIONS.LIST.VALUE],\r\n    beforeHooks: [AuthGuard.checkPermission],\r\n    validate({ idProfile }) {\r\n        try {\r\n            check(idProfile, String);\r\n        } catch (error) {\r\n            console.error('permissions.listByIdProfile: ', error);\r\n            throw new Meteor.Error('403', 'La informacion introducida es valida');\r\n        }\r\n    },\r\n    run({ idProfile }) {\r\n        const responseMessage = new ResponseMessage();\r\n        try {\r\n            const profile = Profile.findOne(idProfile);\r\n            const permissions = Meteor.roles.find({ _id: {$nin: profile.permissions} }).fetch();\r\n            responseMessage.create('Permisos asociados al perfil.', null, permissions);\r\n        } catch (error) {\r\n            console.error('permissions.listByIdProfile: ', error);\r\n            throw new Meteor.Error('500', 'Ocurrio un error al obtener los permisos del perfil');\r\n        }\r\n        return responseMessage;\r\n    }\r\n});\r\n\r\nnew ValidatedMethod({\r\n    name: 'permissions.listOtherForIdProfile',\r\n    mixins: [MethodHooks],\r\n    permissions: [Permissions.PERMISSIONS.LIST.VALUE],\r\n    beforeHooks: [AuthGuard.checkPermission],\r\n    validate({ idProfile }) {\r\n        try {\r\n            check(idProfile, String);\r\n        } catch (error) {\r\n            console.error('permissions.listOtherForIdProfile: ', error);\r\n            throw new Meteor.Error('403', 'La informacion introducida no es valida');\r\n        }\r\n    },\r\n    run({ idProfile }) {\r\n        const responseMessage = new ResponseMessage();\r\n        try {\r\n            const profile = Profile.findOne(idProfile);\r\n            const permissions = Meteor.roles.find({ _id: {$not: {$nin: profile.permissions} } }).fetch();\r\n            responseMessage.create('Permisos no asociados al perfil.', null, permissions);\r\n        } catch (error) {\r\n            console.error('permissions.listOtherForIdProfile: ', error);\r\n            throw new Meteor.Error('500', 'Ocurrio un error al obtener los permisos no asociados al perfil');\r\n        }\r\n        return responseMessage;\r\n    }\r\n});\r\n\r\nnew ValidatedMethod({\r\n    name: 'permission.check',\r\n    mixins: [MethodHooks],\r\n    beforeHooks: [AuthGuard.isUserLogged],\r\n    validate({ permission }) {\r\n        try {\r\n            check( permission, String);\r\n        } catch (error) {\r\n            console.error('permissions.listOtherForIdProfile: ', error);\r\n            throw new Meteor.Error('403', 'La informacion introducida no es valida');\r\n        }\r\n    },\r\n    run({ permission }) {\r\n        const responseMessage = new ResponseMessage();\r\n        try {\r\n            const scope = Roles.getScopesForUser(this.userId)[0];\r\n            const hasPermission = Roles.userIsInRole(this.userId, permission, scope);\r\n            responseMessage.create(`El usuario ${ hasPermission ? 'si' : 'no' } tiene el permiso`, null, {hasPermission} );\r\n        } catch (error) {\r\n            console.error('permissions.check: ', error);\r\n            throw new Meteor.Error('500', 'Ocurrio un error al verificar el permiso');\r\n        }\r\n        return responseMessage;\r\n    }\r\n});\r\n","Meteor.publish('roles', function() {\r\n    return Meteor.roleAssignment.find({ 'user._id' : this.userId });\r\n});","import {Mongo} from 'meteor/mongo';\r\n\r\nexport const Profile = new Mongo.Collection('profiles');","import Permissions, {permissionsArray} from \"../../startup/server/Permissions\"\r\nimport { Profile } from \"./Profile\";\r\n\r\nProfile.rawCollection().createIndex({'name': 1}, {unique: true});\r\n\r\nexport const StaticProfiles = {\r\n    admin: {\r\n        name: 'admin',\r\n        description: 'Administrador',\r\n        permissions: permissionsArray.map(p=>p.VALUE)\r\n    }\r\n};\r\n\r\nif (Meteor.isDevelopment) {\r\n    if (Meteor.settings.private && Meteor.settings.private.REFRESH_STATIC_PROFILES) {\r\n        console.log('updating static profiles. . .');\r\n        Object.keys(StaticProfiles).forEach(staticProfileName => {\r\n            Profile.upsert({name: StaticProfiles[staticProfileName].name}, {\r\n                $set: {\r\n                    description: StaticProfiles[staticProfileName].description,\r\n                    permissions: StaticProfiles[staticProfileName].permissions,\r\n                }\r\n            });\r\n            Meteor.users.find({ 'profile.profile': StaticProfiles[staticProfileName].name}).fetch().forEach(user => {\r\n                Meteor.roleAssignment.remove({'user._id': user._id});\r\n                if (StaticProfiles[staticProfileName].permissions.length > 0) {\r\n                    Roles.setUserRoles(user._id, StaticProfiles[staticProfileName].permissions, StaticProfiles[staticProfileName].name);\r\n                }\r\n            })\r\n        });\r\n    }\r\n};","import {check, Match} from 'meteor/check';\r\nimport AuthGuard from '../../middlewares/AuthGuard';\r\nimport Permissions from '../../startup/server/Permissions';\r\nimport { ResponseMessage } from '../../startup/server/utilities/ResponseMessage';\r\nimport {Profile} from './Profile';\r\nimport ProfilesServ from './ProfilesServ';\r\n\r\nnew ValidatedMethod({\r\n    name: 'profile.save',\r\n    mixins: [MethodHooks],\r\n    permissions: [Permissions.PROFILES.CREATE.VALUE, Permissions.PROFILES.UPDATE.VALUE],\r\n    beforeHooks: [AuthGuard.checkPermission],\r\n    validate(profile) {\r\n        try {\r\n            check(profile, {\r\n                _id: Match.OneOf(String, null),\r\n                name: String,\r\n                description: String,\r\n                permissions: [String]\r\n            });\r\n        } catch (error) {\r\n            console.error('profile.save', error);\r\n            throw new Meteor.Error('403', 'La informacion no es valida');\r\n        }\r\n        ProfilesServ.validateName(profile.name, profile._id);\r\n    },\r\n    run(profile) {\r\n        const responseMessage = new ResponseMessage();\r\n        if (profile._id !== null) {\r\n        try {\r\n            // UPDATE PROFILE\r\n            const oldProfile = Profile.findOne(profile._id);\r\n            const users = ProfilesServ.getUsersByProfile(profile._id);\r\n            Profile.update(profile._id, {\r\n                $set: {\r\n                    name: profile.name,\r\n                    description: profile.description,\r\n                    permissions: profile.permissions\r\n                }\r\n            });\r\n            if (oldProfile.name !== profile.name) {\r\n                Meteor.users.update({'profile.profile': oldProfile.name}, {\r\n                    $set: {\r\n                        'profile.profile': profile.name\r\n                    }\r\n                },{ multi:true });\r\n            }\r\n            ProfilesServ.updateProfileUsers(users, profile);\r\n            responseMessage.create('Se actualizo el perfil exitosamente');\r\n        } catch (error) {\r\n            console.error('profile.save', error);\r\n            throw new Meteor.Error('500', 'Ocurrio un error al actualizar el perfil');\r\n        }         \r\n        } else {\r\n            try {\r\n                // CREATE PROFILE\r\n                Profile.insert({\r\n                    name: profile.name,\r\n                    description: profile.description,\r\n                    permissions: profile.permissions\r\n                });\r\n                responseMessage.create('Se creo el perfil exitosamente');\r\n            } catch (error) {\r\n                console.error('profile.save', error);\r\n                throw new Meteor.Error('500', 'Ocurrio un error al crear el nuevo perfil');\r\n            }\r\n        }\r\n        return responseMessage;\r\n    }\r\n});\r\n\r\nnew ValidatedMethod( {\r\n    name: 'profile.delete',\r\n    mixins: [MethodHooks],\r\n    permissions: [Permissions.PROFILES.DELETE.VALUE],\r\n    beforeHooks: [AuthGuard.checkPermission],\r\n    validate({ idProfile }) {\r\n        try {\r\n            check(idProfile, String);\r\n        } catch (error) {\r\n            console.error('profile.delete', error);\r\n            throw new Meteor.Error('403', 'La informacion introducida no es valida');\r\n        }\r\n        const users = ProfilesServ.getUsersByProfile(idProfile);\r\n        if (users.length > 0) {\r\n            throw new Meteor.Error('403', 'No se puede eliminar perfil.', 'Hay usuarios usando este perfil');\r\n        }\r\n    },\r\n    run({ idProfile }) {\r\n        const responseMessage = new ResponseMessage();\r\n        try {\r\n            Profile.remove(idProfile);\r\n            responseMessage.create('Perfil eliminado exitosamente');\r\n        } catch (error) {\r\n            console.error('profile.delete', error);\r\n            throw new Meteor.Error('403', 'La informacion introducida no es valida');\r\n        }\r\n        return responseMessage;\r\n    }\r\n});","import { PermissionMiddleware } from \"../../middlewares/PermissionsMiddleware\";\r\nimport Permissions from \"../../startup/server/Permissions\";\r\nimport { Profile } from \"./Profile\"\r\nimport ProfilesServ from \"./ProfilesServ\";\r\n\r\nconst noStaticProfilesPublication = new PublishEndpoint('profile.listNotStaticProfiles', function() {\r\n    return Profile.find({name: {$nin: ProfilesServ.getStaticProfileName() }});\r\n}); \r\n\r\nconst profilesPublication = new PublishEndpoint('profile.listAll', function() {\r\n    return Profile.find();\r\n}); \r\n\r\nprofilesPublication.use(new PermissionMiddleware([Permissions.PROFILES.LIST.VALUE]));\r\nnoStaticProfilesPublication.use(new PermissionMiddleware([Permissions.PROFILES.LIST.VALUE]));","import { Profile } from \"./Profile\"\r\nimport { StaticProfiles } from \"./ProfileSeeder\";\r\n\r\nexport default {\r\n    validateName(name, idProfile){\r\n        const existName = Profile.findOne({name});\r\n        if (idProfile) {\r\n            const oldProfile = Profile.findOne(idProfile);\r\n            if (oldProfile.name !== name && existName) {\r\n                throw new Meteor.Error('403', \"El nuevo nombre de perfil ya se encuentra en uso\");\r\n            }\r\n        } else if (existName) {\r\n            throw new Meteor.Error('403', \"El nombre de perfil ya se encuentra en uso\");\r\n        }\r\n    },\r\n    getUsersByProfile(idProfile) {\r\n        const profile = Profile.findOne(idProfile);\r\n        return Meteor.users.find({'profile.profile': profile.name}).fetch();\r\n    },\r\n    setUserRoles(idUser, profileName) {\r\n        const permissions = Profile.findOne({name: profileName}).permissions;\r\n        Meteor.roleAssignment.remove({'user._id': idUser});\r\n        Roles.setUserRoles(idUser, permissions, profileName);\r\n    },\r\n    updateProfileUsers(users, profile) {\r\n        users.forEach(user => {\r\n            this.setUserRoles(user._id, profile.name);\r\n        });\r\n    },\r\n    getStaticProfileName() {\r\n        return Object.keys(StaticProfiles).map(staticProfileName => {\r\n            return StaticProfiles[staticProfileName].name;\r\n        });\r\n    }\r\n};","import Permissions from '../../startup/server/Permissions';\r\n\r\nexport default [\r\n    {\r\n        title: 'Inicio',\r\n        permission: null,\r\n        routeName: 'home'\r\n    },\r\n    {\r\n        title: 'Usuarios',\r\n        permission: Permissions.USERS.LIST.VALUE,\r\n        routeName: 'home.users'\r\n    },\r\n    {\r\n        title: 'Perfiles',\r\n        permission: Permissions.PROFILES.LIST.VALUE,\r\n        routeName: 'home.profiles'\r\n    },\r\n    {\r\n        title: 'Chat',\r\n        permission: Permissions.CHAT.LIST.VALUE,\r\n        routeName: 'home.chat'\r\n    }\r\n\r\n];","import SystemOptions from \"./SystemOptions\";\r\nimport { ResponseMessage } from \"../../startup/server/utilities/ResponseMessage\";\r\nimport AuthGuard from \"../../middlewares/AuthGuard\";\r\n\r\nnew ValidatedMethod({\r\n    name: 'user.getSystemOptions',\r\n    mixins: [MethodHooks],\r\n    beforeHooks: [AuthGuard.isUserLogged],\r\n    validate: null,\r\n    run(){\r\n        const responseMessage = new ResponseMessage();\r\n        const userLogged = Meteor.user();\r\n        const userRoles = Roles.getRolesForUser(userLogged._id, userLogged.profile.profile);\r\n        const optionsOfUser = SystemOptions.reduce(( accumulator, systemOption ) => {\r\n            if (!systemOption.permission || !!userRoles.find(role => role === systemOption.permission)) {\r\n                accumulator.push(systemOption);\r\n            }\r\n            return accumulator;\r\n        }, [])\r\n        responseMessage.create('Opciones del sistema de usuario.', null, optionsOfUser);\r\n        return responseMessage;\r\n    }\r\n})","import { User } from 'meteor/socialize:user-model';\r\nimport SimpleSchema from \"simpl-schema\";\r\n\r\nMeteor.users.rawCollection().createIndex({ 'profile.profile': 1 });\r\n\r\nconst UserProfileSchema = new SimpleSchema({\r\n    profile: {\r\n        type: Object,\r\n        optional: false,\r\n        blackbox: true\r\n    }\r\n});\r\n\r\nUser.attachSchema( UserProfileSchema );","import { Meteor } from 'meteor/meteor';\r\nimport { User } from 'meteor/socialize:user-model';\r\nimport { UserPresence } from 'meteor/socialize:user-presence';\r\nimport SimpleSchema from 'simpl-schema';\r\n\r\n// Schema for the fields where we will store the status data\r\nconst StatusSchema = new SimpleSchema({\r\n    status: Object,\r\n    'status.online': {type: Boolean},\r\n    'status.idle': {type: Boolean, optional: true},\r\n    'status.lastLogin': {type: Object, optional: true, blackbox: true}\r\n});\r\n\r\n// Add the schema to the existing schema currently attached to the User model\r\nUser.attachSchema(StatusSchema);\r\n\r\n// If `sessionIds` is undefined this signifies we need a fresh start.\r\n// When a full cleanup is necessary we will unset the status field to show all users as offline\r\nUserPresence.onCleanup(function onCleanup(sessionIds) {\r\n    if (!sessionIds) {\r\n        Meteor.users.update({}, { $set: {'status.online': false}, $unset: { 'status.idle': true } }, { multi: true });\r\n    }\r\n});\r\n\r\n// When a user comes online we set their status to online and set the lastOnline field to the current time\r\nUserPresence.onUserOnline(function onUserOnline(userId, connection) {\r\n    if (connection) {\r\n        Meteor.users.update(userId, { \r\n            $set: { \r\n                'status.online': true, 'status.idle': false,\r\n                'status.lastLogin': {\r\n                    date: new Date(),\r\n                    ipAddr: connection.clientAddress,\r\n                    userAgent: connection.httpHeaders['user-agent']\r\n                }\r\n            } \r\n        });\r\n    }\r\n});\r\n\r\n// When a user goes idle we'll set their status to indicate this\r\nUserPresence.onUserIdle(function onUserIdle(userId) {\r\n    Meteor.users.update(userId, { $set: { 'status.idle': true } });\r\n});\r\n\r\n// When a user goes offline we'll unset their status field to indicate offline status\r\nUserPresence.onUserOffline(function onUserOffline(userId) {\r\n    Meteor.users.update(userId, { $set: { 'status.online': false }, $unset: { 'status.idle': true } });\r\n});\r\n","import {ValidatedMethod} from 'meteor/mdg:validated-method';\r\nimport {check, Match} from 'meteor/check';\r\nimport { ResponseMessage } from '../../startup/server/utilities/ResponseMessage';\r\nimport UsersServ from './UsersServ';\r\nimport AuthGuard from '../../middlewares/AuthGuard';\r\nimport Permissions from '../../startup/server/Permissions';\r\nimport './UserPresenceConfig';\r\n\r\nAccounts.onCreateUser((options, user) => {\r\n    const customizedUser = Object.assign({\r\n        status: {\r\n            online: false\r\n        }\r\n    }, user);\r\n    if (options.profile) {\r\n        customizedUser.profile = options.profile;\r\n    }\r\n    return customizedUser;\r\n});\r\n\r\nAccounts.validateLoginAttempt(loginAttempt => {\r\n    if (loginAttempt.allowed) {\r\n        if (!loginAttempt.user.emails[0].verified) {\r\n            throw new Meteor.Error('403', 'El correo de la cuenta no se ha verificado aun.');\r\n        }\r\n        const loginTokensOfUser = loginAttempt.user.services.resume?.loginTokens || [];\r\n        if (loginTokensOfUser.length > 1) {\r\n            Meteor.users.update(loginAttempt.user._id, {\r\n                $set: {\r\n                    'services.resume.loginTokens': [loginTokensOfUser.pop()]\r\n                }\r\n            });\r\n        }\r\n        return true;\r\n    }\r\n});\r\n\r\nnew ValidatedMethod ({\r\n    name: 'user.save',\r\n    mixins: [MethodHooks],\r\n    permissions: [Permissions.USERS.CREATE.VALUE, Permissions.USERS.UPDATE.VALUE],\r\n    beforeHooks: [AuthGuard.checkPermission],\r\n    validate ({user}){\r\n        try {\r\n            check(user, {\r\n                _id: Match.OneOf(String, null),\r\n                username: String,\r\n                emails: [{address: String, verified: Boolean}],\r\n                profile: {\r\n                    profile: String,\r\n                    name: String,\r\n                    path: Match.OneOf(String, null)\r\n                }\r\n            })\r\n        } catch (error) {\r\n            console.log('save.user', error);\r\n            throw new Meteor.Error('403', 'La informacion introducida no es valida');\r\n        }\r\n        UsersServ.validateEmail(user.emails[0].address, user._id);\r\n        UsersServ.validateUsername(user.username, user._id);\r\n    },\r\n    async run ({user, photoFileUser}){\r\n        const responseMessage = new ResponseMessage();\r\n        if (user._id !== null) {\r\n            try {\r\n                // UPDATE USER \r\n                await UsersServ.updateUser(user, photoFileUser);\r\n                responseMessage.create('Se actualizo el usuario exitosamente');\r\n            } catch (error) {\r\n                console.error('user.save', error);\r\n                throw new Meteor.Error('500', 'Ocurrio un error al actualizar el usuario');\r\n            }\r\n        } else {\r\n            try {\r\n                // CREATE USER\r\n                await UsersServ.createUser(user, photoFileUser);\r\n                responseMessage.create('Se ha creado usuario exitosamente');\r\n            } catch (error) {\r\n                console.error('user.save: ', error);\r\n                throw new Meteor.Error('500', 'Ocurrió un error al crear un usuario');\r\n            }\r\n        }\r\n        return responseMessage;\r\n    }\r\n});\r\n\r\nnew ValidatedMethod({\r\n    name: 'user.delete',\r\n    mixins: [MethodHooks],\r\n    permissions: [Permissions.USERS.DELETE.VALUE],\r\n    beforeHooks: [AuthGuard.checkPermission],\r\n    validate({idUser}){\r\n        try {\r\n            check(idUser, String);\r\n        } catch (error) {\r\n            console.error('user.delete', error);\r\n            throw new Meteor.Error('403', 'La informacion introducida no es valida');\r\n        }\r\n    },\r\n    async run ({idUser}) {\r\n        const responseMessage = new ResponseMessage;\r\n        try {\r\n            await UsersServ.deleteUser(idUser);\r\n            responseMessage.create('Se ha eliminado exitosamente al usuario');\r\n        } catch (error) {\r\n            console.error('user.delete', error);\r\n            throw new Meteor.Error('500', 'Ocurrio un error al eliminar un usuario');\r\n        }\r\n        return responseMessage;\r\n    }\r\n});\r\n\r\nnew ValidatedMethod ({\r\n    name: 'user.updatePersonalData',\r\n    mixins: [MethodHooks],\r\n    beforeHooks: [AuthGuard.isUserLogged],\r\n    validate({user}){\r\n        try {\r\n            check(user, {\r\n                _id: Match.OneOf(String, null),\r\n                username: String,\r\n                emails: [{address: String, verified: Boolean}],\r\n                profile: {\r\n                    profile: String,\r\n                    name: String,\r\n                    path: Match.OneOf(String, null)\r\n                }\r\n            })\r\n        } catch (error) {\r\n            console.log('user.updatePersonalData', error);\r\n            throw new Meteor.Error('403', 'La informacion introducida no es valida');\r\n        }\r\n        UsersServ.validateEmail(user.emails[0].address, user._id);\r\n        UsersServ.validateUsername(user.username, user._id);\r\n    },\r\n    async run({user, photoFileUser}){\r\n        const responseMessage = new ResponseMessage();\r\n        try {\r\n            // UPDATE USER \r\n            await UsersServ.updateUser(user, photoFileUser);\r\n            responseMessage.create('Se actualizo la informacion exitosamente');\r\n        } catch (error) {\r\n            console.error('user.updatePersonalData', error);\r\n            throw new Meteor.Error('500', 'Ocurrio un error al actualizar la informacion');\r\n        }\r\n        return responseMessage;\r\n    }\r\n}); ","import {Meteor} from 'meteor/meteor';\r\nimport {PublishEndpoint} from 'meteor/peerlibrary:middleware';\r\nimport { PermissionMiddleware } from '../../middlewares/PermissionsMiddleware';\r\nimport Permissions from '../../startup/server/Permissions';\r\n\r\nconst usersPublication = new PublishEndpoint('user.list', function() {\r\n    return Meteor.users.find({}, {\r\n        sort: {createdAt: -1}\r\n    });\r\n});\r\n\r\nusersPublication.use(new PermissionMiddleware([Permissions.USERS.LIST.VALUE]));","import FileOperations from '../../startup/server/utilities/FileOperations';\r\nimport ProfilesServ from '../Profiles/ProfilesServ';\r\n\r\nconst PATH_USER_FILES = 'users/';\r\n\r\nexport default {\r\n    validateEmail(newEmail, idUser){\r\n        const existEmail = Accounts.findUserByEmail(newEmail);\r\n        if (idUser) {\r\n            const oldUser = Meteor.users.findOne(idUser);\r\n            if (oldUser.emails[0].address !== newEmail && existEmail) {\r\n                throw new Meteor.Error('403', 'El nuevo email ya se encuentra en uso');\r\n            }\r\n        } else if (existEmail) {\r\n            throw new Meteor.Error('403', 'El nuevo email ya se encuetra en uso');\r\n        }\r\n    },\r\n    validateUsername(newUsername, idUser){\r\n        const existUsername = Accounts.findUserByUsername(newUsername);\r\n        if (idUser) {\r\n            const oldUser = Meteor.users.findOne(idUser);\r\n            if (oldUser.username !== newUsername && existUsername) {\r\n                throw new Meteor.Error('403', \"El nuevo nombre de usuario ya se encuentra en uso\");\r\n            }\r\n        } else if (existUsername) {\r\n            throw new Meteor.Error('403', \"El nombre de usuario ya se encuentra en uso\");\r\n        }\r\n    },\r\n    async createUser(user, photoFileUser){\r\n        const idUser = Accounts.createUser({\r\n            username: user.username,\r\n            email: user.emails[0].address,\r\n            profile: user.profile\r\n        });\r\n        let avatarSrc= null;\r\n        if (idUser) {\r\n            ProfilesServ.setUserRoles(idUser, user.profile.profile);\r\n            Accounts.sendEnrollmentEmail(idUser, user.emails[0].address);\r\n        }\r\n        if (photoFileUser) {\r\n            const response = await FileOperations.saveFileFromBase64ToGoogleStorage(photoFileUser, 'avatar',\r\n            PATH_USER_FILES + idUser);\r\n            if (!response.data.success) {\r\n                throw new Meteor.Error('500', 'Error al subir la foto');\r\n            } else {\r\n                avatarSrc = response.data.fileUrl;\r\n            }\r\n        }\r\n        Meteor.users.update(idUser, {\r\n            $set: {\r\n                'profile.path': avatarSrc\r\n            }\r\n        })\r\n    },\r\n    async updateUser(user, photoFileUser){\r\n        const currentUser = Meteor.users.findOne(user._id);\r\n        if (currentUser.emails[0].address !== user.emails[0].address) {\r\n            Accounts.removeEmail(currentUser._id, currentUser.emails[0].address);\r\n            Accounts.addEmail(currentUser._id, user.emails[0].address);\r\n            Accounts.sendVerificationEmail(user._id, user.emails[0].address);\r\n        }\r\n        if (currentUser.username !== user.username) {\r\n            Accounts.setUsername(currentUser._id, user.username);\r\n        }\r\n        Meteor.users.update(user._id, {\r\n            $set: {\r\n                profile: {\r\n                    profile: user.profile.profile,\r\n                    name: user.profile.name,\r\n                    path: currentUser.profile.path\r\n                }\r\n            }\r\n        });\r\n        ProfilesServ.setUserRoles(user._id, user.profile.profile);\r\n        if(photoFileUser) {\r\n            if (currentUser.profile.path) {\r\n                await FileOperations.deleteFileFromGoogleStorageIfExists(currentUser.profile.path\r\n                        .substring(currentUser.profile.path.indexOf(PATH_USER_FILES)));\r\n            }\r\n            const response = await FileOperations.saveFileFromBase64ToGoogleStorage(photoFileUser, 'avatar', PATH_USER_FILES + user._id);\r\n            if (!response.data.success) {\r\n                throw new Meteor.Error('403', 'Error al subir la foto.');\r\n            } else {\r\n                Meteor.users.update(user._id, {\r\n                    $set: {\r\n                        'profile.path': response.data.fileUrl\r\n                    }\r\n                })\r\n            }\r\n        }\r\n    },\r\n    async deleteUser (idUser) {\r\n        Meteor.users.remove(idUser);\r\n        Meteor.roleAssignment.remove({'user._id': idUser});\r\n        await FileOperations.deleteFilesOfFolderFromGoogleStorage(PATH_USER_FILES + idUser);\r\n    }\r\n};","const checkPermission = function (methodArgs, methodOptions) {\r\n    const idUser = this.userId;\r\n    const permissions = methodOptions.permissions;\r\n    let hasPermission = false;\r\n    if (idUser !== null) {\r\n        const profileName = Meteor.user().profile.profile;\r\n        hasPermission = Roles.userIsInRole(idUser, permissions, profileName);\r\n    }\r\n    if (!hasPermission) {\r\n        throw new Meteor.Error('403', 'Acceso denegado', \r\n                    'No tienes permiso para ejecutar esta accion');\r\n    }\r\n    return methodArgs;\r\n};\r\n\r\nconst isUserLogged = function(methodArgs, methodOptions) {\r\n    if (!this.userId) {\r\n        throw new Meteor.Error('403', 'Acceso denegado', \r\n                    'No tienes permiso para ejecutar esta accion');\r\n    }\r\n    return methodArgs;\r\n}\r\n\r\nexport default { checkPermission, isUserLogged };","export class PermissionMiddleware extends PublishMiddleware {\r\n    constructor (permissions) {\r\n        super();\r\n        this._permissions = permissions;\r\n    }\r\n    \r\n    added (publish, collection, id, fields) {\r\n        if (publish.userId) {\r\n            return super.added(...arguments);\r\n        }\r\n        return publish.ready();\r\n    }\r\n    \r\n    change (publish, collection, id, fields) {\r\n        if (this.checkPermission(publish.userId)) {\r\n            return super.changed(...arguments);\r\n        }\r\n        return publish.ready();\r\n    }\r\n    \r\n    removed (publish, collection, id) {\r\n        if (this.checkPermission(publish.userId)) {\r\n            return super.removed(...arguments);\r\n        }\r\n        return publish.ready();\r\n    }\r\n\r\n    onReady (publish) {\r\n        if (publish.userId) {\r\n            return super.onReady(...arguments);\r\n        }\r\n    }\r\n\r\n    onStop (publish) {\r\n        if (publish.userId) {\r\n            return super.onStop(...arguments);\r\n        }\r\n    }\r\n\r\n    onError (publish) {\r\n        if (publish.userId) {\r\n            return super.onError(...arguments);\r\n        }\r\n    }\r\n\r\n    checkPermission (idUser) {\r\n        const profileName = Roles.getScopesForUser(idUser)[0];\r\n        return Roles.userIsInRole(idUser, this._permissions, profileName);\r\n    }\r\n};","import \"/imports/startup/server\";\r\nimport \"/imports/startup/both\";"]}}]