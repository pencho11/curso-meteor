[{"type":"js","data":"/* Imports for global scope */\n\nMongoInternals = Package.mongo.MongoInternals;\nMongo = Package.mongo.Mongo;\nTracker = Package.tracker.Tracker;\nDeps = Package.tracker.Deps;\nECMAScript = Package.ecmascript.ECMAScript;\nValidatedMethod = Package['mdg:validated-method'].ValidatedMethod;\ncheck = Package.check.check;\nMatch = Package.check.Match;\nAccounts = Package['accounts-base'].Accounts;\nPublishEndpoint = Package['peerlibrary:middleware'].PublishEndpoint;\nPublishMiddleware = Package['peerlibrary:middleware'].PublishMiddleware;\nRoles = Package['alanning:roles'].Roles;\nMeteor = Package.meteor.Meteor;\nglobal = Package.meteor.global;\nmeteorEnv = Package.meteor.meteorEnv;\nWebApp = Package.webapp.WebApp;\nWebAppInternals = Package.webapp.WebAppInternals;\nmain = Package.webapp.main;\nDDP = Package['ddp-client'].DDP;\nDDPServer = Package['ddp-server'].DDPServer;\nLaunchScreen = Package['launch-screen'].LaunchScreen;\nmeteorInstall = Package.modules.meteorInstall;\nPromise = Package.promise.Promise;\nAutoupdate = Package.autoupdate.Autoupdate;\n\n","servePath":"/global-imports.js"},{"type":"js","data":"var require = meteorInstall({\"imports\":{\"startup\":{\"server\":{\"utilities\":{\"ResponseMessage.js\":function module(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                             //\n// imports/startup/server/utilities/ResponseMessage.js                                                         //\n//                                                                                                             //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                               //\nmodule.export({\n  ResponseMessage: () => ResponseMessage\n});\n\nclass ResponseMessage {\n  constructor() {\n    this.message = null;\n    this.description = null;\n    this.data = null;\n  }\n\n  create(message) {\n    let description = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    let data = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n    this.message = message;\n    this.description = description;\n    this.data = data;\n  }\n\n}\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"Permissions.js\":function module(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                             //\n// imports/startup/server/Permissions.js                                                                       //\n//                                                                                                             //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                               //\nmodule.export({\n  permissionsArray: () => permissionsArray\n});\nconst Permissions = {\n  USERS: {\n    LIST: {\n      VALUE: 'users-view',\n      TEXT: 'Listar usuarios'\n    },\n    CREATE: {\n      VALUE: 'users-create',\n      TEXT: 'Crear usuario'\n    },\n    Update: {\n      VALUE: 'users-edit',\n      TEXT: 'Actualizar usuario'\n    },\n    DELETE: {\n      VALUE: 'users-delete',\n      TEXT: 'Eliminar usuario'\n    }\n  }\n};\nconst permissionsArray = Object.keys(Permissions).reduce((accumulator, systemModuleName) => {\n  const systemModuleObject = Permissions[systemModuleName];\n  const modulePermissions = Object.keys(systemModuleObject).map(permission => systemModuleObject[permission]);\n  return accumulator.concat(modulePermissions);\n}, []);\n\nif (Meteor.isDevelopment) {\n  if (Meteor.settings.private && Meteor.settings.private.REFRESH_PERMISSIONS) {\n    console.log('uplading permissions. . .');\n    const currentRoles = Roles.getAllRoles().fetch();\n\n    for (let permission of permissionsArray) {\n      if (!currentRoles.find(_role => _role._id === permission.VALUE)) {\n        Roles.createRole(permission.VALUE);\n      }\n\n      Meteor.roles.update(permission.VALUE, {\n        $set: {\n          publicName: permission.TEXT\n        }\n      });\n    }\n  }\n}\n\nmodule.exportDefault(Permissions);\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"index.js\":function module(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                             //\n// imports/startup/server/index.js                                                                             //\n//                                                                                                             //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                               //\nmodule.link(\"./Permissions\");\nmodule.link(\"../../api/Users/User\");\nmodule.link(\"../../api/Users/UsersCtrl\");\nmodule.link(\"../../api/Users/UsersPubs\");\nmodule.link(\"../../api/Profiles/ProfileSeeder\");\nmodule.link(\"../../api/Profiles/ProfilesCtrl\");\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}}},\"api\":{\"Profiles\":{\"Profile.js\":function module(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                             //\n// imports/api/Profiles/Profile.js                                                                             //\n//                                                                                                             //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                               //\nmodule.export({\n  Profile: () => Profile\n});\nlet Mongo;\nmodule.link(\"meteor/mongo\", {\n  Mongo(v) {\n    Mongo = v;\n  }\n\n}, 0);\nconst Profile = new Mongo.Collection('profiles');\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"ProfileSeeder.js\":function module(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                             //\n// imports/api/Profiles/ProfileSeeder.js                                                                       //\n//                                                                                                             //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                               //\nmodule.export({\n  StaticProfiles: () => StaticProfiles\n});\nlet Permissions, permissionsArray;\nmodule.link(\"../../startup/server/Permissions\", {\n  default(v) {\n    Permissions = v;\n  },\n\n  permissionsArray(v) {\n    permissionsArray = v;\n  }\n\n}, 0);\nlet Profile;\nmodule.link(\"./Profile\", {\n  Profile(v) {\n    Profile = v;\n  }\n\n}, 1);\nProfile.rawCollection().createIndex({\n  'name': 1\n}, {\n  unique: true\n});\nconst StaticProfiles = {\n  admin: {\n    name: 'admin',\n    description: 'Administrador',\n    permissions: permissionsArray.map(p => p.VALUE)\n  }\n};\n\nif (Meteor.isDevelopment) {\n  if (Meteor.settings.private && Meteor.settings.private.REFRESH_STATIC_PROFILES) {\n    console.log('updating static profiles. . .');\n    Object.keys(StaticProfiles).forEach(staticProfileName => {\n      Profile.upsert({\n        name: StaticProfiles[staticProfileName].name\n      }, {\n        $set: {\n          description: StaticProfiles[staticProfileName].description,\n          permissions: StaticProfiles[staticProfileName].permissions\n        }\n      });\n      Meteor.users.find({\n        'profile.profile': StaticProfiles[staticProfileName].name\n      }).fetch().forEach(user => {\n        Meteor.roleAssignment.remove({\n          'user._id': user._id\n        });\n\n        if (StaticProfiles[staticProfileName].permissions.length > 0) {\n          Roles.setUserRoles(user._id, StaticProfiles[staticProfileName].permissions, StaticProfiles[staticProfileName].name);\n        }\n      });\n    });\n  }\n}\n\n;\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"ProfilesCtrl.js\":function module(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                             //\n// imports/api/Profiles/ProfilesCtrl.js                                                                        //\n//                                                                                                             //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                               //\nlet check, Match;\nmodule.link(\"meteor/check\", {\n  check(v) {\n    check = v;\n  },\n\n  Match(v) {\n    Match = v;\n  }\n\n}, 0);\nlet ResponseMessage;\nmodule.link(\"../../startup/server/utilities/ResponseMessage\", {\n  ResponseMessage(v) {\n    ResponseMessage = v;\n  }\n\n}, 1);\nlet Profile;\nmodule.link(\"./Profile\", {\n  Profile(v) {\n    Profile = v;\n  }\n\n}, 2);\nlet ProfilesServ;\nmodule.link(\"./ProfilesServ\", {\n  default(v) {\n    ProfilesServ = v;\n  }\n\n}, 3);\nnew ValidatedMethod({\n  name: 'profile.save',\n\n  validate(profile) {\n    try {\n      check(profile, {\n        _id: Match.OneOf(String, null),\n        name: String,\n        description: String,\n        permissions: [String]\n      });\n    } catch (error) {\n      console.error('profile.save', error);\n      throw new Meteor.Error('403', 'La informacion no es valida');\n    }\n\n    ProfilesServ.validateName(profile.name, profile._id);\n  },\n\n  run(profile) {\n    const responseMessage = new ResponseMessage();\n\n    if (profile._id !== null) {\n      try {\n        // UPDATE PROFILE\n        const oldProfile = Profile.findOne(profile._id);\n        const users = ProfilesServ.getUsersByProfile(profile._id);\n        Profile.update(profile._id, {\n          $set: {\n            name: profile.name,\n            description: profile.description,\n            permissions: profile.permissions\n          }\n        });\n\n        if (oldProfile.name !== profile.name) {\n          Meteor.users.update({\n            'profile.profile': oldProfile.name\n          }, {\n            $set: {\n              'profile.profile': profile.name\n            }\n          }, {\n            multi: true\n          });\n        }\n\n        ProfilesServ.updateProfileUsers(users, profile);\n        responseMessage.create('Se actualizo el perfil exitosamente');\n      } catch (error) {\n        console.error('profile.save', error);\n        throw new Meteor.Error('500', 'Ocurrio un error al actualizar el perfil');\n      }\n    } else {\n      try {\n        // CREATE PROFILE\n        Profile.insert({\n          name: profile.name,\n          description: profile.description,\n          permissions: profile.permissions\n        });\n        responseMessage.create('Se creo el perfil exitosamente');\n      } catch (error) {\n        console.error('profile.save', error);\n        throw new Meteor.Error('500', 'Ocurrio un error al crear el nuevo perfil');\n      }\n    }\n\n    return responseMessage;\n  }\n\n});\nnew ValidatedMethod({\n  name: 'profile.delete',\n\n  validate(_ref) {\n    let {\n      idProfile\n    } = _ref;\n\n    try {\n      check(idProfile, String);\n    } catch (error) {\n      console.error('profile.delete', error);\n      throw new Meteor.Error('403', 'La informacion introducida no es valida');\n    }\n  },\n\n  run(_ref2) {\n    let {\n      idProfile\n    } = _ref2;\n    const responseMessage = new ResponseMessage();\n\n    try {\n      Profile.remove(idProfile);\n      responseMessage.create('Perfil eliminado exitosamente');\n    } catch (error) {\n      console.error('profile.delete', error);\n      throw new Meteor.Error('403', 'La informacion introducida no es valida');\n    }\n\n    return responseMessage;\n  }\n\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"ProfilesServ.js\":function module(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                             //\n// imports/api/Profiles/ProfilesServ.js                                                                        //\n//                                                                                                             //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                               //\nlet Profile;\nmodule.link(\"./Profile\", {\n  Profile(v) {\n    Profile = v;\n  }\n\n}, 0);\nmodule.exportDefault({\n  validateName(name, idProfile) {\n    const existName = Profile.findOne({\n      name\n    });\n\n    if (idProfile) {\n      const oldProfile = Profile.findOne(idProfile);\n\n      if (oldProfile.name !== name && existName) {\n        throw new Meteor.Error('403', \"El nuevo nombre de perfil ya se encuentra en uso\");\n      }\n    } else if (existName) {\n      throw new Meteor.Error('403', \"El nombre de perfil ya se encuentra en uso\");\n    }\n  },\n\n  getUsersByProfile(idProfile) {\n    const profile = Profile.findOne(idProfile);\n    return Meteor.users.find({\n      'profile.profile': profile.name\n    }).fetch();\n  },\n\n  setUserRoles(idUser, profileName) {\n    const permissions = Profile.findOne({\n      name: profileName\n    }).permissions;\n    Meteor.roleAssignment.remove({\n      'user._id': idUser\n    });\n    Roles.setUserRoles(idUser, permissions, profileName);\n  },\n\n  updateProfileUsers(users, profile) {\n    users.forEach(user => {\n      this.setUserRoles(user._id, profile.name);\n    });\n  }\n\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"Users\":{\"User.js\":function module(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                             //\n// imports/api/Users/User.js                                                                                   //\n//                                                                                                             //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                               //\nMeteor.users.rawCollection().createIndex({\n  'profile.profile': 1\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"UsersCtrl.js\":function module(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                             //\n// imports/api/Users/UsersCtrl.js                                                                              //\n//                                                                                                             //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                               //\nlet ValidatedMethod;\nmodule.link(\"meteor/mdg:validated-method\", {\n  ValidatedMethod(v) {\n    ValidatedMethod = v;\n  }\n\n}, 0);\nlet check, Match;\nmodule.link(\"meteor/check\", {\n  check(v) {\n    check = v;\n  },\n\n  Match(v) {\n    Match = v;\n  }\n\n}, 1);\nlet ResponseMessage;\nmodule.link(\"../../startup/server/utilities/ResponseMessage\", {\n  ResponseMessage(v) {\n    ResponseMessage = v;\n  }\n\n}, 2);\nlet UsersServ;\nmodule.link(\"./UsersServ\", {\n  default(v) {\n    UsersServ = v;\n  }\n\n}, 3);\nnew ValidatedMethod({\n  name: 'user.save',\n\n  validate(user) {\n    try {\n      check(user, {\n        _id: Match.OneOf(String, null),\n        username: String,\n        emails: [{\n          address: String,\n          verified: Boolean\n        }],\n        profile: {\n          profile: String,\n          name: String,\n          path: Match.OneOf(String, null)\n        }\n      });\n    } catch (error) {\n      console.log('save.user', error);\n      throw new Meteor.Error('403', 'La informacion introducida no es valida');\n    }\n\n    UsersServ.validateEmail(user.emails[0].address, user._id);\n    UsersServ.validateUsername(user.username, user._id);\n  },\n\n  run(user) {\n    const responseMessage = new ResponseMessage();\n\n    if (user._id !== null) {\n      try {\n        // UPDATE USER \n        UsersServ.updateUser(user);\n        responseMessage.create('Se actualizo el usuario exitosamente');\n      } catch (error) {\n        console.error('user.save', error);\n        throw new Meteor.Error('500', 'Ocurrio un error al actualizar el usuario');\n      }\n    } else {\n      try {\n        // CREATE USER\n        UsersServ.createUser(user);\n        responseMessage.create('Se ha creado usuario exitosamente');\n      } catch (error) {\n        console.error('user.save: ', error);\n        throw new Meteor.Error('500', 'Ocurrió un error al crear un usuario');\n      }\n    }\n\n    return responseMessage;\n  }\n\n});\nnew ValidatedMethod({\n  name: 'user.delete',\n\n  validate(_ref) {\n    let {\n      idUser\n    } = _ref;\n\n    try {\n      check(idUser, String);\n    } catch (error) {\n      console.error('user.delete', error);\n      throw new Meteor.Error('403', 'La informacion introducida no es valida');\n    }\n  },\n\n  run(_ref2) {\n    let {\n      idUser\n    } = _ref2;\n    const responseMessage = new ResponseMessage();\n\n    try {\n      Meteor.users.remove(idUser);\n      responseMessage.create('Se ha eliminado exitosamente al usuario');\n    } catch (error) {\n      console.error('user.delete', error);\n      throw new Meteor.Error('500', 'Ocurrio un error al eliminar un usuario');\n    }\n\n    return responseMessage;\n  }\n\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"UsersPubs.js\":function module(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                             //\n// imports/api/Users/UsersPubs.js                                                                              //\n//                                                                                                             //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                               //\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet PublishEndpoint;\nmodule.link(\"meteor/peerlibrary:middleware\", {\n  PublishEndpoint(v) {\n    PublishEndpoint = v;\n  }\n\n}, 1);\nnew PublishEndpoint('user.list', function () {\n  return Meteor.users.find({}, {\n    sort: {\n      createdAt: -1\n    },\n    limit: 1\n  });\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"UsersServ.js\":function module(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                             //\n// imports/api/Users/UsersServ.js                                                                              //\n//                                                                                                             //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                               //\nmodule.exportDefault({\n  validateEmail(newEmail, idUser) {\n    const existEmail = Accounts.findUserByEmail(newEmail);\n\n    if (idUser) {\n      const oldUser = Meteor.users.findOne(idUser);\n\n      if (oldUser.emails[0].address !== newEmail && existEmail) {\n        throw new Meteor.Error('403', 'El nuevo email ya se encuentra en uso');\n      }\n    } else if (existEmail) {\n      throw new Meteor.Error('403', 'El nuevo email ya se encuetra en uso');\n    }\n  },\n\n  validateUsername(newUsername, idUser) {\n    const existUsername = Accounts.findUserByUsername(newUsername);\n\n    if (idUser) {\n      const oldUser = Meteor.users.findOne(idUser);\n\n      if (oldUser.username !== newUsername && existUsername) {\n        throw new Meteor.Error('403', \"El nuevo nombre de usuario ya se encuentra en uso\");\n      }\n    } else if (existUsername) {\n      throw new Meteor.Error('403', \"El nombre de usuario ya se encuentra en uso\");\n    }\n  },\n\n  createUser(user) {\n    Accounts.createUser({\n      username: user.username,\n      email: user.emails[0].address,\n      profile: user.profile\n    });\n  },\n\n  updateUser(user) {\n    const currentUser = Meteor.users.findOne(user._id);\n\n    if (currentUser.emails[0].address !== user.emails[0].address) {\n      Accounts.removeEmail(currentUser._id, currentUser.emails[0].address);\n      Accounts.addEmail(currentUser._id, user.emails[0].address);\n    }\n\n    if (currentUser.username !== user.username) {\n      Accounts.setUsername(currentUser._id, user.username);\n    }\n\n    Meteor.users.update(user._id, {\n      $set: {\n        profile: {\n          profile: user.profile.profile,\n          name: user.profile.name,\n          path: user.profile.path\n        }\n      }\n    });\n  }\n\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}}}},\"server\":{\"main.js\":function module(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                             //\n// server/main.js                                                                                              //\n//                                                                                                             //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                               //\nmodule.link(\"/imports/startup/server\");\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}}},{\n  \"extensions\": [\n    \".js\",\n    \".json\",\n    \".mjs\",\n    \".ts\",\n    \".vue\"\n  ]\n});\n\nvar exports = require(\"/server/main.js\");","hash":"0c98252f4f8803d3152850110daf6771de39cdcb","servePath":"/app.js","sourceMap":{"version":3,"sources":["imports/startup/server/utilities/ResponseMessage.js","imports/startup/server/Permissions.js","imports/startup/server/index.js","imports/api/Profiles/Profile.js","imports/api/Profiles/ProfileSeeder.js","imports/api/Profiles/ProfilesCtrl.js","imports/api/Profiles/ProfilesServ.js","imports/api/Users/User.js","imports/api/Users/UsersCtrl.js","imports/api/Users/UsersPubs.js","imports/api/Users/UsersServ.js","server/main.js"],"names":["module","export","ResponseMessage","constructor","message","description","data","create","permissionsArray","Permissions","USERS","LIST","VALUE","TEXT","CREATE","Update","DELETE","Object","keys","reduce","accumulator","systemModuleName","systemModuleObject","modulePermissions","map","permission","concat","Meteor","isDevelopment","settings","private","REFRESH_PERMISSIONS","console","log","currentRoles","Roles","getAllRoles","fetch","find","_role","_id","createRole","roles","update","$set","publicName","exportDefault","link","Profile","Mongo","v","Collection","StaticProfiles","default","rawCollection","createIndex","unique","admin","name","permissions","p","REFRESH_STATIC_PROFILES","forEach","staticProfileName","upsert","users","user","roleAssignment","remove","length","setUserRoles","check","Match","ProfilesServ","ValidatedMethod","validate","profile","OneOf","String","error","Error","validateName","run","responseMessage","oldProfile","findOne","getUsersByProfile","multi","updateProfileUsers","insert","idProfile","existName","idUser","profileName","UsersServ","username","emails","address","verified","Boolean","path","validateEmail","validateUsername","updateUser","createUser","PublishEndpoint","sort","createdAt","limit","newEmail","existEmail","Accounts","findUserByEmail","oldUser","newUsername","existUsername","findUserByUsername","email","currentUser","removeEmail","addEmail","setUsername"],"mappings":"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","file":"/app.js","sourcesContent":["export class ResponseMessage {\r\n    constructor(){\r\n        this.message = null;\r\n        this.description = null;\r\n        this.data = null;\r\n    }\r\n    \r\n    create(message, description = null, data = null){\r\n        this.message = message;\r\n        this.description = description;\r\n        this.data = data;\r\n    }\r\n}","const Permissions = {\r\n    USERS: {\r\n        LIST: {VALUE: 'users-view', TEXT: 'Listar usuarios'},\r\n        CREATE: {VALUE: 'users-create', TEXT: 'Crear usuario'},\r\n        Update: {VALUE: 'users-edit', TEXT: 'Actualizar usuario'},\r\n        DELETE: {VALUE: 'users-delete', TEXT: 'Eliminar usuario'}\r\n    }\r\n};\r\n\r\nexport const permissionsArray = Object.keys(Permissions).reduce((accumulator, systemModuleName) => {\r\n    const systemModuleObject = Permissions[systemModuleName];\r\n    const modulePermissions = Object.keys(systemModuleObject).map(permission => systemModuleObject[permission]);\r\n    return accumulator.concat(modulePermissions);\r\n}, []);\r\n\r\nif (Meteor.isDevelopment) {\r\n    if (Meteor.settings.private && Meteor.settings.private.REFRESH_PERMISSIONS) {\r\n        console.log('uplading permissions. . .');\r\n        const currentRoles = Roles.getAllRoles().fetch();\r\n        for (let permission of permissionsArray) {\r\n            if (!currentRoles.find(_role => _role._id === permission.VALUE)) {\r\n                Roles.createRole(permission.VALUE);\r\n            }\r\n            Meteor.roles.update(permission.VALUE, {\r\n                $set: {\r\n                    publicName: permission.TEXT\r\n                }\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\nexport default Permissions;","import './Permissions';\r\n\r\nimport '../../api/Users/User';\r\nimport '../../api/Users/UsersCtrl';\r\nimport '../../api/Users/UsersPubs'; \r\n\r\nimport '../../api/Profiles/ProfileSeeder';\r\nimport '../../api/Profiles/ProfilesCtrl';","import {Mongo} from 'meteor/mongo';\r\n\r\nexport const Profile = new Mongo.Collection('profiles');","import Permissions, {permissionsArray} from \"../../startup/server/Permissions\"\r\nimport { Profile } from \"./Profile\";\r\n\r\nProfile.rawCollection().createIndex({'name': 1}, {unique: true});\r\n\r\nexport const StaticProfiles = {\r\n    admin: {\r\n        name: 'admin',\r\n        description: 'Administrador',\r\n        permissions: permissionsArray.map(p=>p.VALUE)\r\n    }\r\n};\r\n\r\nif (Meteor.isDevelopment) {\r\n    if (Meteor.settings.private && Meteor.settings.private.REFRESH_STATIC_PROFILES) {\r\n        console.log('updating static profiles. . .');\r\n        Object.keys(StaticProfiles).forEach(staticProfileName => {\r\n            Profile.upsert({name: StaticProfiles[staticProfileName].name}, {\r\n                $set: {\r\n                    description: StaticProfiles[staticProfileName].description,\r\n                    permissions: StaticProfiles[staticProfileName].permissions,\r\n                }\r\n            });\r\n            Meteor.users.find({ 'profile.profile': StaticProfiles[staticProfileName].name}).fetch().forEach(user => {\r\n                Meteor.roleAssignment.remove({'user._id': user._id});\r\n                if (StaticProfiles[staticProfileName].permissions.length > 0) {\r\n                    Roles.setUserRoles(user._id, StaticProfiles[staticProfileName].permissions, StaticProfiles[staticProfileName].name);\r\n                }\r\n            })\r\n        });\r\n    }\r\n};","import {check, Match} from 'meteor/check';\r\nimport { ResponseMessage } from '../../startup/server/utilities/ResponseMessage';\r\nimport {Profile} from './Profile';\r\nimport ProfilesServ from './ProfilesServ';\r\n\r\nnew ValidatedMethod({\r\n    name: 'profile.save',\r\n    validate(profile) {\r\n        try {\r\n            check(profile, {\r\n                _id: Match.OneOf(String, null),\r\n                name: String,\r\n                description: String,\r\n                permissions: [String]\r\n            });\r\n        } catch (error) {\r\n            console.error('profile.save', error);\r\n            throw new Meteor.Error('403', 'La informacion no es valida');\r\n        }\r\n        ProfilesServ.validateName(profile.name, profile._id);\r\n    },\r\n    run(profile) {\r\n        const responseMessage = new ResponseMessage();\r\n        if (profile._id !== null) {\r\n        try {\r\n            // UPDATE PROFILE\r\n            const oldProfile = Profile.findOne(profile._id);\r\n            const users = ProfilesServ.getUsersByProfile(profile._id);\r\n            Profile.update(profile._id, {\r\n                $set: {\r\n                    name: profile.name,\r\n                    description: profile.description,\r\n                    permissions: profile.permissions\r\n                }\r\n            });\r\n            if (oldProfile.name !== profile.name) {\r\n                Meteor.users.update({'profile.profile': oldProfile.name}, {\r\n                    $set: {\r\n                        'profile.profile': profile.name\r\n                    }\r\n                },{ multi:true });\r\n            }\r\n            ProfilesServ.updateProfileUsers(users, profile);\r\n            responseMessage.create('Se actualizo el perfil exitosamente');\r\n        } catch (error) {\r\n            console.error('profile.save', error);\r\n            throw new Meteor.Error('500', 'Ocurrio un error al actualizar el perfil');\r\n        }         \r\n        } else {\r\n            try {\r\n                // CREATE PROFILE\r\n                Profile.insert({\r\n                    name: profile.name,\r\n                    description: profile.description,\r\n                    permissions: profile.permissions\r\n                });\r\n                responseMessage.create('Se creo el perfil exitosamente');\r\n            } catch (error) {\r\n                console.error('profile.save', error);\r\n                throw new Meteor.Error('500', 'Ocurrio un error al crear el nuevo perfil');\r\n            }\r\n        }\r\n        return responseMessage;\r\n    }\r\n});\r\n\r\nnew ValidatedMethod( {\r\n    name: 'profile.delete',\r\n    validate({ idProfile }) {\r\n        try {\r\n            check(idProfile, String);\r\n        } catch (error) {\r\n            console.error('profile.delete', error);\r\n            throw new Meteor.Error('403', 'La informacion introducida no es valida');\r\n        }\r\n    },\r\n    run({ idProfile }) {\r\n        const responseMessage = new ResponseMessage();\r\n        try {\r\n            Profile.remove(idProfile);\r\n            responseMessage.create('Perfil eliminado exitosamente');\r\n        } catch (error) {\r\n            console.error('profile.delete', error);\r\n            throw new Meteor.Error('403', 'La informacion introducida no es valida');\r\n        }\r\n        return responseMessage;\r\n    }\r\n});","import { Profile } from \"./Profile\"\r\n\r\nexport default {\r\n    validateName(name, idProfile){\r\n        const existName = Profile.findOne({name});\r\n        if (idProfile) {\r\n            const oldProfile = Profile.findOne(idProfile);\r\n            if (oldProfile.name !== name && existName) {\r\n                throw new Meteor.Error('403', \"El nuevo nombre de perfil ya se encuentra en uso\");\r\n            }\r\n        } else if (existName) {\r\n            throw new Meteor.Error('403', \"El nombre de perfil ya se encuentra en uso\");\r\n        }\r\n    },\r\n    getUsersByProfile(idProfile) {\r\n        const profile = Profile.findOne(idProfile);\r\n        return Meteor.users.find({'profile.profile': profile.name}).fetch();\r\n    },\r\n    setUserRoles(idUser, profileName) {\r\n        const permissions = Profile.findOne({name: profileName}).permissions;\r\n        Meteor.roleAssignment.remove({'user._id': idUser});\r\n        Roles.setUserRoles(idUser, permissions, profileName);\r\n    },\r\n    updateProfileUsers(users, profile) {\r\n        users.forEach(user => {\r\n            this.setUserRoles(user._id, profile.name);\r\n        });\r\n    }\r\n};","Meteor.users.rawCollection().createIndex({ 'profile.profile': 1 })","import {ValidatedMethod} from 'meteor/mdg:validated-method';\r\nimport {check, Match} from 'meteor/check';\r\nimport { ResponseMessage } from '../../startup/server/utilities/ResponseMessage';\r\nimport UsersServ from './UsersServ';\r\n\r\nnew ValidatedMethod ({\r\n    name: 'user.save',\r\n    validate(user){\r\n        try {\r\n            check(user, {\r\n                _id: Match.OneOf(String, null),\r\n                username: String,\r\n                emails: [{address: String, verified: Boolean}],\r\n                profile: {\r\n                    profile: String,\r\n                    name: String,\r\n                    path: Match.OneOf(String, null)\r\n                }\r\n            })\r\n        } catch (error) {\r\n            console.log('save.user', error);\r\n            throw new Meteor.Error('403', 'La informacion introducida no es valida');\r\n        }\r\n        UsersServ.validateEmail(user.emails[0].address, user._id);\r\n        UsersServ.validateUsername(user.username, user._id);\r\n    },\r\n    run(user){\r\n        const responseMessage = new ResponseMessage();\r\n        if (user._id !== null) {\r\n            try {\r\n                // UPDATE USER \r\n                UsersServ.updateUser(user);\r\n                responseMessage.create('Se actualizo el usuario exitosamente');\r\n            } catch (error) {\r\n                console.error('user.save', error);\r\n                throw new Meteor.Error('500', 'Ocurrio un error al actualizar el usuario');\r\n            }\r\n        } else {\r\n            try {\r\n                // CREATE USER\r\n                UsersServ.createUser(user);\r\n                responseMessage.create('Se ha creado usuario exitosamente');\r\n            } catch (error) {\r\n                console.error('user.save: ', error);\r\n                throw new Meteor.Error('500', 'Ocurrió un error al crear un usuario');\r\n            }\r\n        }\r\n        return responseMessage;\r\n    }\r\n});\r\n\r\nnew ValidatedMethod({\r\n    name: 'user.delete',\r\n    validate({idUser}){\r\n        try {\r\n            check(idUser, String);\r\n        } catch (error) {\r\n            console.error('user.delete', error);\r\n            throw new Meteor.Error('403', 'La informacion introducida no es valida');\r\n        }\r\n    },\r\n    run({idUser}){\r\n        const responseMessage = new ResponseMessage;\r\n        try {\r\n            Meteor.users.remove(idUser);\r\n            responseMessage.create('Se ha eliminado exitosamente al usuario');\r\n        } catch (error) {\r\n            console.error('user.delete', error);\r\n            throw new Meteor.Error('500', 'Ocurrio un error al eliminar un usuario');\r\n        }\r\n        return responseMessage;\r\n    }\r\n});","import {Meteor} from 'meteor/meteor';\r\nimport {PublishEndpoint} from 'meteor/peerlibrary:middleware';\r\n\r\nnew PublishEndpoint('user.list', function() {\r\n    return Meteor.users.find({}, {\r\n        sort: {createdAt: -1},\r\n        limit: 1\r\n    });\r\n});","export default {\r\n    validateEmail(newEmail, idUser){\r\n        const existEmail = Accounts.findUserByEmail(newEmail);\r\n        if (idUser) {\r\n            const oldUser = Meteor.users.findOne(idUser);\r\n            if (oldUser.emails[0].address !== newEmail && existEmail) {\r\n                throw new Meteor.Error('403', 'El nuevo email ya se encuentra en uso');\r\n            }\r\n        } else if (existEmail) {\r\n            throw new Meteor.Error('403', 'El nuevo email ya se encuetra en uso');\r\n        }\r\n    },\r\n    validateUsername(newUsername, idUser){\r\n        const existUsername = Accounts.findUserByUsername(newUsername);\r\n        if (idUser) {\r\n            const oldUser = Meteor.users.findOne(idUser);\r\n            if (oldUser.username !== newUsername && existUsername) {\r\n                throw new Meteor.Error('403', \"El nuevo nombre de usuario ya se encuentra en uso\");\r\n            }\r\n        } else if (existUsername) {\r\n            throw new Meteor.Error('403', \"El nombre de usuario ya se encuentra en uso\");\r\n        }\r\n    },\r\n    createUser(user){\r\n        Accounts.createUser({\r\n            username: user.username,\r\n            email: user.emails[0].address,\r\n            profile: user.profile\r\n        });\r\n    },\r\n    updateUser(user){\r\n        const currentUser = Meteor.users.findOne(user._id);\r\n        if (currentUser.emails[0].address !== user.emails[0].address) {\r\n            Accounts.removeEmail(currentUser._id, currentUser.emails[0].address);\r\n            Accounts.addEmail(currentUser._id, user.emails[0].address);\r\n        }\r\n        if (currentUser.username !== user.username) {\r\n            Accounts.setUsername(currentUser._id, user.username);\r\n        }\r\n        Meteor.users.update(user._id, {\r\n            $set: {\r\n                profile: {\r\n                    profile: user.profile.profile,\r\n                    name: user.profile.name,\r\n                    path: user.profile.path\r\n                }\r\n            }\r\n        });\r\n    }\r\n}","import \"/imports/startup/server\";"]}}]