[{"type":"js","data":"/* Imports for global scope */\n\nMongoInternals = Package.mongo.MongoInternals;\nMongo = Package.mongo.Mongo;\nTracker = Package.tracker.Tracker;\nDeps = Package.tracker.Deps;\nECMAScript = Package.ecmascript.ECMAScript;\nValidatedMethod = Package['mdg:validated-method'].ValidatedMethod;\ncheck = Package.check.check;\nMatch = Package.check.Match;\nAccounts = Package['accounts-base'].Accounts;\nPublishEndpoint = Package['peerlibrary:middleware'].PublishEndpoint;\nPublishMiddleware = Package['peerlibrary:middleware'].PublishMiddleware;\nRoles = Package['alanning:roles'].Roles;\nMeteor = Package.meteor.Meteor;\nglobal = Package.meteor.global;\nmeteorEnv = Package.meteor.meteorEnv;\nWebApp = Package.webapp.WebApp;\nWebAppInternals = Package.webapp.WebAppInternals;\nmain = Package.webapp.main;\nDDP = Package['ddp-client'].DDP;\nDDPServer = Package['ddp-server'].DDPServer;\nLaunchScreen = Package['launch-screen'].LaunchScreen;\nmeteorInstall = Package.modules.meteorInstall;\nPromise = Package.promise.Promise;\nAutoupdate = Package.autoupdate.Autoupdate;\n\n","servePath":"/global-imports.js"},{"type":"js","data":"var require = meteorInstall({\"imports\":{\"startup\":{\"server\":{\"utilities\":{\"ResponseMessage.js\":function module(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                             //\n// imports/startup/server/utilities/ResponseMessage.js                                                         //\n//                                                                                                             //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                               //\nmodule.export({\n  ResponseMessage: () => ResponseMessage\n});\n\nclass ResponseMessage {\n  constructor() {\n    this.message = null;\n    this.description = null;\n    this.data = null;\n  }\n\n  create(message) {\n    let description = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    let data = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n    this.message = message;\n    this.description = description;\n    this.data = data;\n  }\n\n}\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"Permissions.js\":function module(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                             //\n// imports/startup/server/Permissions.js                                                                       //\n//                                                                                                             //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                               //\nmodule.export({\n  permissionsArray: () => permissionsArray\n});\nconst Permissions = {\n  USERS: {\n    LIST: {\n      VALUE: 'users-view',\n      TEXT: 'Listar usuarios'\n    },\n    CREATE: {\n      VALUE: 'users-create',\n      TEXT: 'Crear usuario'\n    },\n    Update: {\n      VALUE: 'users-edit',\n      TEXT: 'Actualizar usuario'\n    },\n    DELETE: {\n      VALUE: 'users-delete',\n      TEXT: 'Eliminar usuario'\n    }\n  }\n};\nconst permissionsArray = Object.keys(Permissions).reduce((accumulator, systemModuleName) => {\n  const systemModuleObject = Permissions[systemModuleName];\n  const modulePermissions = Object.keys(systemModuleObject).map(permission => systemModuleObject[permission]);\n  return accumulator.concat(modulePermissions);\n}, []);\n\nif (Meteor.isDevelopment) {\n  if (Meteor.settings.private && Meteor.settings.private.REFRESH_PERMISSIONS) {\n    console.log('uplading permissions. . .');\n    const currentRoles = Roles.getAllRoles().fetch();\n\n    for (let permission of permissionsArray) {\n      if (!currentRoles.find(_role => _role._id === permission.VALUE)) {\n        Roles.createRole(permission.VALUE);\n      }\n\n      Meteor.roles.update(permission.VALUE, {\n        $set: {\n          publicName: permission.TEXT\n        }\n      });\n    }\n  }\n}\n\nmodule.exportDefault(Permissions);\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"index.js\":function module(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                             //\n// imports/startup/server/index.js                                                                             //\n//                                                                                                             //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                               //\nmodule.link(\"./Permissions\");\nmodule.link(\"../../api/Users/UsersCtrl\");\nmodule.link(\"../../api/Users/UsersPubs\");\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}}},\"api\":{\"Users\":{\"UsersCtrl.js\":function module(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                             //\n// imports/api/Users/UsersCtrl.js                                                                              //\n//                                                                                                             //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                               //\nlet ValidatedMethod;\nmodule.link(\"meteor/mdg:validated-method\", {\n  ValidatedMethod(v) {\n    ValidatedMethod = v;\n  }\n\n}, 0);\nlet check, Match;\nmodule.link(\"meteor/check\", {\n  check(v) {\n    check = v;\n  },\n\n  Match(v) {\n    Match = v;\n  }\n\n}, 1);\nlet ResponseMessage;\nmodule.link(\"../../startup/server/utilities/ResponseMessage\", {\n  ResponseMessage(v) {\n    ResponseMessage = v;\n  }\n\n}, 2);\nlet UsersServ;\nmodule.link(\"./UsersServ\", {\n  default(v) {\n    UsersServ = v;\n  }\n\n}, 3);\nnew ValidatedMethod({\n  name: 'user.save',\n\n  validate(user) {\n    try {\n      check(user, {\n        _id: Match.OneOf(String, null),\n        username: String,\n        emails: [{\n          address: String,\n          verified: Boolean\n        }],\n        profile: {\n          profile: String,\n          name: String,\n          path: Match.OneOf(String, null)\n        }\n      });\n    } catch (error) {\n      console.log('save.user', error);\n      throw new Meteor.Error('403', 'La informacion introducida no es valida');\n    }\n\n    UsersServ.validateEmail(user.emails[0].address, user._id);\n    UsersServ.validateUsername(user.username, user._id);\n  },\n\n  run(user) {\n    const responseMessage = new ResponseMessage();\n\n    if (user._id !== null) {\n      try {\n        // UPDATE USER \n        UsersServ.updateUser(user);\n        responseMessage.create('Se actualizo el usuario exitosamente');\n      } catch (error) {\n        console.error('user.save', error);\n        throw new Meteor.Error('500', 'Ocurrio un error al actualizar el usuario');\n      }\n    } else {\n      try {\n        // CREATE USER\n        UsersServ.createUser(user);\n        responseMessage.create('Se ha creado usuario exitosamente');\n      } catch (error) {\n        console.error('user.save: ', error);\n        throw new Meteor.Error('500', 'Ocurri√≥ un error al crear un usuario');\n      }\n    }\n\n    return responseMessage;\n  }\n\n});\nnew ValidatedMethod({\n  name: 'user.delete',\n\n  validate(_ref) {\n    let {\n      idUser\n    } = _ref;\n\n    try {\n      check(idUser, String);\n    } catch (error) {\n      console.error('user.delete', error);\n      throw new Meteor.Error('403', 'La informacion introducida no es valida');\n    }\n  },\n\n  run(_ref2) {\n    let {\n      idUser\n    } = _ref2;\n    const responseMessage = new ResponseMessage();\n\n    try {\n      Meteor.users.remove(idUser);\n      responseMessage.create('Se ha eliminado exitosamente al usuario');\n    } catch (error) {\n      console.error('user.delete', error);\n      throw new Meteor.Error('500', 'Ocurrio un error al eliminar un usuario');\n    }\n\n    return responseMessage;\n  }\n\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"UsersPubs.js\":function module(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                             //\n// imports/api/Users/UsersPubs.js                                                                              //\n//                                                                                                             //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                               //\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet PublishEndpoint;\nmodule.link(\"meteor/peerlibrary:middleware\", {\n  PublishEndpoint(v) {\n    PublishEndpoint = v;\n  }\n\n}, 1);\nnew PublishEndpoint('user.list', function () {\n  return Meteor.users.find({}, {\n    sort: {\n      createdAt: -1\n    },\n    limit: 1\n  });\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"UsersServ.js\":function module(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                             //\n// imports/api/Users/UsersServ.js                                                                              //\n//                                                                                                             //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                               //\nmodule.exportDefault({\n  validateEmail(newEmail, idUser) {\n    const existEmail = Accounts.findUserByEmail(newEmail);\n\n    if (idUser) {\n      const oldUser = Meteor.users.findOne(idUser);\n\n      if (oldUser.emails[0].address !== newEmail && existEmail) {\n        throw new Meteor.Error('403', 'El nuevo email ya se encuentra en uso');\n      }\n    } else if (existEmail) {\n      throw new Meteor.Error('403', 'El nuevo email ya se encuetra en uso');\n    }\n  },\n\n  validateUsername(newUsername, idUser) {\n    const existUsername = Accounts.findUserByUsername(newUsername);\n\n    if (idUser) {\n      const oldUser = Meteor.users.findOne(idUser);\n\n      if (oldUser.username !== newUsername && existUsername) {\n        throw new Meteor.Error('403', \"El nuevo nombre de usuario ya se encuentra en uso\");\n      }\n    } else if (existUsername) {\n      throw new Meteor.Error('403', \"El nombre de usuario ya se encuentra en uso\");\n    }\n  },\n\n  createUser(user) {\n    Accounts.createUser({\n      username: user.username,\n      email: user.emails[0].address,\n      profile: user.profile\n    });\n  },\n\n  updateUser(user) {\n    const currentUser = Meteor.users.findOne(user._id);\n\n    if (currentUser.emails[0].address !== user.emails[0].address) {\n      Accounts.removeEmail(currentUser._id, currentUser.emails[0].address);\n      Accounts.addEmail(currentUser._id, user.emails[0].address);\n    }\n\n    if (currentUser.username !== user.username) {\n      Accounts.setUsername(currentUser._id, user.username);\n    }\n\n    Meteor.users.update(user._id, {\n      $set: {\n        profile: {\n          profile: user.profile.profile,\n          name: user.profile.name,\n          path: user.profile.path\n        }\n      }\n    });\n  }\n\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}}}},\"server\":{\"main.js\":function module(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                             //\n// server/main.js                                                                                              //\n//                                                                                                             //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                               //\nmodule.link(\"/imports/startup/server\");\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}}},{\n  \"extensions\": [\n    \".js\",\n    \".json\",\n    \".mjs\",\n    \".ts\",\n    \".vue\"\n  ]\n});\n\nvar exports = require(\"/server/main.js\");","hash":"ac9dff065ebaee186e1ec516f6918d97455092e6","servePath":"/app.js","sourceMap":{"version":3,"sources":["imports/startup/server/utilities/ResponseMessage.js","imports/startup/server/Permissions.js","imports/startup/server/index.js","imports/api/Users/UsersCtrl.js","imports/api/Users/UsersPubs.js","imports/api/Users/UsersServ.js","server/main.js"],"names":["module","export","ResponseMessage","constructor","message","description","data","create","permissionsArray","Permissions","USERS","LIST","VALUE","TEXT","CREATE","Update","DELETE","Object","keys","reduce","accumulator","systemModuleName","systemModuleObject","modulePermissions","map","permission","concat","Meteor","isDevelopment","settings","private","REFRESH_PERMISSIONS","console","log","currentRoles","Roles","getAllRoles","fetch","find","_role","_id","createRole","roles","update","$set","publicName","exportDefault","link","ValidatedMethod","v","check","Match","UsersServ","default","name","validate","user","OneOf","String","username","emails","address","verified","Boolean","profile","path","error","Error","validateEmail","validateUsername","run","responseMessage","updateUser","createUser","idUser","users","remove","PublishEndpoint","sort","createdAt","limit","newEmail","existEmail","Accounts","findUserByEmail","oldUser","findOne","newUsername","existUsername","findUserByUsername","email","currentUser","removeEmail","addEmail","setUsername"],"mappings":"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","file":"/app.js","sourcesContent":["export class ResponseMessage {\r\n    constructor(){\r\n        this.message = null;\r\n        this.description = null;\r\n        this.data = null;\r\n    }\r\n    \r\n    create(message, description = null, data = null){\r\n        this.message = message;\r\n        this.description = description;\r\n        this.data = data;\r\n    }\r\n}","const Permissions = {\r\n    USERS: {\r\n        LIST: {VALUE: 'users-view', TEXT: 'Listar usuarios'},\r\n        CREATE: {VALUE: 'users-create', TEXT: 'Crear usuario'},\r\n        Update: {VALUE: 'users-edit', TEXT: 'Actualizar usuario'},\r\n        DELETE: {VALUE: 'users-delete', TEXT: 'Eliminar usuario'}\r\n    }\r\n};\r\n\r\nexport const permissionsArray = Object.keys(Permissions).reduce((accumulator, systemModuleName) => {\r\n    const systemModuleObject = Permissions[systemModuleName];\r\n    const modulePermissions = Object.keys(systemModuleObject).map(permission => systemModuleObject[permission]);\r\n    return accumulator.concat(modulePermissions);\r\n}, []);\r\n\r\nif (Meteor.isDevelopment) {\r\n    if (Meteor.settings.private && Meteor.settings.private.REFRESH_PERMISSIONS) {\r\n        console.log('uplading permissions. . .');\r\n        const currentRoles = Roles.getAllRoles().fetch();\r\n        for (let permission of permissionsArray) {\r\n            if (!currentRoles.find(_role => _role._id === permission.VALUE)) {\r\n                Roles.createRole(permission.VALUE);\r\n            }\r\n            Meteor.roles.update(permission.VALUE, {\r\n                $set: {\r\n                    publicName: permission.TEXT\r\n                }\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\nexport default Permissions","import './Permissions';\r\n\r\nimport '../../api/Users/UsersCtrl';\r\nimport '../../api/Users/UsersPubs';","import {ValidatedMethod} from 'meteor/mdg:validated-method';\r\nimport {check, Match} from 'meteor/check';\r\nimport { ResponseMessage } from '../../startup/server/utilities/ResponseMessage';\r\nimport UsersServ from './UsersServ';\r\n\r\nnew ValidatedMethod ({\r\n    name: 'user.save',\r\n    validate(user){\r\n        try {\r\n            check(user, {\r\n                _id: Match.OneOf(String, null),\r\n                username: String,\r\n                emails: [{address: String, verified: Boolean}],\r\n                profile: {\r\n                    profile: String,\r\n                    name: String,\r\n                    path: Match.OneOf(String, null)\r\n                }\r\n            })\r\n        } catch (error) {\r\n            console.log('save.user', error);\r\n            throw new Meteor.Error('403', 'La informacion introducida no es valida');\r\n        }\r\n        UsersServ.validateEmail(user.emails[0].address, user._id);\r\n        UsersServ.validateUsername(user.username, user._id);\r\n    },\r\n    run(user){\r\n        const responseMessage = new ResponseMessage();\r\n        if (user._id !== null) {\r\n            try {\r\n                // UPDATE USER \r\n                UsersServ.updateUser(user);\r\n                responseMessage.create('Se actualizo el usuario exitosamente');\r\n            } catch (error) {\r\n                console.error('user.save', error);\r\n                throw new Meteor.Error('500', 'Ocurrio un error al actualizar el usuario');\r\n            }\r\n        } else {\r\n            try {\r\n                // CREATE USER\r\n                UsersServ.createUser(user);\r\n                responseMessage.create('Se ha creado usuario exitosamente');\r\n            } catch (error) {\r\n                console.error('user.save: ', error);\r\n                throw new Meteor.Error('500', 'Ocurri√≥ un error al crear un usuario');\r\n            }\r\n        }\r\n        return responseMessage;\r\n    }\r\n});\r\n\r\nnew ValidatedMethod({\r\n    name: 'user.delete',\r\n    validate({idUser}){\r\n        try {\r\n            check(idUser, String);\r\n        } catch (error) {\r\n            console.error('user.delete', error);\r\n            throw new Meteor.Error('403', 'La informacion introducida no es valida');\r\n        }\r\n    },\r\n    run({idUser}){\r\n        const responseMessage = new ResponseMessage;\r\n        try {\r\n            Meteor.users.remove(idUser);\r\n            responseMessage.create('Se ha eliminado exitosamente al usuario');\r\n        } catch (error) {\r\n            console.error('user.delete', error);\r\n            throw new Meteor.Error('500', 'Ocurrio un error al eliminar un usuario');\r\n        }\r\n        return responseMessage;\r\n    }\r\n});","import {Meteor} from 'meteor/meteor';\r\nimport {PublishEndpoint} from 'meteor/peerlibrary:middleware';\r\n\r\nnew PublishEndpoint('user.list', function() {\r\n    return Meteor.users.find({}, {\r\n        sort: {createdAt: -1},\r\n        limit: 1\r\n    });\r\n});","export default {\r\n    validateEmail(newEmail, idUser){\r\n        const existEmail = Accounts.findUserByEmail(newEmail);\r\n        if (idUser) {\r\n            const oldUser = Meteor.users.findOne(idUser);\r\n            if (oldUser.emails[0].address !== newEmail && existEmail) {\r\n                throw new Meteor.Error('403', 'El nuevo email ya se encuentra en uso');\r\n            }\r\n        } else if (existEmail) {\r\n            throw new Meteor.Error('403', 'El nuevo email ya se encuetra en uso');\r\n        }\r\n    },\r\n    validateUsername(newUsername, idUser){\r\n        const existUsername = Accounts.findUserByUsername(newUsername);\r\n        if (idUser) {\r\n            const oldUser = Meteor.users.findOne(idUser);\r\n            if (oldUser.username !== newUsername && existUsername) {\r\n                throw new Meteor.Error('403', \"El nuevo nombre de usuario ya se encuentra en uso\");\r\n            }\r\n        } else if (existUsername) {\r\n            throw new Meteor.Error('403', \"El nombre de usuario ya se encuentra en uso\");\r\n        }\r\n    },\r\n    createUser(user){\r\n        Accounts.createUser({\r\n            username: user.username,\r\n            email: user.emails[0].address,\r\n            profile: user.profile\r\n        });\r\n    },\r\n    updateUser(user){\r\n        const currentUser = Meteor.users.findOne(user._id);\r\n        if (currentUser.emails[0].address !== user.emails[0].address) {\r\n            Accounts.removeEmail(currentUser._id, currentUser.emails[0].address);\r\n            Accounts.addEmail(currentUser._id, user.emails[0].address);\r\n        }\r\n        if (currentUser.username !== user.username) {\r\n            Accounts.setUsername(currentUser._id, user.username);\r\n        }\r\n        Meteor.users.update(user._id, {\r\n            $set: {\r\n                profile: {\r\n                    profile: user.profile.profile,\r\n                    name: user.profile.name,\r\n                    path: user.profile.path\r\n                }\r\n            }\r\n        });\r\n    }\r\n}","import \"/imports/startup/server\";"]}}]