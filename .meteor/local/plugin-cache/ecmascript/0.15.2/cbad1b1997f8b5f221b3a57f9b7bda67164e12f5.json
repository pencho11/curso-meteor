{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"C:\\Users\\RUBEN\\Desktop\\meteor-vue\\packages\\socialize:user-model\\common\\user-model.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser.legacy"},"sourceFileName":"packages/socialize:user-model/common/user-model.js","filename":"C:\\Users\\RUBEN\\Desktop\\meteor-vue\\packages\\socialize:user-model\\common\\user-model.js","targets":{},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"C:\\Users\\RUBEN\\Desktop\\meteor-vue","root":"C:\\Users\\RUBEN\\Desktop\\meteor-vue","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":true,"enforceStrictMode":false,"dynamicImport":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.14.0","helpers":true,"useESModules":false,"corejs":false}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$3","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$4","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"StaticBlock":{"enter":[null]},"TSModuleBlock":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectPattern":{"enter":[null]}},"options":{}},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"ObjectMethod":{"enter":[null],"exit":[null]},"ClassMethod":{"enter":[null],"exit":[null]},"ClassPrivateMethod":{"enter":[null],"exit":[null]},"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"C:\\Users\\RUBEN\\Desktop\\meteor-vue\\packages\\socialize:user-model\\common\\user-model.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/socialize:user-model/common/user-model.js"}},"code":"var _inheritsLoose;\n\nmodule.link(\"@babel/runtime/helpers/inheritsLoose\", {\n  default: function (v) {\n    _inheritsLoose = v;\n  }\n}, 0);\nvar SimpleSchema;\nmodule.link(\"simpl-schema\", {\n  \"default\": function (v) {\n    SimpleSchema = v;\n  }\n}, 0);\nmodule.exportDefault(function (_ref) {\n  var Meteor = _ref.Meteor,\n      Package = _ref.Package,\n      check = _ref.check,\n      LinkableModel = _ref.LinkableModel,\n      LinkParent = _ref.LinkParent;\n\n  /**\n  * Represents a User\n  * @class User\n  * @param {Object} document An object representing a user ususally a Mongo document\n  */\n  var User = /*#__PURE__*/function (_LinkParent) {\n    _inheritsLoose(User, _LinkParent);\n\n    function User() {\n      return _LinkParent.apply(this, arguments) || this;\n    }\n\n    //eslint-disable-line\n    User.addFieldsToPublish = function () {\n      function addFieldsToPublish(fieldsObj) {\n        Object.assign(this.fieldsToPublish, fieldsObj);\n      }\n\n      return addFieldsToPublish;\n    }()\n    /**\n    * The personal name of the user account, You if the the user represents the\n    * currently logged in user, or this.username otherwise\n    * @returns {String} A name representation of the user account\n    */\n    ;\n\n    var _proto = User.prototype;\n\n    _proto.displayName = function () {\n      function displayName() {\n        return this.isSelf() ? 'You' : this.username;\n      }\n\n      return displayName;\n    }()\n    /**\n    * Check if the this user is the current logged in user or the specified user\n    * @param   {Object}  user The user to check against\n    * @returns {Boolean} Whether or not this user is the same as the specified user\n    */\n    ;\n\n    _proto.isSelf = function () {\n      function isSelf(user) {\n        var userId = user && user._id || Meteor.userId();\n        return this._id === userId;\n      }\n\n      return isSelf;\n    }();\n\n    return User;\n  }(LinkParent);\n\n  User.fieldsToPublish = {\n    username: 1\n  };\n  User.attachCollection(Meteor.users);\n  var UsersSchema = new SimpleSchema({\n    username: {\n      type: String,\n      // For accounts-password, either emails or username is required, but not both. It is OK to make this\n      // optional here because the accounts-password package does its own validation.\n      // Third-party login packages may not require either. Adjust this schema as necessary for your usage.\n      optional: true\n    },\n    emails: {\n      type: Array,\n      // For accounts-password, either emails or username is required, but not both. It is OK to make this\n      // optional here because the accounts-password package does its own validation.\n      // Third-party login packages may not require either. Adjust this schema as necessary for your usage.\n      optional: true\n    },\n    'emails.$': {\n      type: Object\n    },\n    'emails.$.address': {\n      type: String,\n      regEx: SimpleSchema.RegEx.Email\n    },\n    'emails.$.verified': {\n      type: Boolean\n    },\n    'emails.$.default': {\n      type: Boolean,\n      optional: true\n    },\n    createdAt: {\n      type: Date\n    },\n    // Make sure this services field is in your schema if you're using any of the accounts packages\n    services: {\n      type: Object,\n      optional: true,\n      blackbox: true\n    },\n    heartbeat: {\n      type: Date,\n      optional: true\n    }\n  });\n  User.attachSchema(UsersSchema);\n  LinkableModel.registerParentModel(User);\n\n  if (Package['accounts-password']) {\n    Meteor.methods && Meteor.methods({\n      /**\n      * Sets the default email for the currently logged in users\n      * @param {String} emailAddress The email address to set as the current\n      */\n      setDefaultEmail: function (emailAddress) {\n        check(emailAddress, String);\n\n        if (this.userId) {\n          var user = Meteor.users.findOne({\n            _id: this.userId,\n            'emails.address': emailAddress\n          });\n\n          if (user) {\n            Meteor.users.update({\n              _id: this.userId,\n              'emails.default': true\n            }, {\n              $set: {\n                'emails.$.default': false\n              }\n            });\n            Meteor.users.update({\n              _id: this.userId,\n              'emails.address': emailAddress\n            }, {\n              $set: {\n                'emails.$.default': true\n              }\n            });\n          }\n        } else {\n          throw new Meteor.Error('NotAuthorized', 'You must be logged in to perform this operation.');\n        }\n      }\n    });\n    User.methods({\n      /**\n      * Set the default email address for the user\n      * @param {[type]} emailAddress [description]\n      */\n      setDefaultEmail: function (emailAddress) {\n        if (Meteor.user().isSelf()) {\n          Meteor.call('setDefaultEmail', emailAddress);\n        }\n      },\n\n      /**\n      * Get the default email address for the user\n      * @returns {String} The users default email address\n      */\n      defaultEmail: function () {\n        var obj = this.emails.find(function (rec) {\n          return rec.default === true;\n        });\n        return obj && obj.address || this.emails[0].address;\n      }\n    });\n  }\n\n  return {\n    User: User,\n    UsersCollection: Meteor.users\n  };\n});","map":{"version":3,"sources":["packages/socialize:user-model/common/user-model.js"],"names":["_inheritsLoose","module","link","default","v","SimpleSchema","exportDefault","Meteor","Package","check","LinkableModel","LinkParent","User","addFieldsToPublish","fieldsObj","Object","assign","fieldsToPublish","displayName","isSelf","username","user","userId","_id","attachCollection","users","UsersSchema","type","String","optional","emails","Array","regEx","RegEx","Email","Boolean","createdAt","Date","services","blackbox","heartbeat","attachSchema","registerParentModel","methods","setDefaultEmail","emailAddress","findOne","update","$set","Error","call","defaultEmail","obj","find","rec","address","UsersCollection"],"mappings":"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","sourcesContent":["/* eslint-disable import/no-unresolved */\nimport SimpleSchema from 'simpl-schema';\n/* eslint-enable import/no-unresolved */\n\n\nexport default ({ Meteor, Package, check, LinkableModel, LinkParent }) => {\n    /**\n    * Represents a User\n    * @class User\n    * @param {Object} document An object representing a user ususally a Mongo document\n    */\n    class User extends LinkParent { //eslint-disable-line\n        static fieldsToPublish = { username: 1 };\n\n        static addFieldsToPublish(fieldsObj) {\n            Object.assign(this.fieldsToPublish, fieldsObj);\n        }\n\n        /**\n        * The personal name of the user account, You if the the user represents the\n        * currently logged in user, or this.username otherwise\n        * @returns {String} A name representation of the user account\n        */\n        displayName() {\n            return this.isSelf() ? 'You' : this.username;\n        }\n\n        /**\n        * Check if the this user is the current logged in user or the specified user\n        * @param   {Object}  user The user to check against\n        * @returns {Boolean} Whether or not this user is the same as the specified user\n        */\n        isSelf(user) {\n            const userId = (user && user._id) || Meteor.userId();\n\n            return this._id === userId;\n        }\n    }\n\n    User.attachCollection(Meteor.users);\n\n    const UsersSchema = new SimpleSchema({\n        username: {\n            type: String,\n            // For accounts-password, either emails or username is required, but not both. It is OK to make this\n            // optional here because the accounts-password package does its own validation.\n            // Third-party login packages may not require either. Adjust this schema as necessary for your usage.\n            optional: true,\n        },\n        emails: {\n            type: Array,\n            // For accounts-password, either emails or username is required, but not both. It is OK to make this\n            // optional here because the accounts-password package does its own validation.\n            // Third-party login packages may not require either. Adjust this schema as necessary for your usage.\n            optional: true,\n        },\n        'emails.$': {\n            type: Object,\n        },\n        'emails.$.address': {\n            type: String,\n            regEx: SimpleSchema.RegEx.Email,\n        },\n        'emails.$.verified': {\n            type: Boolean,\n        },\n        'emails.$.default': {\n            type: Boolean,\n            optional: true,\n        },\n        createdAt: {\n            type: Date,\n        },\n        // Make sure this services field is in your schema if you're using any of the accounts packages\n        services: {\n            type: Object,\n            optional: true,\n            blackbox: true,\n        },\n        heartbeat: {\n            type: Date,\n            optional: true,\n        },\n    });\n\n    User.attachSchema(UsersSchema);\n\n    LinkableModel.registerParentModel(User);\n\n\n    if (Package['accounts-password']) {\n        Meteor.methods && Meteor.methods({\n            /**\n            * Sets the default email for the currently logged in users\n            * @param {String} emailAddress The email address to set as the current\n            */\n            setDefaultEmail(emailAddress) {\n                check(emailAddress, String);\n                if (this.userId) {\n                    const user = Meteor.users.findOne({ _id: this.userId, 'emails.address': emailAddress });\n                    if (user) {\n                        Meteor.users.update({ _id: this.userId, 'emails.default': true }, { $set: { 'emails.$.default': false } });\n                        Meteor.users.update({ _id: this.userId, 'emails.address': emailAddress }, { $set: { 'emails.$.default': true } });\n                    }\n                } else {\n                    throw new Meteor.Error('NotAuthorized', 'You must be logged in to perform this operation.');\n                }\n            },\n        });\n\n        User.methods({\n            /**\n            * Set the default email address for the user\n            * @param {[type]} emailAddress [description]\n            */\n            setDefaultEmail(emailAddress) {\n                if (Meteor.user().isSelf()) {\n                    Meteor.call('setDefaultEmail', emailAddress);\n                }\n            },\n            /**\n            * Get the default email address for the user\n            * @returns {String} The users default email address\n            */\n            defaultEmail() {\n                const obj = this.emails.find(rec => rec.default === true);\n                return (obj && obj.address) || this.emails[0].address;\n            },\n        });\n    }\n\n    return { User, UsersCollection: Meteor.users };\n};\n"]},"sourceType":"module","hash":"cbad1b1997f8b5f221b3a57f9b7bda67164e12f5"}
