{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"C:\\Users\\RUBEN\\Desktop\\meteor-vue\\packages\\socialize:user-presence\\server\\user-presence.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.windows.x86_64"},"sourceFileName":"packages/socialize:user-presence/server/user-presence.js","filename":"C:\\Users\\RUBEN\\Desktop\\meteor-vue\\packages\\socialize:user-presence\\server\\user-presence.js","targets":{},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"C:\\Users\\RUBEN\\Desktop\\meteor-vue","root":"C:\\Users\\RUBEN\\Desktop\\meteor-vue","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.14.0","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"C:\\Users\\RUBEN\\Desktop\\meteor-vue\\packages\\socialize:user-presence\\server\\user-presence.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/socialize:user-presence/server/user-presence.js"}},"code":"module.export({\n  UserPresence: () => UserPresence,\n  sessionConnected: () => sessionConnected,\n  sessionDisconnected: () => sessionDisconnected,\n  determineStatus: () => determineStatus,\n  userConnected: () => userConnected,\n  userDisconnected: () => userDisconnected\n});\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet ServerPresence;\nmodule.link(\"meteor/socialize:server-presence\", {\n  ServerPresence(v) {\n    ServerPresence = v;\n  }\n\n}, 1);\nlet UserSessions;\nmodule.link(\"../common/common.js\", {\n  UserSessions(v) {\n    UserSessions = v;\n  }\n\n}, 2);\n\nUserSessions._ensureIndex({\n  userId: 1\n});\n\nUserSessions._ensureIndex({\n  serverId: 1\n});\n\nUserSessions._ensureIndex({\n  sessionId: 1\n});\n\nconst cleanupFunctions = [];\nconst userOnlineFunctions = [];\nconst userOfflineFunctions = [];\nconst userIdleFunctions = [];\nconst sessionConnectedFunctions = [];\nconst sessionDisconnectedFunctions = [];\n/* eslint-disable import/prefer-default-export */\n\nconst UserPresence = {};\n\nUserPresence.onSessionConnected = sessionConnectedFunction => {\n  if (typeof sessionConnectedFunction === 'function') {\n    sessionConnectedFunctions.push(sessionConnectedFunction);\n  } else {\n    throw new Meteor.Error('Not A Function', 'UserPresence.onSessionConnected requires function as parameter');\n  }\n};\n\nconst sessionConnected = (connection, userId) => {\n  sessionConnectedFunctions.forEach(sessionFunction => {\n    sessionFunction(connection, userId);\n  });\n};\n\nUserPresence.onSessionDisconnected = sessionDisconnectedFunction => {\n  if (typeof sessionDisconnectedFunction === 'function') {\n    sessionDisconnectedFunctions.push(sessionDisconnectedFunction);\n  } else {\n    throw new Meteor.Error('Not A Function', 'UserPresence.onSessionDisconnected requires function as parameter');\n  }\n};\n\nconst sessionDisconnected = (connection, userId) => {\n  sessionDisconnectedFunctions.forEach(sessionFunction => {\n    sessionFunction(connection, userId);\n  });\n};\n\nUserPresence.onUserOnline = userOnlineFunction => {\n  if (typeof userOnlineFunction === 'function') {\n    userOnlineFunctions.push(userOnlineFunction);\n  } else {\n    throw new Meteor.Error('Not A Function', 'UserPresence.onUserOnline requires function as parameter');\n  }\n};\n\nconst userOnline = (userId, connection) => {\n  userOnlineFunctions.forEach(onlineFunction => {\n    onlineFunction(userId, connection);\n  });\n};\n\nUserPresence.onUserIdle = userIdleFunction => {\n  if (typeof userIdleFunction === 'function') {\n    userIdleFunctions.push(userIdleFunction);\n  } else {\n    throw new Meteor.Error('Not A Function', 'UserPresence.onUserIdle requires function as parameter');\n  }\n};\n\nconst userIdle = (userId, connection) => {\n  userIdleFunctions.forEach(idleFunction => {\n    idleFunction(userId, connection);\n  });\n};\n\nUserPresence.onUserOffline = userOfflineFunction => {\n  if (typeof userOfflineFunction === 'function') {\n    userOfflineFunctions.push(userOfflineFunction);\n  } else {\n    throw new Meteor.Error('Not A Function', 'UserPresence.onUserOffline requires function as parameter');\n  }\n};\n\nconst userOffline = (userId, connection) => {\n  userOfflineFunctions.forEach(offlineFunction => {\n    offlineFunction(userId, connection);\n  });\n};\n\nconst determineStatus = (userId, connection) => {\n  let status = 0;\n  const sessions = UserSessions.find({\n    userId\n  }, {\n    fields: {\n      status: 1\n    }\n  });\n  const sessionCount = sessions.fetch().length;\n\n  if (sessionCount > 0) {\n    status = 1;\n    sessions.forEach(session => {\n      if (session.status === 2) {\n        status = 2;\n      }\n    });\n  }\n\n  switch (status) {\n    case 1:\n      userIdle(userId, connection);\n      break;\n\n    case 2:\n      userOnline(userId, connection);\n      break;\n\n    default:\n      userOffline(userId, connection);\n      break;\n  }\n};\n\nconst userConnected = (sessionId, userId, serverId, connection) => {\n  UserSessions.insert({\n    serverId,\n    userId,\n    _id: sessionId,\n    status: 2\n  });\n  determineStatus(userId, connection);\n};\n\nconst userDisconnected = (sessionId, userId, connection) => {\n  UserSessions.remove(sessionId);\n  determineStatus(userId, connection);\n};\n\nUserPresence.onCleanup = cleanupFunction => {\n  if (typeof cleanupFunction === 'function') {\n    cleanupFunctions.push(cleanupFunction);\n  } else {\n    throw new Meteor.Error('Not A Function', 'UserPresence.onCleanup requires function as parameter');\n  }\n};\n\nconst cleanup = sessionIds => {\n  cleanupFunctions.forEach(cleanupFunction => {\n    cleanupFunction(sessionIds);\n  });\n};\n\nServerPresence.onCleanup(serverId => {\n  if (serverId) {\n    const sessionIds = UserSessions.find({\n      serverId\n    }, {\n      fields: {\n        userId: true\n      }\n    }).map(session => {\n      userDisconnected(session._id, session.userId, null);\n      return session._id;\n    });\n    cleanup(sessionIds);\n  } else {\n    cleanup();\n    UserSessions.remove({});\n  }\n});","map":{"version":3,"sources":["packages/socialize:user-presence/server/user-presence.js"],"names":["module","export","UserPresence","sessionConnected","sessionDisconnected","determineStatus","userConnected","userDisconnected","Meteor","link","v","ServerPresence","UserSessions","_ensureIndex","userId","serverId","sessionId","cleanupFunctions","userOnlineFunctions","userOfflineFunctions","userIdleFunctions","sessionConnectedFunctions","sessionDisconnectedFunctions","onSessionConnected","sessionConnectedFunction","push","Error","connection","forEach","sessionFunction","onSessionDisconnected","sessionDisconnectedFunction","onUserOnline","userOnlineFunction","userOnline","onlineFunction","onUserIdle","userIdleFunction","userIdle","idleFunction","onUserOffline","userOfflineFunction","userOffline","offlineFunction","status","sessions","find","fields","sessionCount","fetch","length","session","insert","_id","remove","onCleanup","cleanupFunction","cleanup","sessionIds","map"],"mappings":"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","sourcesContent":["/* eslint-disable import/no-unresolved */\nimport { Meteor } from 'meteor/meteor';\nimport { ServerPresence } from 'meteor/socialize:server-presence';\n\n/* eslint-enable import/no-unresolved */\n\nimport { UserSessions } from '../common/common.js';\n\nUserSessions._ensureIndex({ userId: 1 });\nUserSessions._ensureIndex({ serverId: 1 });\nUserSessions._ensureIndex({ sessionId: 1 });\n\nconst cleanupFunctions = [];\nconst userOnlineFunctions = [];\nconst userOfflineFunctions = [];\nconst userIdleFunctions = [];\nconst sessionConnectedFunctions = [];\nconst sessionDisconnectedFunctions = [];\n\n/* eslint-disable import/prefer-default-export */\nexport const UserPresence = {};\n\nUserPresence.onSessionConnected = (sessionConnectedFunction) => {\n    if (typeof sessionConnectedFunction === 'function') {\n        sessionConnectedFunctions.push(sessionConnectedFunction);\n    } else {\n        throw new Meteor.Error('Not A Function', 'UserPresence.onSessionConnected requires function as parameter');\n    }\n};\n\nexport const sessionConnected = (connection, userId) => {\n    sessionConnectedFunctions.forEach((sessionFunction) => {\n        sessionFunction(connection, userId);\n    });\n};\n\nUserPresence.onSessionDisconnected = (sessionDisconnectedFunction) => {\n    if (typeof sessionDisconnectedFunction === 'function') {\n        sessionDisconnectedFunctions.push(sessionDisconnectedFunction);\n    } else {\n        throw new Meteor.Error('Not A Function', 'UserPresence.onSessionDisconnected requires function as parameter');\n    }\n};\n\nexport const sessionDisconnected = (connection, userId) => {\n    sessionDisconnectedFunctions.forEach((sessionFunction) => {\n        sessionFunction(connection, userId);\n    });\n};\n\n\nUserPresence.onUserOnline = (userOnlineFunction) => {\n    if (typeof userOnlineFunction === 'function') {\n        userOnlineFunctions.push(userOnlineFunction);\n    } else {\n        throw new Meteor.Error('Not A Function', 'UserPresence.onUserOnline requires function as parameter');\n    }\n};\n\nconst userOnline = (userId, connection) => {\n    userOnlineFunctions.forEach((onlineFunction) => {\n        onlineFunction(userId, connection);\n    });\n};\n\nUserPresence.onUserIdle = (userIdleFunction) => {\n    if (typeof userIdleFunction === 'function') {\n        userIdleFunctions.push(userIdleFunction);\n    } else {\n        throw new Meteor.Error('Not A Function', 'UserPresence.onUserIdle requires function as parameter');\n    }\n};\n\nconst userIdle = (userId, connection) => {\n    userIdleFunctions.forEach((idleFunction) => {\n        idleFunction(userId, connection);\n    });\n};\n\nUserPresence.onUserOffline = (userOfflineFunction) => {\n    if (typeof userOfflineFunction === 'function') {\n        userOfflineFunctions.push(userOfflineFunction);\n    } else {\n        throw new Meteor.Error('Not A Function', 'UserPresence.onUserOffline requires function as parameter');\n    }\n};\n\nconst userOffline = (userId, connection) => {\n    userOfflineFunctions.forEach((offlineFunction) => {\n        offlineFunction(userId, connection);\n    });\n};\n\nexport const determineStatus = (userId, connection) => {\n    let status = 0;\n    const sessions = UserSessions.find({ userId }, { fields: { status: 1 } });\n    const sessionCount = sessions.fetch().length;\n\n    if (sessionCount > 0) {\n        status = 1;\n        sessions.forEach((session) => {\n            if (session.status === 2) {\n                status = 2;\n            }\n        });\n    }\n\n    switch (status) {\n        case 1:\n            userIdle(userId, connection);\n            break;\n        case 2:\n            userOnline(userId, connection);\n            break;\n        default:\n            userOffline(userId, connection);\n            break;\n    }\n};\n\nexport const userConnected = (sessionId, userId, serverId, connection) => {\n    UserSessions.insert({ serverId, userId, _id: sessionId, status: 2 });\n    determineStatus(userId, connection);\n};\n\nexport const userDisconnected = (sessionId, userId, connection) => {\n    UserSessions.remove(sessionId);\n    determineStatus(userId, connection);\n};\n\n\nUserPresence.onCleanup = (cleanupFunction) => {\n    if (typeof cleanupFunction === 'function') {\n        cleanupFunctions.push(cleanupFunction);\n    } else {\n        throw new Meteor.Error('Not A Function', 'UserPresence.onCleanup requires function as parameter');\n    }\n};\n\nconst cleanup = (sessionIds) => {\n    cleanupFunctions.forEach((cleanupFunction) => {\n        cleanupFunction(sessionIds);\n    });\n};\n\nServerPresence.onCleanup((serverId) => {\n    if (serverId) {\n        const sessionIds = UserSessions.find({ serverId }, { fields: { userId: true } }).map((session) => {\n            userDisconnected(session._id, session.userId, null);\n            return session._id;\n        });\n        cleanup(sessionIds);\n    } else {\n        cleanup();\n        UserSessions.remove({});\n    }\n});\n"]},"sourceType":"module","hash":"e2dbe1150da127bccca2367fd58c1db1275e4718"}
