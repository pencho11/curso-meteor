{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"C:\\Users\\RUBEN\\Desktop\\meteor-vue\\packages\\ddp-client\\common\\namespace.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser.legacy"},"sourceFileName":"packages/ddp-client/common/namespace.js","filename":"C:\\Users\\RUBEN\\Desktop\\meteor-vue\\packages\\ddp-client\\common\\namespace.js","targets":{},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"C:\\Users\\RUBEN\\Desktop\\meteor-vue","root":"C:\\Users\\RUBEN\\Desktop\\meteor-vue","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":true,"enforceStrictMode":false,"dynamicImport":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.14.0","helpers":true,"useESModules":false,"corejs":false}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$3","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$4","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"StaticBlock":{"enter":[null]},"TSModuleBlock":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectPattern":{"enter":[null]}},"options":{}},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"ObjectMethod":{"enter":[null],"exit":[null]},"ClassMethod":{"enter":[null],"exit":[null]},"ClassPrivateMethod":{"enter":[null],"exit":[null]},"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"C:\\Users\\RUBEN\\Desktop\\meteor-vue\\packages\\ddp-client\\common\\namespace.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/ddp-client/common/namespace.js"}},"code":"module.export({\n  DDP: function () {\n    return DDP;\n  }\n});\nvar DDPCommon;\nmodule.link(\"meteor/ddp-common\", {\n  DDPCommon: function (v) {\n    DDPCommon = v;\n  }\n}, 0);\nvar Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor: function (v) {\n    Meteor = v;\n  }\n}, 1);\nvar Connection;\nmodule.link(\"./livedata_connection.js\", {\n  Connection: function (v) {\n    Connection = v;\n  }\n}, 2);\n// This array allows the `_allSubscriptionsReady` method below, which\n// is used by the `spiderable` package, to keep track of whether all\n// data is ready.\nvar allConnections = [];\n/**\n * @namespace DDP\n * @summary Namespace for DDP-related methods/classes.\n */\n\nvar DDP = {};\n// This is private but it's used in a few places. accounts-base uses\n// it to get the current user. Meteor.setTimeout and friends clear\n// it. We can probably find a better way to factor this.\nDDP._CurrentMethodInvocation = new Meteor.EnvironmentVariable();\nDDP._CurrentPublicationInvocation = new Meteor.EnvironmentVariable(); // XXX: Keep DDP._CurrentInvocation for backwards-compatibility.\n\nDDP._CurrentInvocation = DDP._CurrentMethodInvocation; // This is passed into a weird `makeErrorType` function that expects its thing\n// to be a constructor\n\nfunction connectionErrorConstructor(message) {\n  this.message = message;\n}\n\nDDP.ConnectionError = Meteor.makeErrorType('DDP.ConnectionError', connectionErrorConstructor);\nDDP.ForcedReconnectError = Meteor.makeErrorType('DDP.ForcedReconnectError', function () {}); // Returns the named sequence of pseudo-random values.\n// The scope will be DDP._CurrentMethodInvocation.get(), so the stream will produce\n// consistent values for method calls on the client and server.\n\nDDP.randomStream = function (name) {\n  var scope = DDP._CurrentMethodInvocation.get();\n\n  return DDPCommon.RandomStream.get(scope, name);\n}; // @param url {String} URL to Meteor app,\n//     e.g.:\n//     \"subdomain.meteor.com\",\n//     \"http://subdomain.meteor.com\",\n//     \"/\",\n//     \"ddp+sockjs://ddp--****-foo.meteor.com/sockjs\"\n\n/**\n * @summary Connect to the server of a different Meteor application to subscribe to its document sets and invoke its remote methods.\n * @locus Anywhere\n * @param {String} url The URL of another Meteor application.\n */\n\n\nDDP.connect = function (url, options) {\n  var ret = new Connection(url, options);\n  allConnections.push(ret); // hack. see below.\n\n  return ret;\n};\n\nDDP._reconnectHook = new Hook({\n  bindEnvironment: false\n});\n/**\n * @summary Register a function to call as the first step of\n * reconnecting. This function can call methods which will be executed before\n * any other outstanding methods. For example, this can be used to re-establish\n * the appropriate authentication context on the connection.\n * @locus Anywhere\n * @param {Function} callback The function to call. It will be called with a\n * single argument, the [connection object](#ddp_connect) that is reconnecting.\n */\n\nDDP.onReconnect = function (callback) {\n  return DDP._reconnectHook.register(callback);\n}; // Hack for `spiderable` package: a way to see if the page is done\n// loading all the data it needs.\n//\n\n\nDDP._allSubscriptionsReady = function () {\n  return allConnections.every(function (conn) {\n    return Object.values(conn._subscriptions).every(function (sub) {\n      return sub.ready;\n    });\n  });\n};","map":{"version":3,"sources":["packages/ddp-client/common/namespace.js"],"names":["module","export","DDP","DDPCommon","link","v","Meteor","Connection","allConnections","_CurrentMethodInvocation","EnvironmentVariable","_CurrentPublicationInvocation","_CurrentInvocation","connectionErrorConstructor","message","ConnectionError","makeErrorType","ForcedReconnectError","randomStream","name","scope","get","RandomStream","connect","url","options","ret","push","_reconnectHook","Hook","bindEnvironment","onReconnect","callback","register","_allSubscriptionsReady","every","conn","Object","values","_subscriptions","sub","ready"],"mappings":"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","sourcesContent":["import { DDPCommon } from 'meteor/ddp-common';\nimport { Meteor } from 'meteor/meteor';\n\nimport { Connection } from './livedata_connection.js';\n\n// This array allows the `_allSubscriptionsReady` method below, which\n// is used by the `spiderable` package, to keep track of whether all\n// data is ready.\nconst allConnections = [];\n\n/**\n * @namespace DDP\n * @summary Namespace for DDP-related methods/classes.\n */\nexport const DDP = {};\n\n// This is private but it's used in a few places. accounts-base uses\n// it to get the current user. Meteor.setTimeout and friends clear\n// it. We can probably find a better way to factor this.\nDDP._CurrentMethodInvocation = new Meteor.EnvironmentVariable();\nDDP._CurrentPublicationInvocation = new Meteor.EnvironmentVariable();\n\n// XXX: Keep DDP._CurrentInvocation for backwards-compatibility.\nDDP._CurrentInvocation = DDP._CurrentMethodInvocation;\n\n// This is passed into a weird `makeErrorType` function that expects its thing\n// to be a constructor\nfunction connectionErrorConstructor(message) {\n  this.message = message;\n}\n\nDDP.ConnectionError = Meteor.makeErrorType(\n  'DDP.ConnectionError',\n  connectionErrorConstructor\n);\n\nDDP.ForcedReconnectError = Meteor.makeErrorType(\n  'DDP.ForcedReconnectError',\n  () => {}\n);\n\n// Returns the named sequence of pseudo-random values.\n// The scope will be DDP._CurrentMethodInvocation.get(), so the stream will produce\n// consistent values for method calls on the client and server.\nDDP.randomStream = name => {\n  const scope = DDP._CurrentMethodInvocation.get();\n  return DDPCommon.RandomStream.get(scope, name);\n};\n\n// @param url {String} URL to Meteor app,\n//     e.g.:\n//     \"subdomain.meteor.com\",\n//     \"http://subdomain.meteor.com\",\n//     \"/\",\n//     \"ddp+sockjs://ddp--****-foo.meteor.com/sockjs\"\n\n/**\n * @summary Connect to the server of a different Meteor application to subscribe to its document sets and invoke its remote methods.\n * @locus Anywhere\n * @param {String} url The URL of another Meteor application.\n */\nDDP.connect = (url, options) => {\n  const ret = new Connection(url, options);\n  allConnections.push(ret); // hack. see below.\n  return ret;\n};\n\nDDP._reconnectHook = new Hook({ bindEnvironment: false });\n\n/**\n * @summary Register a function to call as the first step of\n * reconnecting. This function can call methods which will be executed before\n * any other outstanding methods. For example, this can be used to re-establish\n * the appropriate authentication context on the connection.\n * @locus Anywhere\n * @param {Function} callback The function to call. It will be called with a\n * single argument, the [connection object](#ddp_connect) that is reconnecting.\n */\nDDP.onReconnect = callback => DDP._reconnectHook.register(callback);\n\n// Hack for `spiderable` package: a way to see if the page is done\n// loading all the data it needs.\n//\nDDP._allSubscriptionsReady = () => allConnections.every(\n  conn => Object.values(conn._subscriptions).every(sub => sub.ready)\n);\n"]},"sourceType":"module","hash":"85333769b17302e8393a2da3c0acc5bd7280771b"}
