{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"C:\\Users\\RUBEN\\Desktop\\meteor-vue\\packages\\matb33:collection-hooks\\update.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser.legacy"},"sourceFileName":"packages/matb33:collection-hooks/update.js","filename":"C:\\Users\\RUBEN\\Desktop\\meteor-vue\\packages\\matb33:collection-hooks\\update.js","targets":{},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"C:\\Users\\RUBEN\\Desktop\\meteor-vue","root":"C:\\Users\\RUBEN\\Desktop\\meteor-vue","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":true,"enforceStrictMode":false,"dynamicImport":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.14.0","helpers":true,"useESModules":false,"corejs":false}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$3","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$4","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"StaticBlock":{"enter":[null]},"TSModuleBlock":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectPattern":{"enter":[null]}},"options":{}},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"ObjectMethod":{"enter":[null],"exit":[null]},"ClassMethod":{"enter":[null],"exit":[null]},"ClassPrivateMethod":{"enter":[null],"exit":[null]},"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"C:\\Users\\RUBEN\\Desktop\\meteor-vue\\packages\\matb33:collection-hooks\\update.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/matb33:collection-hooks/update.js"}},"code":"var _objectSpread;\n\nmodule.link(\"@babel/runtime/helpers/objectSpread2\", {\n  default: function (v) {\n    _objectSpread = v;\n  }\n}, 0);\n\nvar _slicedToArray;\n\nmodule.link(\"@babel/runtime/helpers/slicedToArray\", {\n  default: function (v) {\n    _slicedToArray = v;\n  }\n}, 1);\nvar EJSON;\nmodule.link(\"meteor/ejson\", {\n  EJSON: function (v) {\n    EJSON = v;\n  }\n}, 0);\nvar CollectionHooks;\nmodule.link(\"./collection-hooks\", {\n  CollectionHooks: function (v) {\n    CollectionHooks = v;\n  }\n}, 1);\n\nvar isEmpty = function (a) {\n  return !Array.isArray(a) || !a.length;\n};\n\nCollectionHooks.defineAdvice('update', function (userId, _super, instance, aspects, getTransform, args, suppressAspects) {\n  var _this = this;\n\n  var ctx = {\n    context: this,\n    _super: _super,\n    args: args\n  };\n\n  var _args = _slicedToArray(args, 4),\n      selector = _args[0],\n      mutator = _args[1],\n      options = _args[2],\n      callback = _args[3];\n\n  if (typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n\n  var async = typeof callback === 'function';\n  var docs;\n  var docIds;\n  var fields;\n  var abort;\n  var prev = {};\n\n  if (!suppressAspects) {\n    try {\n      if (!isEmpty(aspects.before) || !isEmpty(aspects.after)) {\n        fields = CollectionHooks.getFields(mutator);\n        docs = CollectionHooks.getDocs.call(this, instance, selector, options).fetch();\n        docIds = docs.map(function (doc) {\n          return doc._id;\n        });\n      } // copy originals for convenience for the 'after' pointcut\n\n\n      if (!isEmpty(aspects.after)) {\n        prev.mutator = EJSON.clone(mutator);\n        prev.options = EJSON.clone(options);\n\n        if (aspects.after.some(function (o) {\n          return o.options.fetchPrevious !== false;\n        }) && CollectionHooks.extendOptions(instance.hookOptions, {}, 'after', 'update').fetchPrevious !== false) {\n          prev.docs = {};\n          docs.forEach(function (doc) {\n            prev.docs[doc._id] = EJSON.clone(doc);\n          });\n        }\n      } // before\n\n\n      aspects.before.forEach(function (o) {\n        docs.forEach(function (doc) {\n          var r = o.aspect.call(_objectSpread({\n            transform: getTransform(doc)\n          }, ctx), userId, doc, fields, mutator, options);\n          if (r === false) abort = true;\n        });\n      });\n      if (abort) return 0;\n    } catch (e) {\n      if (async) return callback.call(this, e);\n      throw e;\n    }\n  }\n\n  var after = function (affected, err) {\n    if (!suppressAspects && !isEmpty(aspects.after)) {\n      var _fields = CollectionHooks.getFields(mutator);\n\n      var _docs = CollectionHooks.getDocs.call(_this, instance, {\n        _id: {\n          $in: docIds\n        }\n      }, options).fetch();\n\n      aspects.after.forEach(function (o) {\n        _docs.forEach(function (doc) {\n          o.aspect.call(_objectSpread({\n            transform: getTransform(doc),\n            previous: prev.docs && prev.docs[doc._id],\n            affected: affected,\n            err: err\n          }, ctx), userId, doc, _fields, prev.mutator, prev.options);\n        });\n      });\n    }\n  };\n\n  if (async) {\n    var wrappedCallback = function (err, affected) {\n      var _callback;\n\n      after(affected, err);\n\n      for (var _len = arguments.length, args = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n        args[_key - 2] = arguments[_key];\n      }\n\n      return (_callback = callback).call.apply(_callback, [this, err, affected].concat(args));\n    };\n\n    return _super.call(this, selector, mutator, options, wrappedCallback);\n  } else {\n    var affected = _super.call(this, selector, mutator, options, callback);\n\n    after(affected);\n    return affected;\n  }\n});","map":{"version":3,"sources":["packages/matb33:collection-hooks/update.js"],"names":["_objectSpread","module","link","default","v","_slicedToArray","EJSON","CollectionHooks","isEmpty","a","Array","isArray","length","defineAdvice","userId","_super","instance","aspects","getTransform","args","suppressAspects","ctx","context","selector","mutator","options","callback","async","docs","docIds","fields","abort","prev","before","after","getFields","getDocs","call","fetch","map","doc","_id","clone","some","o","fetchPrevious","extendOptions","hookOptions","forEach","r","aspect","transform","e","affected","err","$in","previous","wrappedCallback"],"mappings":"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","sourcesContent":["import { EJSON } from 'meteor/ejson'\nimport { CollectionHooks } from './collection-hooks'\n\nconst isEmpty = a => !Array.isArray(a) || !a.length\n\nCollectionHooks.defineAdvice('update', function (userId, _super, instance, aspects, getTransform, args, suppressAspects) {\n  const ctx = { context: this, _super, args }\n  let [selector, mutator, options, callback] = args\n  if (typeof options === 'function') {\n    callback = options\n    options = {}\n  }\n  const async = typeof callback === 'function'\n  let docs\n  let docIds\n  let fields\n  let abort\n  const prev = {}\n\n  if (!suppressAspects) {\n    try {\n      if (!isEmpty(aspects.before) || !isEmpty(aspects.after)) {\n        fields = CollectionHooks.getFields(mutator)\n        docs = CollectionHooks.getDocs.call(this, instance, selector, options).fetch()\n        docIds = docs.map(doc => doc._id)\n      }\n\n      // copy originals for convenience for the 'after' pointcut\n      if (!isEmpty(aspects.after)) {\n        prev.mutator = EJSON.clone(mutator)\n        prev.options = EJSON.clone(options)\n        if (\n          aspects.after.some(o => o.options.fetchPrevious !== false) &&\n          CollectionHooks.extendOptions(instance.hookOptions, {}, 'after', 'update').fetchPrevious !== false\n        ) {\n          prev.docs = {}\n          docs.forEach((doc) => {\n            prev.docs[doc._id] = EJSON.clone(doc)\n          })\n        }\n      }\n\n      // before\n      aspects.before.forEach(function (o) {\n        docs.forEach(function (doc) {\n          const r = o.aspect.call({ transform: getTransform(doc), ...ctx }, userId, doc, fields, mutator, options)\n          if (r === false) abort = true\n        })\n      })\n\n      if (abort) return 0\n    } catch (e) {\n      if (async) return callback.call(this, e)\n      throw e\n    }\n  }\n\n  const after = (affected, err) => {\n    if (!suppressAspects && !isEmpty(aspects.after)) {\n      const fields = CollectionHooks.getFields(mutator)\n      const docs = CollectionHooks.getDocs.call(this, instance, { _id: { $in: docIds } }, options).fetch()\n\n      aspects.after.forEach((o) => {\n        docs.forEach((doc) => {\n          o.aspect.call({\n            transform: getTransform(doc),\n            previous: prev.docs && prev.docs[doc._id],\n            affected,\n            err,\n            ...ctx\n          }, userId, doc, fields, prev.mutator, prev.options)\n        })\n      })\n    }\n  }\n\n  if (async) {\n    const wrappedCallback = function (err, affected, ...args) {\n      after(affected, err)\n      return callback.call(this, err, affected, ...args)\n    }\n    return _super.call(this, selector, mutator, options, wrappedCallback)\n  } else {\n    const affected = _super.call(this, selector, mutator, options, callback)\n    after(affected)\n    return affected\n  }\n})\n"]},"sourceType":"module","hash":"e8b1b99129b6d3c3ea5d58c6ccb2739d77adbd9a"}
