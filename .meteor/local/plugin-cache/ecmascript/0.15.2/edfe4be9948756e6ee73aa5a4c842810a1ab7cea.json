{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"C:\\Users\\RUBEN\\Desktop\\meteor-vue\\packages\\socialize:server-presence\\server-presence.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.windows.x86_64"},"sourceFileName":"packages/socialize:server-presence/server-presence.js","filename":"C:\\Users\\RUBEN\\Desktop\\meteor-vue\\packages\\socialize:server-presence\\server-presence.js","targets":{},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"C:\\Users\\RUBEN\\Desktop\\meteor-vue","root":"C:\\Users\\RUBEN\\Desktop\\meteor-vue","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.14.0","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"C:\\Users\\RUBEN\\Desktop\\meteor-vue\\packages\\socialize:server-presence\\server-presence.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/socialize:server-presence/server-presence.js"}},"code":"module.export({\n  ServerPresence: () => ServerPresence\n});\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet Mongo;\nmodule.link(\"meteor/mongo\", {\n  Mongo(v) {\n    Mongo = v;\n  }\n\n}, 1);\n\n/* eslint-enable import/no-unresolved */\nconst Servers = new Mongo.Collection('presence:servers');\n\nServers._ensureIndex({\n  lastPing: 1\n}, {\n  expireAfterSeconds: 10\n});\n\nServers._ensureIndex({\n  createdAt: -1\n});\n\nlet serverId = null;\nlet isWatcher = false;\nlet observeHandle = null;\nlet exitGracefully = true;\nconst exitFunctions = [];\n/* eslint-disable import/prefer-default-export */\n\nconst ServerPresence = {};\n\nconst insert = () => {\n  const date = new Date();\n  serverId = Servers.insert({\n    lastPing: date,\n    createdAt: date\n  });\n};\n\nconst runCleanupFunctions = removedServerId => {\n  exitFunctions.forEach(exitFunc => {\n    exitFunc(removedServerId);\n  });\n};\n\nconst setAsWatcher = () => {\n  isWatcher = true;\n  Servers.update({\n    _id: serverId\n  }, {\n    $set: {\n      watcher: true\n    }\n  });\n};\n\nconst updateWatcher = () => {\n  const server = Servers.findOne({}, {\n    sort: {\n      createdAt: -1\n    }\n  });\n\n  if (server._id === serverId) {\n    setAsWatcher();\n  }\n};\n\nconst observe = () => {\n  observeHandle = Servers.find().observe({\n    removed(document) {\n      if (document._id === serverId) {\n        if (!isWatcher) {\n          Meteor._debug('Server Presence Timeout', 'The server-presence package has detected inconsistent presence state. To avoid inconsistent database state your application is exiting.');\n\n          exitGracefully = false;\n          process.kill(process.pid, 'SIGHUP');\n        } else {\n          insert();\n        }\n      } else if (isWatcher) {\n        if (!document.graceful) {\n          runCleanupFunctions(document._id);\n        }\n      } else if (document.watcher) {\n        if (!document.graceful) {\n          runCleanupFunctions(document._id);\n        }\n\n        updateWatcher();\n      }\n    }\n\n  });\n};\n\nconst checkForWatcher = () => {\n  const current = Servers.findOne({\n    watcher: true\n  });\n\n  if (current) {\n    return true;\n  }\n\n  setAsWatcher();\n  return false;\n};\n\nconst start = () => {\n  observe();\n  Meteor.setInterval(function serverTick() {\n    Servers.update(serverId, {\n      $set: {\n        lastPing: new Date()\n      }\n    });\n    return true;\n  }, 5000);\n  insert(); // if there isn't any other instance watching and doing cleanup\n  // then we need to do a full cleanup since this is likely the only instance\n\n  if (!checkForWatcher()) {\n    runCleanupFunctions();\n  }\n};\n\nconst exit = () => {\n  // Call all of our externally supplied exit functions\n  runCleanupFunctions(serverId);\n};\n/*\n*  We have to bind the meteor environment here since process event callbacks\n*  run outside fibers\n*/\n\n\nconst stop = Meteor.bindEnvironment(function boundEnvironment() {\n  if (exitGracefully) {\n    Servers.update({\n      _id: serverId\n    }, {\n      $set: {\n        graceful: true\n      }\n    });\n    observeHandle.stop();\n    exit();\n  }\n});\n\nServerPresence.onCleanup = cleanupFunction => {\n  if (typeof cleanupFunction === 'function') {\n    exitFunctions.push(cleanupFunction);\n  } else {\n    throw new Meteor.Error('Not A Function', 'ServerPresence.onCleanup requires function as parameter');\n  }\n};\n\nServerPresence.serverId = () => serverId;\n\nMeteor.startup(() => {\n  start();\n});\n/*\n*  Here we are catching signals due to the fact that node (Maybe it's a Meteor issue?) doesn't\n*  seem to run the exit callbacks except for SIGHUP. Being that SIGTERM is the standard POSIX\n*  signal sent when a system shuts down, it doesn't make much sense to only run out cleanup on\n*  HUP signals.\n*/\n\n['SIGINT', 'SIGHUP', 'SIGTERM'].forEach(sig => {\n  process.once(sig, () => {\n    stop();\n    process.kill(process.pid, sig);\n  });\n});","map":{"version":3,"sources":["packages/socialize:server-presence/server-presence.js"],"names":["module","export","ServerPresence","Meteor","link","v","Mongo","Servers","Collection","_ensureIndex","lastPing","expireAfterSeconds","createdAt","serverId","isWatcher","observeHandle","exitGracefully","exitFunctions","insert","date","Date","runCleanupFunctions","removedServerId","forEach","exitFunc","setAsWatcher","update","_id","$set","watcher","updateWatcher","server","findOne","sort","observe","find","removed","document","_debug","process","kill","pid","graceful","checkForWatcher","current","start","setInterval","serverTick","exit","stop","bindEnvironment","boundEnvironment","onCleanup","cleanupFunction","push","Error","startup","sig","once"],"mappings":"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","sourcesContent":["/* eslint-disable import/no-unresolved */\nimport { Meteor } from 'meteor/meteor';\nimport { Mongo } from 'meteor/mongo';\n/* eslint-enable import/no-unresolved */\n\nconst Servers = new Mongo.Collection('presence:servers');\n\nServers._ensureIndex({ lastPing: 1 }, { expireAfterSeconds: 10 });\nServers._ensureIndex({ createdAt: -1 });\n\nlet serverId = null;\nlet isWatcher = false;\nlet observeHandle = null;\nlet exitGracefully = true;\n\nconst exitFunctions = [];\n\n/* eslint-disable import/prefer-default-export */\nexport const ServerPresence = {};\n\nconst insert = () => {\n    const date = new Date();\n    serverId = Servers.insert({ lastPing: date, createdAt: date });\n};\n\nconst runCleanupFunctions = (removedServerId) => {\n    exitFunctions.forEach((exitFunc) => {\n        exitFunc(removedServerId);\n    });\n};\n\nconst setAsWatcher = () => {\n    isWatcher = true;\n    Servers.update({ _id: serverId }, { $set: { watcher: true } });\n};\n\nconst updateWatcher = () => {\n    const server = Servers.findOne({}, { sort: { createdAt: -1 } });\n    if (server._id === serverId) {\n        setAsWatcher();\n    }\n};\n\nconst observe = () => {\n    observeHandle = Servers.find().observe({\n        removed(document) {\n            if (document._id === serverId) {\n                if (!isWatcher) {\n                    Meteor._debug('Server Presence Timeout', 'The server-presence package has detected inconsistent presence state. To avoid inconsistent database state your application is exiting.');\n                    exitGracefully = false;\n                    process.kill(process.pid, 'SIGHUP');\n                } else {\n                    insert();\n                }\n            } else if (isWatcher) {\n                if (!document.graceful) {\n                    runCleanupFunctions(document._id);\n                }\n            } else if (document.watcher) {\n                if (!document.graceful) {\n                    runCleanupFunctions(document._id);\n                }\n                updateWatcher();\n            }\n        },\n    });\n};\n\nconst checkForWatcher = () => {\n    const current = Servers.findOne({ watcher: true });\n    if (current) {\n        return true;\n    }\n    setAsWatcher();\n    return false;\n};\n\nconst start = () => {\n    observe();\n\n    Meteor.setInterval(function serverTick() {\n        Servers.update(serverId, { $set: { lastPing: new Date() } });\n        return true;\n    }, 5000);\n\n    insert();\n\n    // if there isn't any other instance watching and doing cleanup\n    // then we need to do a full cleanup since this is likely the only instance\n    if (!checkForWatcher()) {\n        runCleanupFunctions();\n    }\n};\n\nconst exit = () => {\n    // Call all of our externally supplied exit functions\n    runCleanupFunctions(serverId);\n};\n\n/*\n*  We have to bind the meteor environment here since process event callbacks\n*  run outside fibers\n*/\nconst stop = Meteor.bindEnvironment(function boundEnvironment() {\n    if (exitGracefully) {\n        Servers.update({ _id: serverId }, { $set: { graceful: true } });\n        observeHandle.stop();\n        exit();\n    }\n});\n\n\nServerPresence.onCleanup = (cleanupFunction) => {\n    if (typeof cleanupFunction === 'function') {\n        exitFunctions.push(cleanupFunction);\n    } else {\n        throw new Meteor.Error('Not A Function', 'ServerPresence.onCleanup requires function as parameter');\n    }\n};\n\nServerPresence.serverId = () => serverId;\n\nMeteor.startup(() => {\n    start();\n});\n\n/*\n*  Here we are catching signals due to the fact that node (Maybe it's a Meteor issue?) doesn't\n*  seem to run the exit callbacks except for SIGHUP. Being that SIGTERM is the standard POSIX\n*  signal sent when a system shuts down, it doesn't make much sense to only run out cleanup on\n*  HUP signals.\n*/\n\n['SIGINT', 'SIGHUP', 'SIGTERM'].forEach((sig) => {\n  process.once(sig, () => {\n    stop();\n    process.kill(process.pid, sig);\n  });\n});\n"]},"sourceType":"module","hash":"edfe4be9948756e6ee73aa5a4c842810a1ab7cea"}
