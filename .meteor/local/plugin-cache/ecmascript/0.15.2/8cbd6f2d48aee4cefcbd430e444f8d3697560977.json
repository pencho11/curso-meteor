{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"C:\\Users\\RUBEN\\Desktop\\meteor-vue\\packages\\htmljs\\html.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"packages/htmljs/html.js","filename":"C:\\Users\\RUBEN\\Desktop\\meteor-vue\\packages\\htmljs\\html.js","targets":{},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"C:\\Users\\RUBEN\\Desktop\\meteor-vue","root":"C:\\Users\\RUBEN\\Desktop\\meteor-vue","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.14.0","helpers":true,"useESModules":false,"corejs":false}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"C:\\Users\\RUBEN\\Desktop\\meteor-vue\\packages\\htmljs\\html.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/htmljs/html.js"}},"code":"module.export({\n  Tag: () => Tag,\n  Attrs: () => Attrs,\n  HTMLTags: () => HTMLTags,\n  getTag: () => getTag,\n  ensureTag: () => ensureTag,\n  isTagEnsured: () => isTagEnsured,\n  getSymbolName: () => getSymbolName,\n  knownHTMLElementNames: () => knownHTMLElementNames,\n  knownSVGElementNames: () => knownSVGElementNames,\n  knownElementNames: () => knownElementNames,\n  voidElementNames: () => voidElementNames,\n  isKnownElement: () => isKnownElement,\n  isKnownSVGElement: () => isKnownSVGElement,\n  isVoidElement: () => isVoidElement,\n  CharRef: () => CharRef,\n  Comment: () => Comment,\n  Raw: () => Raw,\n  isArray: () => isArray,\n  isConstructedObject: () => isConstructedObject,\n  isNully: () => isNully,\n  isValidAttributeName: () => isValidAttributeName,\n  flattenAttributes: () => flattenAttributes\n});\n\nconst Tag = function () {};\n\nTag.prototype.tagName = ''; // this will be set per Tag subclass\n\nTag.prototype.attrs = null;\nTag.prototype.children = Object.freeze ? Object.freeze([]) : [];\nTag.prototype.htmljsType = Tag.htmljsType = ['Tag']; // Given \"p\" create the function `HTML.P`.\n\nvar makeTagConstructor = function (tagName) {\n  // Tag is the per-tagName constructor of a HTML.Tag subclass\n  var HTMLTag = function () {\n    // Work with or without `new`.  If not called with `new`,\n    // perform instantiation by recursively calling this constructor.\n    // We can't pass varargs, so pass no args.\n    var instance = this instanceof Tag ? this : new HTMLTag();\n    var i = 0;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var attrs = args.length && args[0];\n\n    if (attrs && typeof attrs === 'object') {\n      // Treat vanilla JS object as an attributes dictionary.\n      if (!isConstructedObject(attrs)) {\n        instance.attrs = attrs;\n        i++;\n      } else if (attrs instanceof Attrs) {\n        var array = attrs.value;\n\n        if (array.length === 1) {\n          instance.attrs = array[0];\n        } else if (array.length > 1) {\n          instance.attrs = array;\n        }\n\n        i++;\n      }\n    } // If no children, don't create an array at all, use the prototype's\n    // (frozen, empty) array.  This way we don't create an empty array\n    // every time someone creates a tag without `new` and this constructor\n    // calls itself with no arguments (above).\n\n\n    if (i < args.length) instance.children = args.slice(i);\n    return instance;\n  };\n\n  HTMLTag.prototype = new Tag();\n  HTMLTag.prototype.constructor = HTMLTag;\n  HTMLTag.prototype.tagName = tagName;\n  return HTMLTag;\n}; // Not an HTMLjs node, but a wrapper to pass multiple attrs dictionaries\n// to a tag (for the purpose of implementing dynamic attributes).\n\n\nfunction Attrs() {\n  // Work with or without `new`.  If not called with `new`,\n  // perform instantiation by recursively calling this constructor.\n  // We can't pass varargs, so pass no args.\n  var instance = this instanceof Attrs ? this : new Attrs();\n\n  for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n    args[_key2] = arguments[_key2];\n  }\n\n  instance.value = args;\n  return instance;\n}\n\nconst HTMLTags = {};\n\nfunction getTag(tagName) {\n  var symbolName = getSymbolName(tagName);\n  if (symbolName === tagName) // all-caps tagName\n    throw new Error(\"Use the lowercase or camelCase form of '\" + tagName + \"' here\");\n  if (!HTMLTags[symbolName]) HTMLTags[symbolName] = makeTagConstructor(tagName);\n  return HTMLTags[symbolName];\n}\n\nfunction ensureTag(tagName) {\n  getTag(tagName); // don't return it\n}\n\nfunction isTagEnsured(tagName) {\n  return isKnownElement(tagName);\n}\n\nfunction getSymbolName(tagName) {\n  // \"foo-bar\" -> \"FOO_BAR\"\n  return tagName.toUpperCase().replace(/-/g, '_');\n}\n\nconst knownHTMLElementNames = 'a abbr acronym address applet area article aside audio b base basefont bdi bdo big blockquote body br button canvas caption center cite code col colgroup command data datagrid datalist dd del details dfn dir div dl dt em embed eventsource fieldset figcaption figure font footer form frame frameset h1 h2 h3 h4 h5 h6 head header hgroup hr html i iframe img input ins isindex kbd keygen label legend li link main map mark menu meta meter nav noframes noscript object ol optgroup option output p param pre progress q rp rt ruby s samp script section select small source span strike strong style sub summary sup table tbody td textarea tfoot th thead time title tr track tt u ul var video wbr'.split(' ');\nconst knownSVGElementNames = 'altGlyph altGlyphDef altGlyphItem animate animateColor animateMotion animateTransform circle clipPath color-profile cursor defs desc ellipse feBlend feColorMatrix feComponentTransfer feComposite feConvolveMatrix feDiffuseLighting feDisplacementMap feDistantLight feFlood feFuncA feFuncB feFuncG feFuncR feGaussianBlur feImage feMerge feMergeNode feMorphology feOffset fePointLight feSpecularLighting feSpotLight feTile feTurbulence filter font font-face font-face-format font-face-name font-face-src font-face-uri foreignObject g glyph glyphRef hkern image line linearGradient marker mask metadata missing-glyph path pattern polygon polyline radialGradient rect set stop style svg switch symbol text textPath title tref tspan use view vkern'.split(' ');\nconst knownElementNames = knownHTMLElementNames.concat(knownSVGElementNames);\nconst voidElementNames = 'area base br col command embed hr img input keygen link meta param source track wbr'.split(' ');\nvar voidElementSet = new Set(voidElementNames);\nvar knownElementSet = new Set(knownElementNames);\nvar knownSVGElementSet = new Set(knownSVGElementNames);\n\nfunction isKnownElement(tagName) {\n  return knownElementSet.has(tagName);\n}\n\nfunction isKnownSVGElement(tagName) {\n  return knownSVGElementSet.has(tagName);\n}\n\nfunction isVoidElement(tagName) {\n  return voidElementSet.has(tagName);\n}\n\n// Ensure tags for all known elements\nknownElementNames.forEach(ensureTag);\n\nfunction CharRef(attrs) {\n  if (!(this instanceof CharRef)) // called without `new`\n    return new CharRef(attrs);\n  if (!(attrs && attrs.html && attrs.str)) throw new Error(\"HTML.CharRef must be constructed with ({html:..., str:...})\");\n  this.html = attrs.html;\n  this.str = attrs.str;\n}\n\nCharRef.prototype.htmljsType = CharRef.htmljsType = ['CharRef'];\n\nfunction Comment(value) {\n  if (!(this instanceof Comment)) // called without `new`\n    return new Comment(value);\n  if (typeof value !== 'string') throw new Error('HTML.Comment must be constructed with a string');\n  this.value = value; // Kill illegal hyphens in comment value (no way to escape them in HTML)\n\n  this.sanitizedValue = value.replace(/^-|--+|-$/g, '');\n}\n\nComment.prototype.htmljsType = Comment.htmljsType = ['Comment'];\n\nfunction Raw(value) {\n  if (!(this instanceof Raw)) // called without `new`\n    return new Raw(value);\n  if (typeof value !== 'string') throw new Error('HTML.Raw must be constructed with a string');\n  this.value = value;\n}\n\nRaw.prototype.htmljsType = Raw.htmljsType = ['Raw'];\n\nfunction isArray(x) {\n  return x instanceof Array || Array.isArray(x);\n}\n\nfunction isConstructedObject(x) {\n  // Figure out if `x` is \"an instance of some class\" or just a plain\n  // object literal.  It correctly treats an object literal like\n  // `{ constructor: ... }` as an object literal.  It won't detect\n  // instances of classes that lack a `constructor` property (e.g.\n  // if you assign to a prototype when setting up the class as in:\n  // `Foo = function () { ... }; Foo.prototype = { ... }`, then\n  // `(new Foo).constructor` is `Object`, not `Foo`).\n  if (!x || typeof x !== 'object') return false; // Is this a plain object?\n\n  let plain = false;\n\n  if (Object.getPrototypeOf(x) === null) {\n    plain = true;\n  } else {\n    let proto = x;\n\n    while (Object.getPrototypeOf(proto) !== null) {\n      proto = Object.getPrototypeOf(proto);\n    }\n\n    plain = Object.getPrototypeOf(x) === proto;\n  }\n\n  return !plain && typeof x.constructor === 'function' && x instanceof x.constructor;\n}\n\nfunction isNully(node) {\n  if (node == null) // null or undefined\n    return true;\n\n  if (isArray(node)) {\n    // is it an empty array or an array of all nully items?\n    for (var i = 0; i < node.length; i++) if (!isNully(node[i])) return false;\n\n    return true;\n  }\n\n  return false;\n}\n\nfunction isValidAttributeName(name) {\n  return /^[:_A-Za-z][:_A-Za-z0-9.\\-]*/.test(name);\n}\n\nfunction flattenAttributes(attrs) {\n  if (!attrs) return attrs;\n  var isList = isArray(attrs);\n  if (isList && attrs.length === 0) return null;\n  var result = {};\n\n  for (var i = 0, N = isList ? attrs.length : 1; i < N; i++) {\n    var oneAttrs = isList ? attrs[i] : attrs;\n    if (typeof oneAttrs !== 'object' || isConstructedObject(oneAttrs)) throw new Error(\"Expected plain JS object as attrs, found: \" + oneAttrs);\n\n    for (var name in oneAttrs) {\n      if (!isValidAttributeName(name)) throw new Error(\"Illegal HTML attribute name: \" + name);\n      var value = oneAttrs[name];\n      if (!isNully(value)) result[name] = value;\n    }\n  }\n\n  return result;\n}","map":{"version":3,"sources":["packages/htmljs/html.js"],"names":["module","export","Tag","Attrs","HTMLTags","getTag","ensureTag","isTagEnsured","getSymbolName","knownHTMLElementNames","knownSVGElementNames","knownElementNames","voidElementNames","isKnownElement","isKnownSVGElement","isVoidElement","CharRef","Comment","Raw","isArray","isConstructedObject","isNully","isValidAttributeName","flattenAttributes","prototype","tagName","attrs","children","Object","freeze","htmljsType","makeTagConstructor","HTMLTag","instance","i","args","length","array","value","slice","constructor","symbolName","Error","toUpperCase","replace","split","concat","voidElementSet","Set","knownElementSet","knownSVGElementSet","has","forEach","html","str","sanitizedValue","x","Array","plain","getPrototypeOf","proto","node","name","test","isList","result","N","oneAttrs"],"mappings":"AAAAA,MAAM,CAACC,MAAP,CAAc;AAACC,EAAAA,GAAG,EAAC,MAAIA,GAAT;AAAaC,EAAAA,KAAK,EAAC,MAAIA,KAAvB;AAA6BC,EAAAA,QAAQ,EAAC,MAAIA,QAA1C;AAAmDC,EAAAA,MAAM,EAAC,MAAIA,MAA9D;AAAqEC,EAAAA,SAAS,EAAC,MAAIA,SAAnF;AAA6FC,EAAAA,YAAY,EAAC,MAAIA,YAA9G;AAA2HC,EAAAA,aAAa,EAAC,MAAIA,aAA7I;AAA2JC,EAAAA,qBAAqB,EAAC,MAAIA,qBAArL;AAA2MC,EAAAA,oBAAoB,EAAC,MAAIA,oBAApO;AAAyPC,EAAAA,iBAAiB,EAAC,MAAIA,iBAA/Q;AAAiSC,EAAAA,gBAAgB,EAAC,MAAIA,gBAAtT;AAAuUC,EAAAA,cAAc,EAAC,MAAIA,cAA1V;AAAyWC,EAAAA,iBAAiB,EAAC,MAAIA,iBAA/X;AAAiZC,EAAAA,aAAa,EAAC,MAAIA,aAAna;AAAibC,EAAAA,OAAO,EAAC,MAAIA,OAA7b;AAAqcC,EAAAA,OAAO,EAAC,MAAIA,OAAjd;AAAydC,EAAAA,GAAG,EAAC,MAAIA,GAAje;AAAqeC,EAAAA,OAAO,EAAC,MAAIA,OAAjf;AAAyfC,EAAAA,mBAAmB,EAAC,MAAIA,mBAAjhB;AAAqiBC,EAAAA,OAAO,EAAC,MAAIA,OAAjjB;AAAyjBC,EAAAA,oBAAoB,EAAC,MAAIA,oBAAllB;AAAumBC,EAAAA,iBAAiB,EAAC,MAAIA;AAA7nB,CAAd;;AACO,MAAMrB,GAAG,GAAG,YAAY,CAAE,CAA1B;;AACPA,GAAG,CAACsB,SAAJ,CAAcC,OAAd,GAAwB,EAAxB,C,CAA4B;;AAC5BvB,GAAG,CAACsB,SAAJ,CAAcE,KAAd,GAAsB,IAAtB;AACAxB,GAAG,CAACsB,SAAJ,CAAcG,QAAd,GAAyBC,MAAM,CAACC,MAAP,GAAgBD,MAAM,CAACC,MAAP,CAAc,EAAd,CAAhB,GAAoC,EAA7D;AACA3B,GAAG,CAACsB,SAAJ,CAAcM,UAAd,GAA2B5B,GAAG,CAAC4B,UAAJ,GAAiB,CAAC,KAAD,CAA5C,C,CAEA;;AACA,IAAIC,kBAAkB,GAAG,UAAUN,OAAV,EAAmB;AAC1C;AACA,MAAIO,OAAO,GAAG,YAAmB;AAC/B;AACA;AACA;AACA,QAAIC,QAAQ,GAAI,gBAAgB/B,GAAjB,GAAwB,IAAxB,GAA+B,IAAI8B,OAAJ,EAA9C;AAEA,QAAIE,CAAC,GAAG,CAAR;;AAN+B,sCAANC,IAAM;AAANA,MAAAA,IAAM;AAAA;;AAO/B,QAAIT,KAAK,GAAGS,IAAI,CAACC,MAAL,IAAeD,IAAI,CAAC,CAAD,CAA/B;;AACA,QAAIT,KAAK,IAAK,OAAOA,KAAP,KAAiB,QAA/B,EAA0C;AACxC;AACA,UAAI,CAAEN,mBAAmB,CAACM,KAAD,CAAzB,EAAkC;AAChCO,QAAAA,QAAQ,CAACP,KAAT,GAAiBA,KAAjB;AACAQ,QAAAA,CAAC;AACF,OAHD,MAGO,IAAIR,KAAK,YAAYvB,KAArB,EAA4B;AACjC,YAAIkC,KAAK,GAAGX,KAAK,CAACY,KAAlB;;AACA,YAAID,KAAK,CAACD,MAAN,KAAiB,CAArB,EAAwB;AACtBH,UAAAA,QAAQ,CAACP,KAAT,GAAiBW,KAAK,CAAC,CAAD,CAAtB;AACD,SAFD,MAEO,IAAIA,KAAK,CAACD,MAAN,GAAe,CAAnB,EAAsB;AAC3BH,UAAAA,QAAQ,CAACP,KAAT,GAAiBW,KAAjB;AACD;;AACDH,QAAAA,CAAC;AACF;AACF,KAtB8B,CAyB/B;AACA;AACA;AACA;;;AACA,QAAIA,CAAC,GAAGC,IAAI,CAACC,MAAb,EACEH,QAAQ,CAACN,QAAT,GAAoBQ,IAAI,CAACI,KAAL,CAAWL,CAAX,CAApB;AAEF,WAAOD,QAAP;AACD,GAjCD;;AAkCAD,EAAAA,OAAO,CAACR,SAAR,GAAoB,IAAItB,GAAJ,EAApB;AACA8B,EAAAA,OAAO,CAACR,SAAR,CAAkBgB,WAAlB,GAAgCR,OAAhC;AACAA,EAAAA,OAAO,CAACR,SAAR,CAAkBC,OAAlB,GAA4BA,OAA5B;AAEA,SAAOO,OAAP;AACD,CAzCD,C,CA2CA;AACA;;;AACO,SAAS7B,KAAT,GAAwB;AAC7B;AACA;AACA;AACA,MAAI8B,QAAQ,GAAI,gBAAgB9B,KAAjB,GAA0B,IAA1B,GAAiC,IAAIA,KAAJ,EAAhD;;AAJ6B,qCAANgC,IAAM;AAANA,IAAAA,IAAM;AAAA;;AAM7BF,EAAAA,QAAQ,CAACK,KAAT,GAAiBH,IAAjB;AAEA,SAAOF,QAAP;AACD;;AAGM,MAAM7B,QAAQ,GAAG,EAAjB;;AAEA,SAASC,MAAT,CAAiBoB,OAAjB,EAA0B;AAC/B,MAAIgB,UAAU,GAAGjC,aAAa,CAACiB,OAAD,CAA9B;AACA,MAAIgB,UAAU,KAAKhB,OAAnB,EAA4B;AAC1B,UAAM,IAAIiB,KAAJ,CAAU,6CAA6CjB,OAA7C,GAAuD,QAAjE,CAAN;AAEF,MAAI,CAAErB,QAAQ,CAACqC,UAAD,CAAd,EACErC,QAAQ,CAACqC,UAAD,CAAR,GAAuBV,kBAAkB,CAACN,OAAD,CAAzC;AAEF,SAAOrB,QAAQ,CAACqC,UAAD,CAAf;AACD;;AAEM,SAASnC,SAAT,CAAmBmB,OAAnB,EAA4B;AACjCpB,EAAAA,MAAM,CAACoB,OAAD,CAAN,CADiC,CAChB;AAClB;;AAEM,SAASlB,YAAT,CAAuBkB,OAAvB,EAAgC;AACrC,SAAOZ,cAAc,CAACY,OAAD,CAArB;AACD;;AAEM,SAASjB,aAAT,CAAwBiB,OAAxB,EAAiC;AACtC;AACA,SAAOA,OAAO,CAACkB,WAAR,GAAsBC,OAAtB,CAA8B,IAA9B,EAAoC,GAApC,CAAP;AACD;;AAEM,MAAMnC,qBAAqB,GAAG,mrBAAmrBoC,KAAnrB,CAAyrB,GAAzrB,CAA9B;AAGA,MAAMnC,oBAAoB,GAAG,uuBAAuuBmC,KAAvuB,CAA6uB,GAA7uB,CAA7B;AAEA,MAAMlC,iBAAiB,GAAGF,qBAAqB,CAACqC,MAAtB,CAA6BpC,oBAA7B,CAA1B;AAEA,MAAME,gBAAgB,GAAG,sFAAsFiC,KAAtF,CAA4F,GAA5F,CAAzB;AAGP,IAAIE,cAAc,GAAG,IAAIC,GAAJ,CAAQpC,gBAAR,CAArB;AACA,IAAIqC,eAAe,GAAG,IAAID,GAAJ,CAAQrC,iBAAR,CAAtB;AACA,IAAIuC,kBAAkB,GAAG,IAAIF,GAAJ,CAAQtC,oBAAR,CAAzB;;AAEO,SAASG,cAAT,CAAwBY,OAAxB,EAAiC;AACtC,SAAOwB,eAAe,CAACE,GAAhB,CAAoB1B,OAApB,CAAP;AACD;;AAEM,SAASX,iBAAT,CAA2BW,OAA3B,EAAoC;AACzC,SAAOyB,kBAAkB,CAACC,GAAnB,CAAuB1B,OAAvB,CAAP;AACD;;AAEM,SAASV,aAAT,CAAuBU,OAAvB,EAAgC;AACrC,SAAOsB,cAAc,CAACI,GAAf,CAAmB1B,OAAnB,CAAP;AACD;;AAGD;AACAd,iBAAiB,CAACyC,OAAlB,CAA0B9C,SAA1B;;AAGO,SAASU,OAAT,CAAiBU,KAAjB,EAAwB;AAC7B,MAAI,EAAG,gBAAgBV,OAAnB,CAAJ,EACE;AACA,WAAO,IAAIA,OAAJ,CAAYU,KAAZ,CAAP;AAEF,MAAI,EAAGA,KAAK,IAAIA,KAAK,CAAC2B,IAAf,IAAuB3B,KAAK,CAAC4B,GAAhC,CAAJ,EACE,MAAM,IAAIZ,KAAJ,CACJ,6DADI,CAAN;AAGF,OAAKW,IAAL,GAAY3B,KAAK,CAAC2B,IAAlB;AACA,OAAKC,GAAL,GAAW5B,KAAK,CAAC4B,GAAjB;AACD;;AACDtC,OAAO,CAACQ,SAAR,CAAkBM,UAAlB,GAA+Bd,OAAO,CAACc,UAAR,GAAqB,CAAC,SAAD,CAApD;;AAEO,SAASb,OAAT,CAAiBqB,KAAjB,EAAwB;AAC7B,MAAI,EAAG,gBAAgBrB,OAAnB,CAAJ,EACE;AACA,WAAO,IAAIA,OAAJ,CAAYqB,KAAZ,CAAP;AAEF,MAAI,OAAOA,KAAP,KAAiB,QAArB,EACE,MAAM,IAAII,KAAJ,CAAU,gDAAV,CAAN;AAEF,OAAKJ,KAAL,GAAaA,KAAb,CAR6B,CAS7B;;AACA,OAAKiB,cAAL,GAAsBjB,KAAK,CAACM,OAAN,CAAc,YAAd,EAA4B,EAA5B,CAAtB;AACD;;AACD3B,OAAO,CAACO,SAAR,CAAkBM,UAAlB,GAA+Bb,OAAO,CAACa,UAAR,GAAqB,CAAC,SAAD,CAApD;;AAEO,SAASZ,GAAT,CAAaoB,KAAb,EAAoB;AACzB,MAAI,EAAG,gBAAgBpB,GAAnB,CAAJ,EACE;AACA,WAAO,IAAIA,GAAJ,CAAQoB,KAAR,CAAP;AAEF,MAAI,OAAOA,KAAP,KAAiB,QAArB,EACE,MAAM,IAAII,KAAJ,CAAU,4CAAV,CAAN;AAEF,OAAKJ,KAAL,GAAaA,KAAb;AACD;;AACDpB,GAAG,CAACM,SAAJ,CAAcM,UAAd,GAA2BZ,GAAG,CAACY,UAAJ,GAAiB,CAAC,KAAD,CAA5C;;AAGO,SAASX,OAAT,CAAkBqC,CAAlB,EAAqB;AAC1B,SAAOA,CAAC,YAAYC,KAAb,IAAsBA,KAAK,CAACtC,OAAN,CAAcqC,CAAd,CAA7B;AACD;;AAEM,SAASpC,mBAAT,CAA8BoC,CAA9B,EAAiC;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAG,CAACA,CAAD,IAAO,OAAOA,CAAP,KAAa,QAAvB,EAAkC,OAAO,KAAP,CARI,CAStC;;AACA,MAAIE,KAAK,GAAG,KAAZ;;AACA,MAAG9B,MAAM,CAAC+B,cAAP,CAAsBH,CAAtB,MAA6B,IAAhC,EAAsC;AACpCE,IAAAA,KAAK,GAAG,IAAR;AACD,GAFD,MAEO;AACL,QAAIE,KAAK,GAAGJ,CAAZ;;AACA,WAAM5B,MAAM,CAAC+B,cAAP,CAAsBC,KAAtB,MAAiC,IAAvC,EAA6C;AAC3CA,MAAAA,KAAK,GAAGhC,MAAM,CAAC+B,cAAP,CAAsBC,KAAtB,CAAR;AACD;;AACDF,IAAAA,KAAK,GAAG9B,MAAM,CAAC+B,cAAP,CAAsBH,CAAtB,MAA6BI,KAArC;AACD;;AAED,SAAO,CAACF,KAAD,IACJ,OAAOF,CAAC,CAAChB,WAAT,KAAyB,UADrB,IAEJgB,CAAC,YAAYA,CAAC,CAAChB,WAFlB;AAGD;;AAEM,SAASnB,OAAT,CAAkBwC,IAAlB,EAAwB;AAC7B,MAAIA,IAAI,IAAI,IAAZ,EACE;AACA,WAAO,IAAP;;AAEF,MAAI1C,OAAO,CAAC0C,IAAD,CAAX,EAAmB;AACjB;AACA,SAAK,IAAI3B,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG2B,IAAI,CAACzB,MAAzB,EAAiCF,CAAC,EAAlC,EACE,IAAI,CAAEb,OAAO,CAACwC,IAAI,CAAC3B,CAAD,CAAL,CAAb,EACE,OAAO,KAAP;;AACJ,WAAO,IAAP;AACD;;AAED,SAAO,KAAP;AACD;;AAEM,SAASZ,oBAAT,CAA+BwC,IAA/B,EAAqC;AAC1C,SAAO,+BAA+BC,IAA/B,CAAoCD,IAApC,CAAP;AACD;;AAIM,SAASvC,iBAAT,CAA4BG,KAA5B,EAAmC;AACxC,MAAI,CAAEA,KAAN,EACE,OAAOA,KAAP;AAEF,MAAIsC,MAAM,GAAG7C,OAAO,CAACO,KAAD,CAApB;AACA,MAAIsC,MAAM,IAAItC,KAAK,CAACU,MAAN,KAAiB,CAA/B,EACE,OAAO,IAAP;AAEF,MAAI6B,MAAM,GAAG,EAAb;;AACA,OAAK,IAAI/B,CAAC,GAAG,CAAR,EAAWgC,CAAC,GAAIF,MAAM,GAAGtC,KAAK,CAACU,MAAT,GAAkB,CAA7C,EAAiDF,CAAC,GAAGgC,CAArD,EAAwDhC,CAAC,EAAzD,EAA6D;AAC3D,QAAIiC,QAAQ,GAAIH,MAAM,GAAGtC,KAAK,CAACQ,CAAD,CAAR,GAAcR,KAApC;AACA,QAAK,OAAOyC,QAAP,KAAoB,QAArB,IACA/C,mBAAmB,CAAC+C,QAAD,CADvB,EAEE,MAAM,IAAIzB,KAAJ,CAAU,+CAA+CyB,QAAzD,CAAN;;AACF,SAAK,IAAIL,IAAT,IAAiBK,QAAjB,EAA2B;AACzB,UAAI,CAAE7C,oBAAoB,CAACwC,IAAD,CAA1B,EACE,MAAM,IAAIpB,KAAJ,CAAU,kCAAkCoB,IAA5C,CAAN;AACF,UAAIxB,KAAK,GAAG6B,QAAQ,CAACL,IAAD,CAApB;AACA,UAAI,CAAEzC,OAAO,CAACiB,KAAD,CAAb,EACE2B,MAAM,CAACH,IAAD,CAAN,GAAexB,KAAf;AACH;AACF;;AAED,SAAO2B,MAAP;AACD","sourcesContent":["\nexport const Tag = function () {};\nTag.prototype.tagName = ''; // this will be set per Tag subclass\nTag.prototype.attrs = null;\nTag.prototype.children = Object.freeze ? Object.freeze([]) : [];\nTag.prototype.htmljsType = Tag.htmljsType = ['Tag'];\n\n// Given \"p\" create the function `HTML.P`.\nvar makeTagConstructor = function (tagName) {\n  // Tag is the per-tagName constructor of a HTML.Tag subclass\n  var HTMLTag = function (...args) {\n    // Work with or without `new`.  If not called with `new`,\n    // perform instantiation by recursively calling this constructor.\n    // We can't pass varargs, so pass no args.\n    var instance = (this instanceof Tag) ? this : new HTMLTag;\n\n    var i = 0;\n    var attrs = args.length && args[0];\n    if (attrs && (typeof attrs === 'object')) {\n      // Treat vanilla JS object as an attributes dictionary.\n      if (! isConstructedObject(attrs)) {\n        instance.attrs = attrs;\n        i++;\n      } else if (attrs instanceof Attrs) {\n        var array = attrs.value;\n        if (array.length === 1) {\n          instance.attrs = array[0];\n        } else if (array.length > 1) {\n          instance.attrs = array;\n        }\n        i++;\n      }\n    }\n\n\n    // If no children, don't create an array at all, use the prototype's\n    // (frozen, empty) array.  This way we don't create an empty array\n    // every time someone creates a tag without `new` and this constructor\n    // calls itself with no arguments (above).\n    if (i < args.length)\n      instance.children = args.slice(i);\n\n    return instance;\n  };\n  HTMLTag.prototype = new Tag;\n  HTMLTag.prototype.constructor = HTMLTag;\n  HTMLTag.prototype.tagName = tagName;\n\n  return HTMLTag;\n};\n\n// Not an HTMLjs node, but a wrapper to pass multiple attrs dictionaries\n// to a tag (for the purpose of implementing dynamic attributes).\nexport function Attrs(...args) {\n  // Work with or without `new`.  If not called with `new`,\n  // perform instantiation by recursively calling this constructor.\n  // We can't pass varargs, so pass no args.\n  var instance = (this instanceof Attrs) ? this : new Attrs;\n\n  instance.value = args;\n\n  return instance;\n}\n\n////////////////////////////// KNOWN ELEMENTS\nexport const HTMLTags = {};\n\nexport function getTag (tagName) {\n  var symbolName = getSymbolName(tagName);\n  if (symbolName === tagName) // all-caps tagName\n    throw new Error(\"Use the lowercase or camelCase form of '\" + tagName + \"' here\");\n\n  if (! HTMLTags[symbolName])\n    HTMLTags[symbolName] = makeTagConstructor(tagName);\n\n  return HTMLTags[symbolName];\n}\n\nexport function ensureTag(tagName) {\n  getTag(tagName); // don't return it\n}\n\nexport function isTagEnsured (tagName) {\n  return isKnownElement(tagName);\n}\n\nexport function getSymbolName (tagName) {\n  // \"foo-bar\" -> \"FOO_BAR\"\n  return tagName.toUpperCase().replace(/-/g, '_');\n}\n\nexport const knownHTMLElementNames = 'a abbr acronym address applet area article aside audio b base basefont bdi bdo big blockquote body br button canvas caption center cite code col colgroup command data datagrid datalist dd del details dfn dir div dl dt em embed eventsource fieldset figcaption figure font footer form frame frameset h1 h2 h3 h4 h5 h6 head header hgroup hr html i iframe img input ins isindex kbd keygen label legend li link main map mark menu meta meter nav noframes noscript object ol optgroup option output p param pre progress q rp rt ruby s samp script section select small source span strike strong style sub summary sup table tbody td textarea tfoot th thead time title tr track tt u ul var video wbr'.split(' ');\n// (we add the SVG ones below)\n\nexport const knownSVGElementNames = 'altGlyph altGlyphDef altGlyphItem animate animateColor animateMotion animateTransform circle clipPath color-profile cursor defs desc ellipse feBlend feColorMatrix feComponentTransfer feComposite feConvolveMatrix feDiffuseLighting feDisplacementMap feDistantLight feFlood feFuncA feFuncB feFuncG feFuncR feGaussianBlur feImage feMerge feMergeNode feMorphology feOffset fePointLight feSpecularLighting feSpotLight feTile feTurbulence filter font font-face font-face-format font-face-name font-face-src font-face-uri foreignObject g glyph glyphRef hkern image line linearGradient marker mask metadata missing-glyph path pattern polygon polyline radialGradient rect set stop style svg switch symbol text textPath title tref tspan use view vkern'.split(' ');\n// Append SVG element names to list of known element names\nexport const knownElementNames = knownHTMLElementNames.concat(knownSVGElementNames);\n\nexport const voidElementNames = 'area base br col command embed hr img input keygen link meta param source track wbr'.split(' ');\n\n\nvar voidElementSet = new Set(voidElementNames);\nvar knownElementSet = new Set(knownElementNames);\nvar knownSVGElementSet = new Set(knownSVGElementNames);\n\nexport function isKnownElement(tagName) {\n  return knownElementSet.has(tagName);\n}\n\nexport function isKnownSVGElement(tagName) {\n  return knownSVGElementSet.has(tagName);\n}\n\nexport function isVoidElement(tagName) {\n  return voidElementSet.has(tagName);\n}\n\n\n// Ensure tags for all known elements\nknownElementNames.forEach(ensureTag);\n\n\nexport function CharRef(attrs) {\n  if (! (this instanceof CharRef))\n    // called without `new`\n    return new CharRef(attrs);\n\n  if (! (attrs && attrs.html && attrs.str))\n    throw new Error(\n      \"HTML.CharRef must be constructed with ({html:..., str:...})\");\n\n  this.html = attrs.html;\n  this.str = attrs.str;\n}\nCharRef.prototype.htmljsType = CharRef.htmljsType = ['CharRef'];\n\nexport function Comment(value) {\n  if (! (this instanceof Comment))\n    // called without `new`\n    return new Comment(value);\n\n  if (typeof value !== 'string')\n    throw new Error('HTML.Comment must be constructed with a string');\n\n  this.value = value;\n  // Kill illegal hyphens in comment value (no way to escape them in HTML)\n  this.sanitizedValue = value.replace(/^-|--+|-$/g, '');\n}\nComment.prototype.htmljsType = Comment.htmljsType = ['Comment'];\n\nexport function Raw(value) {\n  if (! (this instanceof Raw))\n    // called without `new`\n    return new Raw(value);\n\n  if (typeof value !== 'string')\n    throw new Error('HTML.Raw must be constructed with a string');\n\n  this.value = value;\n}\nRaw.prototype.htmljsType = Raw.htmljsType = ['Raw'];\n\n\nexport function isArray (x) {\n  return x instanceof Array || Array.isArray(x);\n}\n\nexport function isConstructedObject (x) {\n  // Figure out if `x` is \"an instance of some class\" or just a plain\n  // object literal.  It correctly treats an object literal like\n  // `{ constructor: ... }` as an object literal.  It won't detect\n  // instances of classes that lack a `constructor` property (e.g.\n  // if you assign to a prototype when setting up the class as in:\n  // `Foo = function () { ... }; Foo.prototype = { ... }`, then\n  // `(new Foo).constructor` is `Object`, not `Foo`).\n  if(!x || (typeof x !== 'object')) return false;\n  // Is this a plain object?\n  let plain = false;\n  if(Object.getPrototypeOf(x) === null) {\n    plain = true;\n  } else {\n    let proto = x;\n    while(Object.getPrototypeOf(proto) !== null) {\n      proto = Object.getPrototypeOf(proto);\n    }\n    plain = Object.getPrototypeOf(x) === proto;\n  }\n\n  return !plain &&\n    (typeof x.constructor === 'function') &&\n    (x instanceof x.constructor);\n}\n\nexport function isNully (node) {\n  if (node == null)\n    // null or undefined\n    return true;\n\n  if (isArray(node)) {\n    // is it an empty array or an array of all nully items?\n    for (var i = 0; i < node.length; i++)\n      if (! isNully(node[i]))\n        return false;\n    return true;\n  }\n\n  return false;\n}\n\nexport function isValidAttributeName (name) {\n  return /^[:_A-Za-z][:_A-Za-z0-9.\\-]*/.test(name);\n}\n\n// If `attrs` is an array of attributes dictionaries, combines them\n// into one.  Removes attributes that are \"nully.\"\nexport function flattenAttributes (attrs) {\n  if (! attrs)\n    return attrs;\n\n  var isList = isArray(attrs);\n  if (isList && attrs.length === 0)\n    return null;\n\n  var result = {};\n  for (var i = 0, N = (isList ? attrs.length : 1); i < N; i++) {\n    var oneAttrs = (isList ? attrs[i] : attrs);\n    if ((typeof oneAttrs !== 'object') ||\n        isConstructedObject(oneAttrs))\n      throw new Error(\"Expected plain JS object as attrs, found: \" + oneAttrs);\n    for (var name in oneAttrs) {\n      if (! isValidAttributeName(name))\n        throw new Error(\"Illegal HTML attribute name: \" + name);\n      var value = oneAttrs[name];\n      if (! isNully(value))\n        result[name] = value;\n    }\n  }\n\n  return result;\n}\n"]},"sourceType":"module","hash":"8cbd6f2d48aee4cefcbd430e444f8d3697560977"}
