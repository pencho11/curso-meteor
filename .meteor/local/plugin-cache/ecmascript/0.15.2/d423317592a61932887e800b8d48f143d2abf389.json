{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"C:\\Users\\RUBEN\\Desktop\\meteor-vue\\packages\\socialize:linkable-model\\common\\linkable-model.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.windows.x86_64"},"sourceFileName":"packages/socialize:linkable-model/common/linkable-model.js","filename":"C:\\Users\\RUBEN\\Desktop\\meteor-vue\\packages\\socialize:linkable-model\\common\\linkable-model.js","targets":{},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"C:\\Users\\RUBEN\\Desktop\\meteor-vue","root":"C:\\Users\\RUBEN\\Desktop\\meteor-vue","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.14.0","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"C:\\Users\\RUBEN\\Desktop\\meteor-vue\\packages\\socialize:linkable-model\\common\\linkable-model.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/socialize:linkable-model/common/linkable-model.js"}},"code":"let SimpleSchema;\nmodule.link(\"simpl-schema\", {\n  default(v) {\n    SimpleSchema = v;\n  }\n\n}, 0);\nmodule.exportDefault(() => {\n  // a place to store references to the collections where the commentable objects are stored.\n  const LinkableTypes = {};\n  /**\n  * A scaffold for creating models which can link records from one collection to records from many other collections\n  * @mixin LinkableModel\n  */\n\n  const LinkableModel = Base => class extends Base {\n    /**\n    * getCollectionForParentLink - Get the collection for the ParentLink\n    *\n    * @return {Mongo.Collection} The Collection attached to the ParentLink\n    */\n    getCollectionForParentLink() {\n      return LinkableTypes[this.objectType];\n    }\n    /**\n    * linkedObject - Get the model for the linked record\n    *\n    * @return {Model}  A model of varying types depending on the linked objects type\n    */\n\n\n    linkedParent() {\n      const collection = this.getCollectionForParentLink();\n      return collection.findOne({\n        _id: this.linkedObjectId\n      });\n    }\n\n  };\n  /**\n  * Register a data type that can be linked to another model, storing its collection so we can find the object later\n  * @param {BaseModel}           type       The name of the type\n  * @param {Mongo.Collection} collection The collection where the type of data is stored\n  */\n\n\n  LinkableModel.registerParentModel = function registerParentModel(model) {\n    const type = model.prototype.getCollectionName();\n    model.prototype._objectType = type; // eslint-disable-line\n\n    LinkableTypes[type] = model.prototype.getCollection();\n  };\n\n  LinkableModel.LinkableSchema = new SimpleSchema({\n    linkedObjectId: {\n      type: String,\n      regEx: SimpleSchema.RegEx.Id,\n      index: 1\n    },\n    objectType: {\n      type: String,\n      denyUpdate: true\n    }\n  });\n  return LinkableModel;\n});","map":{"version":3,"sources":["packages/socialize:linkable-model/common/linkable-model.js"],"names":["SimpleSchema","module","link","default","v","exportDefault","LinkableTypes","LinkableModel","Base","getCollectionForParentLink","objectType","linkedParent","collection","findOne","_id","linkedObjectId","registerParentModel","model","type","prototype","getCollectionName","_objectType","getCollection","LinkableSchema","String","regEx","RegEx","Id","index","denyUpdate"],"mappings":"AAAA,IAAIA,YAAJ;AAAiBC,MAAM,CAACC,IAAP,CAAY,cAAZ,EAA2B;AAACC,EAAAA,OAAO,CAACC,CAAD,EAAG;AAACJ,IAAAA,YAAY,GAACI,CAAb;AAAe;;AAA3B,CAA3B,EAAwD,CAAxD;AAAjBH,MAAM,CAACI,aAAP,CAIe,MAAM;AACjB;AACA,QAAMC,aAAa,GAAG,EAAtB;AAEA;AACJ;AACA;AACA;;AACI,QAAMC,aAAa,GAAGC,IAAI,IAAI,cAAcA,IAAd,CAAmB;AAC7C;AACR;AACA;AACA;AACA;AACQC,IAAAA,0BAA0B,GAAG;AACzB,aAAOH,aAAa,CAAC,KAAKI,UAAN,CAApB;AACH;AACD;AACR;AACA;AACA;AACA;;;AACQC,IAAAA,YAAY,GAAG;AACX,YAAMC,UAAU,GAAG,KAAKH,0BAAL,EAAnB;AACA,aAAOG,UAAU,CAACC,OAAX,CAAmB;AAAEC,QAAAA,GAAG,EAAE,KAAKC;AAAZ,OAAnB,CAAP;AACH;;AAjB4C,GAAjD;AAoBA;AACJ;AACA;AACA;AACA;;;AACIR,EAAAA,aAAa,CAACS,mBAAd,GAAoC,SAASA,mBAAT,CAA6BC,KAA7B,EAAoC;AACpE,UAAMC,IAAI,GAAGD,KAAK,CAACE,SAAN,CAAgBC,iBAAhB,EAAb;AAEAH,IAAAA,KAAK,CAACE,SAAN,CAAgBE,WAAhB,GAA8BH,IAA9B,CAHoE,CAGhC;;AAEpCZ,IAAAA,aAAa,CAACY,IAAD,CAAb,GAAsBD,KAAK,CAACE,SAAN,CAAgBG,aAAhB,EAAtB;AACH,GAND;;AAQAf,EAAAA,aAAa,CAACgB,cAAd,GAA+B,IAAIvB,YAAJ,CAAiB;AAC5Ce,IAAAA,cAAc,EAAE;AACZG,MAAAA,IAAI,EAAEM,MADM;AAEZC,MAAAA,KAAK,EAAEzB,YAAY,CAAC0B,KAAb,CAAmBC,EAFd;AAGZC,MAAAA,KAAK,EAAE;AAHK,KAD4B;AAM5ClB,IAAAA,UAAU,EAAE;AACRQ,MAAAA,IAAI,EAAEM,MADE;AAERK,MAAAA,UAAU,EAAE;AAFJ;AANgC,GAAjB,CAA/B;AAYA,SAAOtB,aAAP;AACH,CA1DD","sourcesContent":["/* eslint-disable import/no-unresolved */\nimport SimpleSchema from 'simpl-schema';\n/* eslint-enable import/no-unresolved */\n\nexport default () => {\n    // a place to store references to the collections where the commentable objects are stored.\n    const LinkableTypes = {};\n\n    /**\n    * A scaffold for creating models which can link records from one collection to records from many other collections\n    * @mixin LinkableModel\n    */\n    const LinkableModel = Base => class extends Base {\n        /**\n        * getCollectionForParentLink - Get the collection for the ParentLink\n        *\n        * @return {Mongo.Collection} The Collection attached to the ParentLink\n        */\n        getCollectionForParentLink() {\n            return LinkableTypes[this.objectType];\n        }\n        /**\n        * linkedObject - Get the model for the linked record\n        *\n        * @return {Model}  A model of varying types depending on the linked objects type\n        */\n        linkedParent() {\n            const collection = this.getCollectionForParentLink();\n            return collection.findOne({ _id: this.linkedObjectId });\n        }\n    };\n\n    /**\n    * Register a data type that can be linked to another model, storing its collection so we can find the object later\n    * @param {BaseModel}           type       The name of the type\n    * @param {Mongo.Collection} collection The collection where the type of data is stored\n    */\n    LinkableModel.registerParentModel = function registerParentModel(model) {\n        const type = model.prototype.getCollectionName();\n\n        model.prototype._objectType = type; // eslint-disable-line\n\n        LinkableTypes[type] = model.prototype.getCollection();\n    };\n\n    LinkableModel.LinkableSchema = new SimpleSchema({\n        linkedObjectId: {\n            type: String,\n            regEx: SimpleSchema.RegEx.Id,\n            index: 1,\n        },\n        objectType: {\n            type: String,\n            denyUpdate: true,\n        },\n    });\n\n    return LinkableModel;\n};\n"]},"sourceType":"module","hash":"d423317592a61932887e800b8d48f143d2abf389"}
