{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"C:\\Users\\RUBEN\\Desktop\\meteor-vue\\packages\\matb33:collection-hooks\\collection-hooks.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"packages/matb33:collection-hooks/collection-hooks.js","filename":"C:\\Users\\RUBEN\\Desktop\\meteor-vue\\packages\\matb33:collection-hooks\\collection-hooks.js","targets":{},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"C:\\Users\\RUBEN\\Desktop\\meteor-vue","root":"C:\\Users\\RUBEN\\Desktop\\meteor-vue","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.14.0","helpers":true,"useESModules":false,"corejs":false}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"C:\\Users\\RUBEN\\Desktop\\meteor-vue\\packages\\matb33:collection-hooks\\collection-hooks.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/matb33:collection-hooks/collection-hooks.js"}},"code":"let _objectWithoutProperties;\n\nmodule.link(\"@babel/runtime/helpers/objectWithoutProperties\", {\n  default(v) {\n    _objectWithoutProperties = v;\n  }\n\n}, 0);\n\nlet _objectSpread;\n\nmodule.link(\"@babel/runtime/helpers/objectSpread2\", {\n  default(v) {\n    _objectSpread = v;\n  }\n\n}, 1);\nmodule.export({\n  CollectionHooks: () => CollectionHooks\n});\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet Mongo;\nmodule.link(\"meteor/mongo\", {\n  Mongo(v) {\n    Mongo = v;\n  }\n\n}, 1);\nlet EJSON;\nmodule.link(\"meteor/ejson\", {\n  EJSON(v) {\n    EJSON = v;\n  }\n\n}, 2);\nlet LocalCollection;\nmodule.link(\"meteor/minimongo\", {\n  LocalCollection(v) {\n    LocalCollection = v;\n  }\n\n}, 3);\n// Relevant AOP terminology:\n// Aspect: User code that runs before/after (hook)\n// Advice: Wrapper code that knows when to call user code (aspects)\n// Pointcut: before/after\nconst advices = {};\nconst CollectionHooks = {\n  defaults: {\n    before: {\n      insert: {},\n      update: {},\n      remove: {},\n      upsert: {},\n      find: {},\n      findOne: {},\n      all: {}\n    },\n    after: {\n      insert: {},\n      update: {},\n      remove: {},\n      find: {},\n      findOne: {},\n      all: {}\n    },\n    all: {\n      insert: {},\n      update: {},\n      remove: {},\n      find: {},\n      findOne: {},\n      all: {}\n    }\n  },\n  directEnv: new Meteor.EnvironmentVariable(),\n\n  directOp(func) {\n    return this.directEnv.withValue(true, func);\n  },\n\n  hookedOp(func) {\n    return this.directEnv.withValue(false, func);\n  }\n\n};\n\nCollectionHooks.extendCollectionInstance = function extendCollectionInstance(self, constructor) {\n  // Offer a public API to allow the user to define aspects\n  // Example: collection.before.insert(func);\n  ['before', 'after'].forEach(function (pointcut) {\n    Object.entries(advices).forEach(function (_ref) {\n      let [method, advice] = _ref;\n      if (advice === 'upsert' && pointcut === 'after') return;\n\n      Meteor._ensure(self, pointcut, method);\n\n      Meteor._ensure(self, '_hookAspects', method);\n\n      self._hookAspects[method][pointcut] = [];\n\n      self[pointcut][method] = function (aspect, options) {\n        const len = self._hookAspects[method][pointcut].push({\n          aspect,\n          options: CollectionHooks.initOptions(options, pointcut, method)\n        });\n\n        return {\n          replace(aspect, options) {\n            self._hookAspects[method][pointcut].splice(len - 1, 1, {\n              aspect,\n              options: CollectionHooks.initOptions(options, pointcut, method)\n            });\n          },\n\n          remove() {\n            self._hookAspects[method][pointcut].splice(len - 1, 1);\n          }\n\n        };\n      };\n    });\n  }); // Offer a publicly accessible object to allow the user to define\n  // collection-wide hook options.\n  // Example: collection.hookOptions.after.update = {fetchPrevious: false};\n\n  self.hookOptions = EJSON.clone(CollectionHooks.defaults); // Wrap mutator methods, letting the defined advice do the work\n\n  Object.entries(advices).forEach(function (_ref2) {\n    let [method, advice] = _ref2;\n    const collection = Meteor.isClient || method === 'upsert' ? self : self._collection; // Store a reference to the original mutator method\n\n    const _super = collection[method];\n\n    Meteor._ensure(self, 'direct', method);\n\n    self.direct[method] = function () {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      return CollectionHooks.directOp(function () {\n        return constructor.prototype[method].apply(self, args);\n      });\n    };\n\n    collection[method] = function () {\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      if (CollectionHooks.directEnv.get() === true) {\n        return _super.apply(collection, args);\n      } // NOTE: should we decide to force `update` with `{upsert:true}` to use\n      // the `upsert` hooks, this is what will accomplish it. It's important to\n      // realize that Meteor won't distinguish between an `update` and an\n      // `insert` though, so we'll end up with `after.update` getting called\n      // even on an `insert`. That's why we've chosen to disable this for now.\n      // if (method === \"update\" && Object(args[2]) === args[2] && args[2].upsert) {\n      //   method = \"upsert\";\n      //   advice = CollectionHooks.getAdvice(method);\n      // }\n\n\n      return advice.call(this, CollectionHooks.getUserId(), _super, self, method === 'upsert' ? {\n        insert: self._hookAspects.insert || {},\n        update: self._hookAspects.update || {},\n        upsert: self._hookAspects.upsert || {}\n      } : self._hookAspects[method] || {}, function (doc) {\n        return typeof self._transform === 'function' ? function (d) {\n          return self._transform(d || doc);\n        } : function (d) {\n          return d || doc;\n        };\n      }, args, false);\n    };\n  });\n};\n\nCollectionHooks.defineAdvice = (method, advice) => {\n  advices[method] = advice;\n};\n\nCollectionHooks.getAdvice = method => advices[method];\n\nCollectionHooks.initOptions = (options, pointcut, method) => CollectionHooks.extendOptions(CollectionHooks.defaults, options, pointcut, method);\n\nCollectionHooks.extendOptions = (source, options, pointcut, method) => _objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread({}, options), source.all.all), source[pointcut].all), source.all[method]), source[pointcut][method]);\n\nCollectionHooks.getDocs = function getDocs(collection, selector, options) {\n  const findOptions = {\n    transform: null,\n    reactive: false\n  }; // added reactive: false\n\n  /*\n  // No \"fetch\" support at this time.\n  if (!this._validators.fetchAllFields) {\n    findOptions.fields = {};\n    this._validators.fetch.forEach(function(fieldName) {\n      findOptions.fields[fieldName] = 1;\n    });\n  }\n  */\n  // Bit of a magic condition here... only \"update\" passes options, so this is\n  // only relevant to when update calls getDocs:\n\n  if (options) {\n    // This was added because in our case, we are potentially iterating over\n    // multiple docs. If multi isn't enabled, force a limit (almost like\n    // findOne), as the default for update without multi enabled is to affect\n    // only the first matched document:\n    if (!options.multi) {\n      findOptions.limit = 1;\n    }\n\n    const {\n      multi,\n      upsert\n    } = options,\n          rest = _objectWithoutProperties(options, [\"multi\", \"upsert\"]);\n\n    Object.assign(findOptions, rest);\n  } // Unlike validators, we iterate over multiple docs, so use\n  // find instead of findOne:\n\n\n  return collection.find(selector, findOptions);\n}; // This function normalizes the selector (converting it to an Object)\n\n\nCollectionHooks.normalizeSelector = function (selector) {\n  if (typeof selector === 'string' || selector && selector.constructor === Mongo.ObjectID) {\n    return {\n      _id: selector\n    };\n  } else {\n    return selector;\n  }\n}; // This function contains a snippet of code pulled and modified from:\n// ~/.meteor/packages/mongo-livedata/collection.js\n// It's contained in these utility functions to make updates easier for us in\n// case this code changes.\n\n\nCollectionHooks.getFields = function getFields(mutator) {\n  // compute modified fields\n  const fields = []; // ====ADDED START=======================\n\n  const operators = ['$addToSet', '$bit', '$currentDate', '$inc', '$max', '$min', '$pop', '$pull', '$pullAll', '$push', '$rename', '$set', '$unset']; // ====ADDED END=========================\n\n  Object.entries(mutator).forEach(function (_ref3) {\n    let [op, params] = _ref3;\n\n    // ====ADDED START=======================\n    if (operators.includes(op)) {\n      // ====ADDED END=========================\n      Object.keys(params).forEach(function (field) {\n        // treat dotted fields as if they are replacing their\n        // top-level part\n        if (field.indexOf('.') !== -1) {\n          field = field.substring(0, field.indexOf('.'));\n        } // record the field we are trying to change\n\n\n        if (!fields.includes(field)) {\n          fields.push(field);\n        }\n      }); // ====ADDED START=======================\n    } else {\n      fields.push(op);\n    } // ====ADDED END=========================\n\n  });\n  return fields;\n};\n\nCollectionHooks.reassignPrototype = function reassignPrototype(instance, constr) {\n  const hasSetPrototypeOf = typeof Object.setPrototypeOf === 'function';\n  constr = constr || Mongo.Collection; // __proto__ is not available in < IE11\n  // Note: Assigning a prototype dynamically has performance implications\n\n  if (hasSetPrototypeOf) {\n    Object.setPrototypeOf(instance, constr.prototype);\n  } else if (instance.__proto__) {\n    // eslint-disable-line no-proto\n    instance.__proto__ = constr.prototype; // eslint-disable-line no-proto\n  }\n};\n\nCollectionHooks.wrapCollection = function wrapCollection(ns, as) {\n  if (!as._CollectionConstructor) as._CollectionConstructor = as.Collection;\n  if (!as._CollectionPrototype) as._CollectionPrototype = new as.Collection(null);\n  const constructor = ns._NewCollectionContructor || as._CollectionConstructor;\n  const proto = as._CollectionPrototype;\n\n  ns.Collection = function () {\n    for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      args[_key3] = arguments[_key3];\n    }\n\n    const ret = constructor.apply(this, args);\n    CollectionHooks.extendCollectionInstance(this, constructor);\n    return ret;\n  }; // Retain a reference to the new constructor to allow further wrapping.\n\n\n  ns._NewCollectionContructor = ns.Collection;\n  ns.Collection.prototype = proto;\n  ns.Collection.prototype.constructor = ns.Collection;\n\n  for (const prop of Object.keys(constructor)) {\n    ns.Collection[prop] = constructor[prop];\n  } // Meteor overrides the apply method which is copied from the constructor in the loop above. Replace it with the\n  // default method which we need if we were to further wrap ns.Collection.\n\n\n  ns.Collection.apply = Function.prototype.apply;\n};\n\nCollectionHooks.modify = LocalCollection._modify;\n\nif (typeof Mongo !== 'undefined') {\n  CollectionHooks.wrapCollection(Meteor, Mongo);\n  CollectionHooks.wrapCollection(Mongo, Mongo);\n} else {\n  CollectionHooks.wrapCollection(Meteor, Meteor);\n}","map":{"version":3,"sources":["packages/matb33:collection-hooks/collection-hooks.js"],"names":["_objectWithoutProperties","module","link","default","v","_objectSpread","export","CollectionHooks","Meteor","Mongo","EJSON","LocalCollection","advices","defaults","before","insert","update","remove","upsert","find","findOne","all","after","directEnv","EnvironmentVariable","directOp","func","withValue","hookedOp","extendCollectionInstance","self","constructor","forEach","pointcut","Object","entries","method","advice","_ensure","_hookAspects","aspect","options","len","push","initOptions","replace","splice","hookOptions","clone","collection","isClient","_collection","_super","direct","args","prototype","apply","get","call","getUserId","doc","_transform","d","defineAdvice","getAdvice","extendOptions","source","getDocs","selector","findOptions","transform","reactive","multi","limit","rest","assign","normalizeSelector","ObjectID","_id","getFields","mutator","fields","operators","op","params","includes","keys","field","indexOf","substring","reassignPrototype","instance","constr","hasSetPrototypeOf","setPrototypeOf","Collection","__proto__","wrapCollection","ns","as","_CollectionConstructor","_CollectionPrototype","_NewCollectionContructor","proto","ret","prop","Function","modify","_modify"],"mappings":"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","sourcesContent":["import { Meteor } from 'meteor/meteor'\nimport { Mongo } from 'meteor/mongo'\nimport { EJSON } from 'meteor/ejson'\nimport { LocalCollection } from 'meteor/minimongo'\n\n// Relevant AOP terminology:\n// Aspect: User code that runs before/after (hook)\n// Advice: Wrapper code that knows when to call user code (aspects)\n// Pointcut: before/after\nconst advices = {}\n\nexport const CollectionHooks = {\n  defaults: {\n    before: { insert: {}, update: {}, remove: {}, upsert: {}, find: {}, findOne: {}, all: {} },\n    after: { insert: {}, update: {}, remove: {}, find: {}, findOne: {}, all: {} },\n    all: { insert: {}, update: {}, remove: {}, find: {}, findOne: {}, all: {} }\n  },\n  directEnv: new Meteor.EnvironmentVariable(),\n  directOp (func) {\n    return this.directEnv.withValue(true, func)\n  },\n  hookedOp (func) {\n    return this.directEnv.withValue(false, func)\n  }\n}\n\nCollectionHooks.extendCollectionInstance = function extendCollectionInstance (self, constructor) {\n  // Offer a public API to allow the user to define aspects\n  // Example: collection.before.insert(func);\n  ['before', 'after'].forEach(function (pointcut) {\n    Object.entries(advices).forEach(function ([method, advice]) {\n      if (advice === 'upsert' && pointcut === 'after') return\n\n      Meteor._ensure(self, pointcut, method)\n      Meteor._ensure(self, '_hookAspects', method)\n\n      self._hookAspects[method][pointcut] = []\n      self[pointcut][method] = function (aspect, options) {\n        const len = self._hookAspects[method][pointcut].push({\n          aspect,\n          options: CollectionHooks.initOptions(options, pointcut, method)\n        })\n\n        return {\n          replace (aspect, options) {\n            self._hookAspects[method][pointcut].splice(len - 1, 1, {\n              aspect,\n              options: CollectionHooks.initOptions(options, pointcut, method)\n            })\n          },\n          remove () {\n            self._hookAspects[method][pointcut].splice(len - 1, 1)\n          }\n        }\n      }\n    })\n  })\n\n  // Offer a publicly accessible object to allow the user to define\n  // collection-wide hook options.\n  // Example: collection.hookOptions.after.update = {fetchPrevious: false};\n  self.hookOptions = EJSON.clone(CollectionHooks.defaults)\n\n  // Wrap mutator methods, letting the defined advice do the work\n  Object.entries(advices).forEach(function ([method, advice]) {\n    const collection = Meteor.isClient || method === 'upsert' ? self : self._collection\n\n    // Store a reference to the original mutator method\n    const _super = collection[method]\n\n    Meteor._ensure(self, 'direct', method)\n    self.direct[method] = function (...args) {\n      return CollectionHooks.directOp(function () {\n        return constructor.prototype[method].apply(self, args)\n      })\n    }\n\n    collection[method] = function (...args) {\n      if (CollectionHooks.directEnv.get() === true) {\n        return _super.apply(collection, args)\n      }\n\n      // NOTE: should we decide to force `update` with `{upsert:true}` to use\n      // the `upsert` hooks, this is what will accomplish it. It's important to\n      // realize that Meteor won't distinguish between an `update` and an\n      // `insert` though, so we'll end up with `after.update` getting called\n      // even on an `insert`. That's why we've chosen to disable this for now.\n      // if (method === \"update\" && Object(args[2]) === args[2] && args[2].upsert) {\n      //   method = \"upsert\";\n      //   advice = CollectionHooks.getAdvice(method);\n      // }\n\n      return advice.call(this,\n        CollectionHooks.getUserId(),\n        _super,\n        self,\n        method === 'upsert' ? {\n          insert: self._hookAspects.insert || {},\n          update: self._hookAspects.update || {},\n          upsert: self._hookAspects.upsert || {}\n        } : self._hookAspects[method] || {},\n        function (doc) {\n          return (\n            typeof self._transform === 'function'\n              ? function (d) { return self._transform(d || doc) }\n              : function (d) { return d || doc }\n          )\n        },\n        args,\n        false\n      )\n    }\n  })\n}\n\nCollectionHooks.defineAdvice = (method, advice) => {\n  advices[method] = advice\n}\n\nCollectionHooks.getAdvice = method => advices[method]\n\nCollectionHooks.initOptions = (options, pointcut, method) =>\n  CollectionHooks.extendOptions(CollectionHooks.defaults, options, pointcut, method)\n\nCollectionHooks.extendOptions = (source, options, pointcut, method) =>\n  ({ ...options, ...source.all.all, ...source[pointcut].all, ...source.all[method], ...source[pointcut][method] })\n\nCollectionHooks.getDocs = function getDocs (collection, selector, options) {\n  const findOptions = { transform: null, reactive: false } // added reactive: false\n\n  /*\n  // No \"fetch\" support at this time.\n  if (!this._validators.fetchAllFields) {\n    findOptions.fields = {};\n    this._validators.fetch.forEach(function(fieldName) {\n      findOptions.fields[fieldName] = 1;\n    });\n  }\n  */\n\n  // Bit of a magic condition here... only \"update\" passes options, so this is\n  // only relevant to when update calls getDocs:\n  if (options) {\n    // This was added because in our case, we are potentially iterating over\n    // multiple docs. If multi isn't enabled, force a limit (almost like\n    // findOne), as the default for update without multi enabled is to affect\n    // only the first matched document:\n    if (!options.multi) {\n      findOptions.limit = 1\n    }\n    const { multi, upsert, ...rest } = options\n    Object.assign(findOptions, rest)\n  }\n\n  // Unlike validators, we iterate over multiple docs, so use\n  // find instead of findOne:\n  return collection.find(selector, findOptions)\n}\n\n// This function normalizes the selector (converting it to an Object)\nCollectionHooks.normalizeSelector = function (selector) {\n  if (typeof selector === 'string' || (selector && selector.constructor === Mongo.ObjectID)) {\n    return {\n      _id: selector\n    }\n  } else {\n    return selector\n  }\n}\n\n// This function contains a snippet of code pulled and modified from:\n// ~/.meteor/packages/mongo-livedata/collection.js\n// It's contained in these utility functions to make updates easier for us in\n// case this code changes.\nCollectionHooks.getFields = function getFields (mutator) {\n  // compute modified fields\n  const fields = []\n  // ====ADDED START=======================\n  const operators = [\n    '$addToSet',\n    '$bit',\n    '$currentDate',\n    '$inc',\n    '$max',\n    '$min',\n    '$pop',\n    '$pull',\n    '$pullAll',\n    '$push',\n    '$rename',\n    '$set',\n    '$unset'\n  ]\n  // ====ADDED END=========================\n\n  Object.entries(mutator).forEach(function ([op, params]) {\n    // ====ADDED START=======================\n    if (operators.includes(op)) {\n    // ====ADDED END=========================\n      Object.keys(params).forEach(function (field) {\n        // treat dotted fields as if they are replacing their\n        // top-level part\n        if (field.indexOf('.') !== -1) {\n          field = field.substring(0, field.indexOf('.'))\n        }\n\n        // record the field we are trying to change\n        if (!fields.includes(field)) {\n          fields.push(field)\n        }\n      })\n      // ====ADDED START=======================\n    } else {\n      fields.push(op)\n    }\n    // ====ADDED END=========================\n  })\n\n  return fields\n}\n\nCollectionHooks.reassignPrototype = function reassignPrototype (instance, constr) {\n  const hasSetPrototypeOf = typeof Object.setPrototypeOf === 'function'\n  constr = constr || Mongo.Collection\n\n  // __proto__ is not available in < IE11\n  // Note: Assigning a prototype dynamically has performance implications\n  if (hasSetPrototypeOf) {\n    Object.setPrototypeOf(instance, constr.prototype)\n  } else if (instance.__proto__) { // eslint-disable-line no-proto\n    instance.__proto__ = constr.prototype // eslint-disable-line no-proto\n  }\n}\n\nCollectionHooks.wrapCollection = function wrapCollection (ns, as) {\n  if (!as._CollectionConstructor) as._CollectionConstructor = as.Collection\n  if (!as._CollectionPrototype) as._CollectionPrototype = new as.Collection(null)\n\n  const constructor = ns._NewCollectionContructor || as._CollectionConstructor\n  const proto = as._CollectionPrototype\n\n  ns.Collection = function (...args) {\n    const ret = constructor.apply(this, args)\n    CollectionHooks.extendCollectionInstance(this, constructor)\n    return ret\n  }\n  // Retain a reference to the new constructor to allow further wrapping.\n  ns._NewCollectionContructor = ns.Collection\n\n  ns.Collection.prototype = proto\n  ns.Collection.prototype.constructor = ns.Collection\n\n  for (const prop of Object.keys(constructor)) {\n    ns.Collection[prop] = constructor[prop]\n  }\n\n  // Meteor overrides the apply method which is copied from the constructor in the loop above. Replace it with the\n  // default method which we need if we were to further wrap ns.Collection.\n  ns.Collection.apply = Function.prototype.apply\n}\n\nCollectionHooks.modify = LocalCollection._modify\n\nif (typeof Mongo !== 'undefined') {\n  CollectionHooks.wrapCollection(Meteor, Mongo)\n  CollectionHooks.wrapCollection(Mongo, Mongo)\n} else {\n  CollectionHooks.wrapCollection(Meteor, Meteor)\n}\n"]},"sourceType":"module","hash":"44e4aade81512cd85ac077170f70f919d340e1a6"}
