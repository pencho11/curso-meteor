{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"C:\\Users\\RUBEN\\Desktop\\meteor-vue\\packages\\mdg:validated-method\\validated-method.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser.legacy"},"sourceFileName":"packages/mdg:validated-method/validated-method.js","filename":"C:\\Users\\RUBEN\\Desktop\\meteor-vue\\packages\\mdg:validated-method\\validated-method.js","targets":{},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"C:\\Users\\RUBEN\\Desktop\\meteor-vue","root":"C:\\Users\\RUBEN\\Desktop\\meteor-vue","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":true,"enforceStrictMode":false,"dynamicImport":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.14.0","helpers":true,"useESModules":false,"corejs":false}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$3","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$4","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"StaticBlock":{"enter":[null]},"TSModuleBlock":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectPattern":{"enter":[null]}},"options":{}},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"ObjectMethod":{"enter":[null],"exit":[null]},"ClassMethod":{"enter":[null],"exit":[null]},"ClassPrivateMethod":{"enter":[null],"exit":[null]},"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"C:\\Users\\RUBEN\\Desktop\\meteor-vue\\packages\\mdg:validated-method\\validated-method.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/mdg:validated-method/validated-method.js"}},"code":"var _objectSpread;\n\nmodule.link(\"@babel/runtime/helpers/objectSpread2\", {\n  default: function (v) {\n    _objectSpread = v;\n  }\n}, 0);\nmodule.export({\n  ValidatedMethod: function () {\n    return ValidatedMethod;\n  }\n});\nvar check, Match;\nmodule.link(\"meteor/check\", {\n  check: function (v) {\n    check = v;\n  },\n  Match: function (v) {\n    Match = v;\n  }\n}, 0);\n\nvar ValidatedMethod = /*#__PURE__*/function () {\n  function ValidatedMethod(options) {\n    var _this$connection$meth;\n\n    // Default to no mixins\n    options.mixins = options.mixins || [];\n    check(options.mixins, [Function]);\n    check(options.name, String);\n    options = applyMixins(options, options.mixins); // connection argument defaults to Meteor, which is where Methods are defined on client and\n    // server\n\n    options.connection = options.connection || Meteor; // Allow validate: null shorthand for methods that take no arguments\n\n    if (options.validate === null) {\n      options.validate = function () {};\n    } // If this is null/undefined, make it an empty object\n\n\n    options.applyOptions = options.applyOptions || {};\n    check(options, Match.ObjectIncluding({\n      name: String,\n      validate: Function,\n      run: Function,\n      mixins: [Function],\n      connection: Object,\n      applyOptions: Object\n    })); // Default options passed to Meteor.apply, can be overridden with applyOptions\n\n    var defaultApplyOptions = {\n      // Make it possible to get the ID of an inserted item\n      returnStubValue: true,\n      // Don't call the server method if the client stub throws an error, so that we don't end\n      // up doing validations twice\n      throwStubExceptions: true\n    };\n    options.applyOptions = _objectSpread(_objectSpread({}, defaultApplyOptions), options.applyOptions); // Attach all options to the ValidatedMethod instance\n\n    Object.assign(this, options);\n    var method = this;\n    this.connection.methods((_this$connection$meth = {}, _this$connection$meth[options.name] = function (args) {\n      // Silence audit-argument-checks since arguments are always checked when using this package\n      check(args, Match.Any);\n      var methodInvocation = this;\n      return method._execute(methodInvocation, args);\n    }, _this$connection$meth));\n  }\n\n  var _proto = ValidatedMethod.prototype;\n\n  _proto.call = function () {\n    function call(args, callback) {\n      // Accept calling with just a callback\n      if (typeof args === 'function') {\n        callback = args;\n        args = {};\n      }\n\n      try {\n        return this.connection.apply(this.name, [args], this.applyOptions, callback);\n      } catch (err) {\n        if (callback) {\n          // Get errors from the stub in the same way as from the server-side method\n          callback(err);\n        } else {\n          // No callback passed, throw instead of silently failing; this is what\n          // \"normal\" Methods do if you don't pass a callback.\n          throw err;\n        }\n      }\n    }\n\n    return call;\n  }();\n\n  _proto._execute = function () {\n    function _execute() {\n      var methodInvocation = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var args = arguments.length > 1 ? arguments[1] : undefined;\n      // Add `this.name` to reference the Method name\n      methodInvocation.name = this.name;\n      var validateResult = this.validate.bind(methodInvocation)(args);\n\n      if (typeof validateResult !== 'undefined') {\n        throw new Error(\"Returning from validate doesn't do anything; perhaps you meant to throw an error?\");\n      }\n\n      return this.run.bind(methodInvocation)(args);\n    }\n\n    return _execute;\n  }();\n\n  return ValidatedMethod;\n}();\n\n; // Mixins get a chance to transform the arguments before they are passed to the actual Method\n\nfunction applyMixins(args, mixins) {\n  // Save name of the method here, so we can attach it to potential error messages\n  var _args = args,\n      name = _args.name;\n  mixins.forEach(function (mixin) {\n    args = mixin(args);\n\n    if (!Match.test(args, Object)) {\n      var functionName = mixin.toString().match(/function\\s(\\w+)/);\n      var msg = 'One of the mixins';\n\n      if (functionName) {\n        msg = \"The function '\" + functionName[1] + \"'\";\n      }\n\n      throw new Error(\"Error in \" + name + \" method: \" + msg + \" didn't return the options object.\");\n    }\n  });\n  return args;\n}","map":{"version":3,"sources":["packages/mdg:validated-method/validated-method.js"],"names":["_objectSpread","module","link","default","v","export","ValidatedMethod","check","Match","options","mixins","Function","name","String","applyMixins","connection","Meteor","validate","applyOptions","ObjectIncluding","run","Object","defaultApplyOptions","returnStubValue","throwStubExceptions","assign","method","methods","args","Any","methodInvocation","_execute","call","callback","apply","err","validateResult","bind","Error","forEach","mixin","test","functionName","toString","match","msg"],"mappings":"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","sourcesContent":["import { check, Match } from 'meteor/check';\n\nexport class ValidatedMethod {\n  constructor(options) {\n    // Default to no mixins\n    options.mixins = options.mixins || [];\n    check(options.mixins, [Function]);\n    check(options.name, String);\n    options = applyMixins(options, options.mixins);\n\n    // connection argument defaults to Meteor, which is where Methods are defined on client and\n    // server\n    options.connection = options.connection || Meteor;\n\n    // Allow validate: null shorthand for methods that take no arguments\n    if (options.validate === null) {\n      options.validate = function () {};\n    }\n\n    // If this is null/undefined, make it an empty object\n    options.applyOptions = options.applyOptions || {};\n\n    check(options, Match.ObjectIncluding({\n      name: String,\n      validate: Function,\n      run: Function,\n      mixins: [Function],\n      connection: Object,\n      applyOptions: Object,\n    }));\n\n    // Default options passed to Meteor.apply, can be overridden with applyOptions\n    const defaultApplyOptions = {\n      // Make it possible to get the ID of an inserted item\n      returnStubValue: true,\n\n      // Don't call the server method if the client stub throws an error, so that we don't end\n      // up doing validations twice\n      throwStubExceptions: true,\n    };\n\n    options.applyOptions = {\n      ...defaultApplyOptions,\n      ...options.applyOptions\n    };\n\n    // Attach all options to the ValidatedMethod instance\n    Object.assign(this, options);\n\n    const method = this;\n    this.connection.methods({\n      [options.name](args) {\n        // Silence audit-argument-checks since arguments are always checked when using this package\n        check(args, Match.Any);\n        const methodInvocation = this;\n\n        return method._execute(methodInvocation, args);\n      }\n    });\n  }\n\n  call(args, callback) {\n    // Accept calling with just a callback\n    if ( typeof args === 'function' ) {\n      callback = args;\n      args = {};\n    }\n\n    try {\n      return this.connection.apply(this.name, [args], this.applyOptions, callback);\n    } catch (err) {\n      if (callback) {\n        // Get errors from the stub in the same way as from the server-side method\n        callback(err);\n      } else {\n        // No callback passed, throw instead of silently failing; this is what\n        // \"normal\" Methods do if you don't pass a callback.\n        throw err;\n      }\n    }\n  }\n\n  _execute(methodInvocation = {}, args) {\n    // Add `this.name` to reference the Method name\n    methodInvocation.name = this.name;\n\n    const validateResult = this.validate.bind(methodInvocation)(args);\n\n    if (typeof validateResult !== 'undefined') {\n      throw new Error(`Returning from validate doesn't do anything; \\\nperhaps you meant to throw an error?`);\n    }\n\n    return this.run.bind(methodInvocation)(args);\n  }\n};\n\n// Mixins get a chance to transform the arguments before they are passed to the actual Method\nfunction applyMixins(args, mixins) {\n  // Save name of the method here, so we can attach it to potential error messages\n  const { name } = args;\n\n  mixins.forEach((mixin) => {\n    args = mixin(args);\n\n    if(!Match.test(args, Object)) {\n      const functionName = mixin.toString().match(/function\\s(\\w+)/);\n      let msg = 'One of the mixins';\n\n      if(functionName) {\n        msg = `The function '${functionName[1]}'`;\n      }\n\n      throw new Error(`Error in ${name} method: ${msg} didn't return the options object.`);\n    }\n  });\n\n  return args;\n}\n"]},"sourceType":"module","hash":"c0c57e6034d7fc9683f5d66b1f9ea0c2241793a7"}
