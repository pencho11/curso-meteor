{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"C:\\Users\\RUBEN\\Desktop\\meteor-vue\\packages\\socialize:base-model\\base-model.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser.legacy"},"sourceFileName":"packages/socialize:base-model/base-model.js","filename":"C:\\Users\\RUBEN\\Desktop\\meteor-vue\\packages\\socialize:base-model\\base-model.js","targets":{},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"C:\\Users\\RUBEN\\Desktop\\meteor-vue","root":"C:\\Users\\RUBEN\\Desktop\\meteor-vue","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":true,"enforceStrictMode":false,"dynamicImport":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.14.0","helpers":true,"useESModules":false,"corejs":false}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$3","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$4","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"StaticBlock":{"enter":[null]},"TSModuleBlock":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectPattern":{"enter":[null]}},"options":{}},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"ObjectMethod":{"enter":[null],"exit":[null]},"ClassMethod":{"enter":[null],"exit":[null]},"ClassPrivateMethod":{"enter":[null],"exit":[null]},"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"C:\\Users\\RUBEN\\Desktop\\meteor-vue\\packages\\socialize:base-model\\base-model.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/socialize:base-model/base-model.js"}},"code":"var _typeof;\n\nmodule.link(\"@babel/runtime/helpers/typeof\", {\n  default: function (v) {\n    _typeof = v;\n  }\n}, 0);\nvar SimpleSchema;\nmodule.link(\"simpl-schema\", {\n  \"default\": function (v) {\n    SimpleSchema = v;\n  }\n}, 0);\nvar MessageBox;\nmodule.link(\"message-box\", {\n  \"default\": function (v) {\n    MessageBox = v;\n  }\n}, 1);\nvar diff;\nmodule.link(\"mongodb-diff\", {\n  diff: function (v) {\n    diff = v;\n  }\n}, 2);\nmodule.exportDefault(function (Meteor) {\n  /* We check for server code here to deal with a buffer issue in meteor-message-box\n   * This shouldn't be a major issue as I doubt we will need to display this error\n   * on the client at this point. Should be fixed though.\n   * https://github.com/aldeed/meteor-message-box/issues/1\n  */\n  if (Meteor.isServer) {\n    MessageBox.defaults({\n      messages: {\n        en: {\n          Untrusted: 'Inserts/Updates from untrusted code not supported'\n        }\n      }\n    });\n  }\n\n  SimpleSchema.denyUntrusted = function () {\n    function denyUntrusted() {\n      if (this.isSet) {\n        var autoValue = this.definition.autoValue && this.definition.autoValue.call(this);\n        var defaultValue = this.definition.defaultValue;\n\n        if (this.value !== defaultValue && this.value !== autoValue && !this.isFromTrustedCode) {\n          return 'Untrusted';\n        }\n      }\n\n      return undefined;\n    }\n\n    return denyUntrusted;\n  }();\n\n  function extend(receiver, provider) {\n    var rec = receiver;\n\n    for (var prop in meteorBabelHelpers.sanitizeForInObject(provider)) {\n      if (prop in provider) {\n        rec[prop] = provider[prop];\n      }\n    }\n  }\n\n  return /*#__PURE__*/function () {\n    function BaseModel() {\n      var document = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var preClean = arguments.length > 1 ? arguments[1] : undefined;\n      var doc = document;\n\n      if (preClean) {\n        doc = this._getSchema(doc).clean(doc);\n      }\n\n      extend(this, doc);\n\n      this.getDocument = function () {\n        function getDocument() {\n          return doc;\n        }\n\n        return getDocument;\n      }();\n    }\n\n    BaseModel.createEmpty = function () {\n      function createEmpty(_id) {\n        return new this({\n          _id: _id\n        });\n      }\n\n      return createEmpty;\n    }();\n\n    BaseModel.methods = function () {\n      function methods(methodMap) {\n        var self = this;\n\n        if ((typeof methodMap === 'function' || _typeof(methodMap) === 'object') && !!methodMap) {\n          var keys = Object.keys(methodMap);\n\n          for (var i = 0, length = keys.length; i < length; i++) {\n            var method = methodMap[keys[i]];\n\n            if (typeof method === 'function') {\n              if (!self.prototype[keys[i]]) {\n                self.prototype[keys[i]] = method;\n              } else {\n                throw new Meteor.Error('existent-method', \"The method \" + keys[i] + \" already exists.\");\n              }\n            }\n          }\n        }\n      }\n\n      return methods;\n    }();\n\n    BaseModel.updateTransformFunction = function () {\n      function updateTransformFunction() {\n        var _this = this;\n\n        this.prototype.getCollection()._transform = function (document) {\n          return new _this(document);\n        };\n      }\n\n      return updateTransformFunction;\n    }();\n\n    BaseModel.attachCollection = function () {\n      function attachCollection(collection) {\n        var transform = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n        this.prototype.getCollection = function () {\n          function getCollection() {\n            return collection;\n          }\n\n          return getCollection;\n        }();\n\n        if (transform) {\n          this.updateTransformFunction();\n        }\n      }\n\n      return attachCollection;\n    }();\n\n    BaseModel.attachSchema = function () {\n      function attachSchema(schemaInstance) {\n        var collection = this.prototype.getCollection();\n\n        if (collection) {\n          collection.attachSchema(schemaInstance);\n        } else {\n          throw new Meteor.Error(\"Can't append schema to non existent collection. Please attach a collection to your model using `ModelName.attachCollection`\");\n        }\n      }\n\n      return attachSchema;\n    }();\n\n    BaseModel.appendSchema = function () {\n      function appendSchema(schemaObject) {\n        this.attachSchema(new SimpleSchema(schemaObject));\n      }\n\n      return appendSchema;\n    }();\n\n    var _proto = BaseModel.prototype;\n\n    _proto._getSchema = function () {\n      function _getSchema() {\n        var _this$getCollection;\n\n        var schema = (_this$getCollection = this.getCollection()).simpleSchema.apply(_this$getCollection, arguments);\n\n        if (schema) {\n          return schema;\n        }\n\n        throw new Meteor.Error('noSchema', \"You don't have a schema defined for \" + this.getCollectionName());\n      }\n\n      return _getSchema;\n    }();\n\n    _proto.getCollection = function () {\n      function getCollection() {\n        // We just throw here. This method is reassigned in attachCollection method when collection is attached.\n        if (this) throw new Meteor.Error('noCollection', 'You must use ClassName.attachCollection to attach a collection to your model.');\n      }\n\n      return getCollection;\n    }();\n\n    _proto.getCollectionName = function () {\n      function getCollectionName() {\n        return this.getCollection()._name;\n      }\n\n      return getCollectionName;\n    }() // get all values from the model that do not have a denyUpdate or denyUntrusted in their schema\n    ;\n\n    _proto.getUpdatableFields = function () {\n      function getUpdatableFields() {\n        var _this2 = this;\n\n        var schemas = Meteor._get(this.getCollection(), '_c2', '_simpleSchemas');\n\n        var fields = {\n          _id: this._id\n        };\n\n        var _loop = function (key) {\n          schemas.forEach(function (_ref) {\n            var schema = _ref.schema;\n\n            if (schema[key] && !(schema[key].custom && schema[key].custom === SimpleSchema.denyUntrusted) && !schema[key].denyUpdate) {\n              fields[key] = _this2[key];\n            }\n          });\n        };\n\n        for (var _i = 0, _Object$keys = Object.keys(this); _i < _Object$keys.length; _i++) {\n          var key = _Object$keys[_i];\n\n          _loop(key);\n        }\n\n        return fields;\n      }\n\n      return getUpdatableFields;\n    }();\n\n    _proto.checkOwnership = function () {\n      function checkOwnership() {\n        return this.userId === Meteor.userId();\n      }\n\n      return checkOwnership;\n    }();\n\n    _proto.save = function () {\n      function save(callback) {\n        var _this3 = this;\n\n        var obj = Object.keys(this).reduce(function (accumulator, key) {\n          if (key !== 'getDocument') accumulator[key] = _this3[key]; // eslint-disable-line no-param-reassign\n\n          return accumulator;\n        }, {});\n\n        if (this._id) {\n          var updateDiff = diff(this.getDocument(), obj);\n\n          if (updateDiff && Object.keys(updateDiff).length !== 0) {\n            this.update(updateDiff, callback);\n          } else {\n            callback && callback(null);\n          }\n        } else {\n          var schema = this._getSchema(obj);\n\n          if (Meteor.isClient && schema) {\n            obj = schema.clean(obj, {\n              extendAutoValueContext: {\n                isInsert: true,\n                userId: Meteor.userId()\n              }\n            });\n          }\n\n          this._id = this.getCollection().insert(obj, callback);\n        }\n\n        return this;\n      }\n\n      return save;\n    }();\n\n    _proto.update = function () {\n      function update(modifier, callback) {\n        if (this._id) {\n          this.getCollection().update(this._id, modifier, callback);\n        }\n      }\n\n      return update;\n    }();\n\n    _proto.remove = function () {\n      function remove(callback) {\n        if (this._id) {\n          this.getCollection().remove({\n            _id: this._id\n          }, callback);\n        }\n      }\n\n      return remove;\n    }();\n\n    return BaseModel;\n  }();\n});","map":{"version":3,"sources":["packages/socialize:base-model/base-model.js"],"names":["_typeof","module","link","default","v","SimpleSchema","MessageBox","diff","exportDefault","Meteor","isServer","defaults","messages","en","Untrusted","denyUntrusted","isSet","autoValue","definition","call","defaultValue","value","isFromTrustedCode","undefined","extend","receiver","provider","rec","prop","document","preClean","doc","_getSchema","clean","getDocument","createEmpty","_id","methods","methodMap","self","keys","Object","i","length","method","prototype","Error","updateTransformFunction","getCollection","_transform","attachCollection","collection","transform","attachSchema","schemaInstance","appendSchema","schemaObject","schema","simpleSchema","getCollectionName","_name","getUpdatableFields","schemas","_get","fields","key","forEach","custom","denyUpdate","checkOwnership","userId","save","callback","obj","reduce","accumulator","updateDiff","update","isClient","extendAutoValueContext","isInsert","insert","modifier","remove"],"mappings":"AAAA,IAAIA,OAAJ;;AAAYC,MAAM,CAACC,IAAP,CAAY,+BAAZ,EAA4C;AAACC,EAAAA,OAAO,EAAC,UAASC,CAAT,EAAW;AAACJ,IAAAA,OAAO,GAACI,CAAR;AAAU;AAA/B,CAA5C,EAA6E,CAA7E;AAAZ,IAAIC,YAAJ;AAAiBJ,MAAM,CAACC,IAAP,CAAY,cAAZ,EAA2B;AAAC,aAAQ,UAASE,CAAT,EAAW;AAACC,IAAAA,YAAY,GAACD,CAAb;AAAe;AAApC,CAA3B,EAAiE,CAAjE;AAAoE,IAAIE,UAAJ;AAAeL,MAAM,CAACC,IAAP,CAAY,aAAZ,EAA0B;AAAC,aAAQ,UAASE,CAAT,EAAW;AAACE,IAAAA,UAAU,GAACF,CAAX;AAAa;AAAlC,CAA1B,EAA8D,CAA9D;AAAiE,IAAIG,IAAJ;AAASN,MAAM,CAACC,IAAP,CAAY,cAAZ,EAA2B;AAACK,EAAAA,IAAI,EAAC,UAASH,CAAT,EAAW;AAACG,IAAAA,IAAI,GAACH,CAAL;AAAO;AAAzB,CAA3B,EAAsD,CAAtD;AAA9KH,MAAM,CAACO,aAAP,CAMe,UAACC,MAAD,EAAY;AACvB;AACJ;AACA;AACA;AACA;AACI,MAAIA,MAAM,CAACC,QAAX,EAAqB;AACjBJ,IAAAA,UAAU,CAACK,QAAX,CAAoB;AAChBC,MAAAA,QAAQ,EAAE;AACNC,QAAAA,EAAE,EAAE;AACAC,UAAAA,SAAS,EAAE;AADX;AADE;AADM,KAApB;AAOH;;AAEDT,EAAAA,YAAY,CAACU,aAAb;AAA6B,aAASA,aAAT,GAAyB;AAClD,UAAI,KAAKC,KAAT,EAAgB;AACZ,YAAMC,SAAS,GAAG,KAAKC,UAAL,CAAgBD,SAAhB,IAA6B,KAAKC,UAAL,CAAgBD,SAAhB,CAA0BE,IAA1B,CAA+B,IAA/B,CAA/C;AACA,YAAQC,YAAR,GAAyB,KAAKF,UAA9B,CAAQE,YAAR;;AAEA,YAAI,KAAKC,KAAL,KAAeD,YAAf,IAA+B,KAAKC,KAAL,KAAeJ,SAA9C,IAA2D,CAAC,KAAKK,iBAArE,EAAwF;AACpF,iBAAO,WAAP;AACH;AACJ;;AACD,aAAOC,SAAP;AACH;;AAVD,WAAsCR,aAAtC;AAAA;;AAYA,WAASS,MAAT,CAAgBC,QAAhB,EAA0BC,QAA1B,EAAoC;AAChC,QAAMC,GAAG,GAAGF,QAAZ;;AACA,SAAK,IAAMG,IAAX,2CAAmBF,QAAnB,GAA6B;AACzB,UAAIE,IAAI,IAAIF,QAAZ,EAAsB;AAClBC,QAAAA,GAAG,CAACC,IAAD,CAAH,GAAYF,QAAQ,CAACE,IAAD,CAApB;AACH;AACJ;AACJ;;AAED;AACI,yBAAqC;AAAA,UAAzBC,QAAyB,uEAAd,EAAc;AAAA,UAAVC,QAAU;AACjC,UAAIC,GAAG,GAAGF,QAAV;;AACA,UAAIC,QAAJ,EAAc;AACVC,QAAAA,GAAG,GAAG,KAAKC,UAAL,CAAgBD,GAAhB,EAAqBE,KAArB,CAA2BF,GAA3B,CAAN;AACH;;AACDP,MAAAA,MAAM,CAAC,IAAD,EAAOO,GAAP,CAAN;;AACA,WAAKG,WAAL;AAAmB,iBAASA,WAAT,GAAuB;AACtC,iBAAOH,GAAP;AACH;;AAFD,eAA4BG,WAA5B;AAAA;AAGH;;AAVL,cAYWC,WAZX;AAYI,2BAAmBC,GAAnB,EAAwB;AACpB,eAAO,IAAI,IAAJ,CAAS;AAAEA,UAAAA,GAAG,EAAHA;AAAF,SAAT,CAAP;AACH;;AAdL;AAAA;;AAAA,cAgBWC,OAhBX;AAgBI,uBAAeC,SAAf,EAA0B;AACtB,YAAMC,IAAI,GAAG,IAAb;;AACA,YAAI,CAAC,OAAOD,SAAP,KAAqB,UAArB,IAAmC,QAAOA,SAAP,MAAqB,QAAzD,KAAsE,CAAC,CAACA,SAA5E,EAAuF;AACnF,cAAME,IAAI,GAAGC,MAAM,CAACD,IAAP,CAAYF,SAAZ,CAAb;;AACA,eAAS,IAAAI,CAAC,GAAG,CAAJ,EAASC,MAAT,GAAoBH,IAApB,CAASG,MAAlB,EAAmCD,CAAC,GAAGC,MAAvC,EAA+CD,CAAC,EAAhD,EAAoD;AAChD,gBAAME,MAAM,GAAGN,SAAS,CAACE,IAAI,CAACE,CAAD,CAAL,CAAxB;;AAEA,gBAAI,OAAOE,MAAP,KAAkB,UAAtB,EAAkC;AAC9B,kBAAI,CAACL,IAAI,CAACM,SAAL,CAAeL,IAAI,CAACE,CAAD,CAAnB,CAAL,EAA8B;AAC1BH,gBAAAA,IAAI,CAACM,SAAL,CAAeL,IAAI,CAACE,CAAD,CAAnB,IAA0BE,MAA1B;AACH,eAFD,MAEO;AACH,sBAAM,IAAInC,MAAM,CAACqC,KAAX,CAAiB,iBAAjB,kBAAkDN,IAAI,CAACE,CAAD,CAAtD,sBAAN;AACH;AACJ;AACJ;AACJ;AACJ;;AAhCL;AAAA;;AAAA,cAkCWK,uBAlCX;AAkCI,yCAAiC;AAAA;;AAC7B,aAAKF,SAAL,CAAeG,aAAf,GAA+BC,UAA/B,GAA4C,UAAApB,QAAQ;AAAA,iBAAI,IAAI,KAAJ,CAASA,QAAT,CAAJ;AAAA,SAApD;AACH;;AApCL;AAAA;;AAAA,cAsCWqB,gBAtCX;AAsCI,gCAAwBC,UAAxB,EAAsD;AAAA,YAAlBC,SAAkB,uEAAN,IAAM;;AAClD,aAAKP,SAAL,CAAeG,aAAf;AAA+B,mBAASA,aAAT,GAAyB;AACpD,mBAAOG,UAAP;AACH;;AAFD,iBAAwCH,aAAxC;AAAA;;AAIA,YAAII,SAAJ,EAAe;AACX,eAAKL,uBAAL;AACH;AACJ;;AA9CL;AAAA;;AAAA,cAgDWM,YAhDX;AAgDI,4BAAoBC,cAApB,EAAoC;AAChC,YAAMH,UAAU,GAAG,KAAKN,SAAL,CAAeG,aAAf,EAAnB;;AAEA,YAAIG,UAAJ,EAAgB;AACZA,UAAAA,UAAU,CAACE,YAAX,CAAwBC,cAAxB;AACH,SAFD,MAEO;AACH,gBAAM,IAAI7C,MAAM,CAACqC,KAAX,CAAiB,6HAAjB,CAAN;AACH;AACJ;;AAxDL;AAAA;;AAAA,cA0DWS,YA1DX;AA0DI,4BAAoBC,YAApB,EAAkC;AAC9B,aAAKH,YAAL,CAAkB,IAAIhD,YAAJ,CAAiBmD,YAAjB,CAAlB;AACH;;AA5DL;AAAA;;AAAA;;AAAA,WA8DIxB,UA9DJ;AA8DI,4BAAoB;AAAA;;AAChB,YAAMyB,MAAM,GAAG,4BAAKT,aAAL,IAAqBU,YAArB,sCAAf;;AACA,YAAID,MAAJ,EAAY;AACR,iBAAOA,MAAP;AACH;;AACD,cAAM,IAAIhD,MAAM,CAACqC,KAAX,CAAiB,UAAjB,2CAAoE,KAAKa,iBAAL,EAApE,CAAN;AACH;;AApEL;AAAA;;AAAA,WAsEIX,aAtEJ;AAsEI,+BAAgB;AACZ;AACA,YAAI,IAAJ,EAAU,MAAM,IAAIvC,MAAM,CAACqC,KAAX,CAAiB,cAAjB,EAAiC,+EAAjC,CAAN;AACb;;AAzEL;AAAA;;AAAA,WA2EIa,iBA3EJ;AA2EI,mCAAoB;AAChB,eAAO,KAAKX,aAAL,GAAqBY,KAA5B;AACH;;AA7EL;AAAA,QA+EI;AA/EJ;;AAAA,WAgFIC,kBAhFJ;AAgFI,oCAAqB;AAAA;;AACjB,YAAMC,OAAO,GAAGrD,MAAM,CAACsD,IAAP,CAAY,KAAKf,aAAL,EAAZ,EAAkC,KAAlC,EAAyC,gBAAzC,CAAhB;;AACA,YAAMgB,MAAM,GAAG;AAAE5B,UAAAA,GAAG,EAAE,KAAKA;AAAZ,SAAf;;AAFiB,8BAIN6B,GAJM;AAKbH,UAAAA,OAAO,CAACI,OAAR,CAAgB,gBAAgB;AAAA,gBAAbT,MAAa,QAAbA,MAAa;;AAC5B,gBAAIA,MAAM,CAACQ,GAAD,CAAN,IAAe,EAAER,MAAM,CAACQ,GAAD,CAAN,CAAYE,MAAZ,IAAsBV,MAAM,CAACQ,GAAD,CAAN,CAAYE,MAAZ,KAAuB9D,YAAY,CAACU,aAA5D,CAAf,IAA6F,CAAC0C,MAAM,CAACQ,GAAD,CAAN,CAAYG,UAA9G,EAA0H;AACtHJ,cAAAA,MAAM,CAACC,GAAD,CAAN,GAAc,MAAI,CAACA,GAAD,CAAlB;AACH;AACJ,WAJD;AALa;;AAIjB,wCAAkBxB,MAAM,CAACD,IAAP,CAAY,IAAZ,CAAlB,kCAAqC;AAAhC,cAAMyB,GAAG,mBAAT;;AAAgC,gBAA1BA,GAA0B;AAMpC;;AAED,eAAOD,MAAP;AACH;;AA7FL;AAAA;;AAAA,WA+FIK,cA/FJ;AA+FI,gCAAiB;AACb,eAAO,KAAKC,MAAL,KAAgB7D,MAAM,CAAC6D,MAAP,EAAvB;AACH;;AAjGL;AAAA;;AAAA,WAmGIC,IAnGJ;AAmGI,oBAAKC,QAAL,EAAe;AAAA;;AACX,YAAIC,GAAG,GAAGhC,MAAM,CAACD,IAAP,CAAY,IAAZ,EAAkBkC,MAAlB,CACN,UAACC,WAAD,EAAcV,GAAd,EAAsB;AAClB,cAAIA,GAAG,KAAK,aAAZ,EAA2BU,WAAW,CAACV,GAAD,CAAX,GAAmB,MAAI,CAACA,GAAD,CAAvB,CADT,CACuC;;AACzD,iBAAOU,WAAP;AACH,SAJK,EAIH,EAJG,CAAV;;AAOA,YAAI,KAAKvC,GAAT,EAAc;AACV,cAAMwC,UAAU,GAAGrE,IAAI,CAAC,KAAK2B,WAAL,EAAD,EAAqBuC,GAArB,CAAvB;;AACA,cAAIG,UAAU,IAAInC,MAAM,CAACD,IAAP,CAAYoC,UAAZ,EAAwBjC,MAAxB,KAAmC,CAArD,EAAwD;AACpD,iBAAKkC,MAAL,CAAYD,UAAZ,EAAwBJ,QAAxB;AACH,WAFD,MAEO;AACHA,YAAAA,QAAQ,IAAIA,QAAQ,CAAC,IAAD,CAApB;AACH;AACJ,SAPD,MAOO;AACH,cAAMf,MAAM,GAAG,KAAKzB,UAAL,CAAgByC,GAAhB,CAAf;;AACA,cAAIhE,MAAM,CAACqE,QAAP,IAAmBrB,MAAvB,EAA+B;AAC3BgB,YAAAA,GAAG,GAAGhB,MAAM,CAACxB,KAAP,CAAawC,GAAb,EAAkB;AACpBM,cAAAA,sBAAsB,EAAE;AACpBC,gBAAAA,QAAQ,EAAE,IADU;AAEpBV,gBAAAA,MAAM,EAAE7D,MAAM,CAAC6D,MAAP;AAFY;AADJ,aAAlB,CAAN;AAMH;;AACD,eAAKlC,GAAL,GAAW,KAAKY,aAAL,GAAqBiC,MAArB,CAA4BR,GAA5B,EAAiCD,QAAjC,CAAX;AACH;;AAED,eAAO,IAAP;AACH;;AAhIL;AAAA;;AAAA,WAkIIK,MAlIJ;AAkII,sBAAOK,QAAP,EAAiBV,QAAjB,EAA2B;AACvB,YAAI,KAAKpC,GAAT,EAAc;AACV,eAAKY,aAAL,GAAqB6B,MAArB,CAA4B,KAAKzC,GAAjC,EAAsC8C,QAAtC,EAAgDV,QAAhD;AACH;AACJ;;AAtIL;AAAA;;AAAA,WAwIIW,MAxIJ;AAwII,sBAAOX,QAAP,EAAiB;AACb,YAAI,KAAKpC,GAAT,EAAc;AACV,eAAKY,aAAL,GAAqBmC,MAArB,CAA4B;AAAE/C,YAAAA,GAAG,EAAE,KAAKA;AAAZ,WAA5B,EAA+CoC,QAA/C;AACH;AACJ;;AA5IL;AAAA;;AAAA;AAAA;AA8IH,CAzLD","sourcesContent":["/* eslint-disable import/no-unresolved */\nimport SimpleSchema from 'simpl-schema';\nimport MessageBox from 'message-box';\nimport { diff } from 'mongodb-diff';\n/* eslint-enable import/no-unresolved */\n\nexport default (Meteor) => {\n    /* We check for server code here to deal with a buffer issue in meteor-message-box\n     * This shouldn't be a major issue as I doubt we will need to display this error\n     * on the client at this point. Should be fixed though.\n     * https://github.com/aldeed/meteor-message-box/issues/1\n    */\n    if (Meteor.isServer) {\n        MessageBox.defaults({\n            messages: {\n                en: {\n                    Untrusted: 'Inserts/Updates from untrusted code not supported',\n                },\n            },\n        });\n    }\n\n    SimpleSchema.denyUntrusted = function denyUntrusted() {\n        if (this.isSet) {\n            const autoValue = this.definition.autoValue && this.definition.autoValue.call(this);\n            const { defaultValue } = this.definition;\n\n            if (this.value !== defaultValue && this.value !== autoValue && !this.isFromTrustedCode) {\n                return 'Untrusted';\n            }\n        }\n        return undefined;\n    };\n\n    function extend(receiver, provider) {\n        const rec = receiver;\n        for (const prop in provider) {\n            if (prop in provider) {\n                rec[prop] = provider[prop];\n            }\n        }\n    }\n\n    return class BaseModel {\n        constructor(document = {}, preClean) {\n            let doc = document;\n            if (preClean) {\n                doc = this._getSchema(doc).clean(doc);\n            }\n            extend(this, doc);\n            this.getDocument = function getDocument() {\n                return doc;\n            };\n        }\n\n        static createEmpty(_id) {\n            return new this({ _id });\n        }\n\n        static methods(methodMap) {\n            const self = this;\n            if ((typeof methodMap === 'function' || typeof methodMap === 'object') && !!methodMap) {\n                const keys = Object.keys(methodMap);\n                for (let i = 0, { length } = keys; i < length; i++) {\n                    const method = methodMap[keys[i]];\n\n                    if (typeof method === 'function') {\n                        if (!self.prototype[keys[i]]) {\n                            self.prototype[keys[i]] = method;\n                        } else {\n                            throw new Meteor.Error('existent-method', `The method ${keys[i]} already exists.`);\n                        }\n                    }\n                }\n            }\n        }\n\n        static updateTransformFunction() {\n            this.prototype.getCollection()._transform = document => new this(document);\n        }\n\n        static attachCollection(collection, transform = true) {\n            this.prototype.getCollection = function getCollection() {\n                return collection;\n            };\n\n            if (transform) {\n                this.updateTransformFunction();\n            }\n        }\n\n        static attachSchema(schemaInstance) {\n            const collection = this.prototype.getCollection();\n\n            if (collection) {\n                collection.attachSchema(schemaInstance);\n            } else {\n                throw new Meteor.Error(\"Can't append schema to non existent collection. Please attach a collection to your model using `ModelName.attachCollection`\");\n            }\n        }\n\n        static appendSchema(schemaObject) {\n            this.attachSchema(new SimpleSchema(schemaObject));\n        }\n\n        _getSchema(...args) {\n            const schema = this.getCollection().simpleSchema(...args);\n            if (schema) {\n                return schema;\n            }\n            throw new Meteor.Error('noSchema', `You don't have a schema defined for ${this.getCollectionName()}`);\n        }\n\n        getCollection() {\n            // We just throw here. This method is reassigned in attachCollection method when collection is attached.\n            if (this) throw new Meteor.Error('noCollection', 'You must use ClassName.attachCollection to attach a collection to your model.');\n        }\n\n        getCollectionName() {\n            return this.getCollection()._name;\n        }\n\n        // get all values from the model that do not have a denyUpdate or denyUntrusted in their schema\n        getUpdatableFields() {\n            const schemas = Meteor._get(this.getCollection(), '_c2', '_simpleSchemas');\n            const fields = { _id: this._id };\n\n            for (const key of Object.keys(this)) {\n                schemas.forEach(({ schema }) => {\n                    if (schema[key] && !(schema[key].custom && schema[key].custom === SimpleSchema.denyUntrusted) && !schema[key].denyUpdate) {\n                        fields[key] = this[key];\n                    }\n                });\n            }\n\n            return fields;\n        }\n\n        checkOwnership() {\n            return this.userId === Meteor.userId();\n        }\n\n        save(callback) {\n            let obj = Object.keys(this).reduce(\n                (accumulator, key) => {\n                    if (key !== 'getDocument') accumulator[key] = this[key]; // eslint-disable-line no-param-reassign\n                    return accumulator;\n                }, {},\n            );\n\n            if (this._id) {\n                const updateDiff = diff(this.getDocument(), obj);\n                if (updateDiff && Object.keys(updateDiff).length !== 0) {\n                    this.update(updateDiff, callback);\n                } else {\n                    callback && callback(null);\n                }\n            } else {\n                const schema = this._getSchema(obj);\n                if (Meteor.isClient && schema) {\n                    obj = schema.clean(obj, {\n                        extendAutoValueContext: {\n                            isInsert: true,\n                            userId: Meteor.userId(),\n                        },\n                    });\n                }\n                this._id = this.getCollection().insert(obj, callback);\n            }\n\n            return this;\n        }\n\n        update(modifier, callback) {\n            if (this._id) {\n                this.getCollection().update(this._id, modifier, callback);\n            }\n        }\n\n        remove(callback) {\n            if (this._id) {\n                this.getCollection().remove({ _id: this._id }, callback);\n            }\n        }\n    };\n};\n"]},"sourceType":"module","hash":"415cb5dbcd7384df3318274197ab208ee8fdb76d"}
