{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"C:\\Users\\RUBEN\\Desktop\\meteor-vue\\packages\\blaze\\template.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"packages/blaze/template.js","filename":"C:\\Users\\RUBEN\\Desktop\\meteor-vue\\packages\\blaze\\template.js","targets":{},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"C:\\Users\\RUBEN\\Desktop\\meteor-vue","root":"C:\\Users\\RUBEN\\Desktop\\meteor-vue","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.14.0","helpers":true,"useESModules":false,"corejs":false}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"C:\\Users\\RUBEN\\Desktop\\meteor-vue\\packages\\blaze\\template.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/blaze/template.js"}},"code":"let isObject;\nmodule.link(\"lodash.isobject\", {\n  default(v) {\n    isObject = v;\n  }\n\n}, 0);\nlet isFunction;\nmodule.link(\"lodash.isfunction\", {\n  default(v) {\n    isFunction = v;\n  }\n\n}, 1);\nlet has;\nmodule.link(\"lodash.has\", {\n  default(v) {\n    has = v;\n  }\n\n}, 2);\nlet isEmpty;\nmodule.link(\"lodash.isempty\", {\n  default(v) {\n    isEmpty = v;\n  }\n\n}, 3);\n\n// [new] Blaze.Template([viewName], renderFunction)\n//\n// `Blaze.Template` is the class of templates, like `Template.foo` in\n// Meteor, which is `instanceof Template`.\n//\n// `viewKind` is a string that looks like \"Template.foo\" for templates\n// defined by the compiler.\n\n/**\n * @class\n * @summary Constructor for a Template, which is used to construct Views with particular name and content.\n * @locus Client\n * @param {String} [viewName] Optional.  A name for Views constructed by this Template.  See [`view.name`](#view_name).\n * @param {Function} renderFunction A function that returns [*renderable content*](#Renderable-Content).  This function is used as the `renderFunction` for Views constructed by this Template.\n */\nBlaze.Template = function (viewName, renderFunction) {\n  if (!(this instanceof Blaze.Template)) // called without `new`\n    return new Blaze.Template(viewName, renderFunction);\n\n  if (typeof viewName === 'function') {\n    // omitted \"viewName\" argument\n    renderFunction = viewName;\n    viewName = '';\n  }\n\n  if (typeof viewName !== 'string') throw new Error(\"viewName must be a String (or omitted)\");\n  if (typeof renderFunction !== 'function') throw new Error(\"renderFunction must be a function\");\n  this.viewName = viewName;\n  this.renderFunction = renderFunction;\n  this.__helpers = new HelperMap();\n  this.__eventMaps = [];\n  this._callbacks = {\n    created: [],\n    rendered: [],\n    destroyed: []\n  };\n};\n\nvar Template = Blaze.Template;\n\nvar HelperMap = function () {};\n\nHelperMap.prototype.get = function (name) {\n  return this[' ' + name];\n};\n\nHelperMap.prototype.set = function (name, helper) {\n  this[' ' + name] = helper;\n};\n\nHelperMap.prototype.has = function (name) {\n  return typeof this[' ' + name] !== 'undefined';\n};\n/**\n * @summary Returns true if `value` is a template object like `Template.myTemplate`.\n * @locus Client\n * @param {Any} value The value to test.\n */\n\n\nBlaze.isTemplate = function (t) {\n  return t instanceof Blaze.Template;\n};\n/**\n * @name  onCreated\n * @instance\n * @memberOf Template\n * @summary Register a function to be called when an instance of this template is created.\n * @param {Function} callback A function to be added as a callback.\n * @locus Client\n * @importFromPackage templating\n */\n\n\nTemplate.prototype.onCreated = function (cb) {\n  this._callbacks.created.push(cb);\n};\n/**\n * @name  onRendered\n * @instance\n * @memberOf Template\n * @summary Register a function to be called when an instance of this template is inserted into the DOM.\n * @param {Function} callback A function to be added as a callback.\n * @locus Client\n * @importFromPackage templating\n */\n\n\nTemplate.prototype.onRendered = function (cb) {\n  this._callbacks.rendered.push(cb);\n};\n/**\n * @name  onDestroyed\n * @instance\n * @memberOf Template\n * @summary Register a function to be called when an instance of this template is removed from the DOM and destroyed.\n * @param {Function} callback A function to be added as a callback.\n * @locus Client\n * @importFromPackage templating\n */\n\n\nTemplate.prototype.onDestroyed = function (cb) {\n  this._callbacks.destroyed.push(cb);\n};\n\nTemplate.prototype._getCallbacks = function (which) {\n  var self = this;\n  var callbacks = self[which] ? [self[which]] : []; // Fire all callbacks added with the new API (Template.onRendered())\n  // as well as the old-style callback (e.g. Template.rendered) for\n  // backwards-compatibility.\n\n  callbacks = callbacks.concat(self._callbacks[which]);\n  return callbacks;\n};\n\nvar fireCallbacks = function (callbacks, template) {\n  Template._withTemplateInstanceFunc(function () {\n    return template;\n  }, function () {\n    for (var i = 0, N = callbacks.length; i < N; i++) {\n      callbacks[i].call(template);\n    }\n  });\n};\n\nTemplate.prototype.constructView = function (contentFunc, elseFunc) {\n  var self = this;\n  var view = Blaze.View(self.viewName, self.renderFunction);\n  view.template = self;\n  view.templateContentBlock = contentFunc ? new Template('(contentBlock)', contentFunc) : null;\n  view.templateElseBlock = elseFunc ? new Template('(elseBlock)', elseFunc) : null;\n\n  if (self.__eventMaps || typeof self.events === 'object') {\n    view._onViewRendered(function () {\n      if (view.renderCount !== 1) return;\n\n      if (!self.__eventMaps.length && typeof self.events === \"object\") {\n        // Provide limited back-compat support for `.events = {...}`\n        // syntax.  Pass `template.events` to the original `.events(...)`\n        // function.  This code must run only once per template, in\n        // order to not bind the handlers more than once, which is\n        // ensured by the fact that we only do this when `__eventMaps`\n        // is falsy, and we cause it to be set now.\n        Template.prototype.events.call(self, self.events);\n      }\n\n      self.__eventMaps.forEach(function (m) {\n        Blaze._addEventMap(view, m, view);\n      });\n    });\n  }\n\n  view._templateInstance = new Blaze.TemplateInstance(view);\n\n  view.templateInstance = function () {\n    // Update data, firstNode, and lastNode, and return the TemplateInstance\n    // object.\n    var inst = view._templateInstance;\n    /**\n     * @instance\n     * @memberOf Blaze.TemplateInstance\n     * @name  data\n     * @summary The data context of this instance's latest invocation.\n     * @locus Client\n     */\n\n    inst.data = Blaze.getData(view);\n\n    if (view._domrange && !view.isDestroyed) {\n      inst.firstNode = view._domrange.firstNode();\n      inst.lastNode = view._domrange.lastNode();\n    } else {\n      // on 'created' or 'destroyed' callbacks we don't have a DomRange\n      inst.firstNode = null;\n      inst.lastNode = null;\n    }\n\n    return inst;\n  };\n  /**\n   * @name  created\n   * @instance\n   * @memberOf Template\n   * @summary Provide a callback when an instance of a template is created.\n   * @locus Client\n   * @deprecated in 1.1\n   */\n  // To avoid situations when new callbacks are added in between view\n  // instantiation and event being fired, decide on all callbacks to fire\n  // immediately and then fire them on the event.\n\n\n  var createdCallbacks = self._getCallbacks('created');\n\n  view.onViewCreated(function () {\n    fireCallbacks(createdCallbacks, view.templateInstance());\n  });\n  /**\n   * @name  rendered\n   * @instance\n   * @memberOf Template\n   * @summary Provide a callback when an instance of a template is rendered.\n   * @locus Client\n   * @deprecated in 1.1\n   */\n\n  var renderedCallbacks = self._getCallbacks('rendered');\n\n  view.onViewReady(function () {\n    fireCallbacks(renderedCallbacks, view.templateInstance());\n  });\n  /**\n   * @name  destroyed\n   * @instance\n   * @memberOf Template\n   * @summary Provide a callback when an instance of a template is destroyed.\n   * @locus Client\n   * @deprecated in 1.1\n   */\n\n  var destroyedCallbacks = self._getCallbacks('destroyed');\n\n  view.onViewDestroyed(function () {\n    fireCallbacks(destroyedCallbacks, view.templateInstance());\n  });\n  return view;\n};\n/**\n * @class\n * @summary The class for template instances\n * @param {Blaze.View} view\n * @instanceName template\n */\n\n\nBlaze.TemplateInstance = function (view) {\n  if (!(this instanceof Blaze.TemplateInstance)) // called without `new`\n    return new Blaze.TemplateInstance(view);\n  if (!(view instanceof Blaze.View)) throw new Error(\"View required\");\n  view._templateInstance = this;\n  /**\n   * @name view\n   * @memberOf Blaze.TemplateInstance\n   * @instance\n   * @summary The [View](../api/blaze.html#Blaze-View) object for this invocation of the template.\n   * @locus Client\n   * @type {Blaze.View}\n   */\n\n  this.view = view;\n  this.data = null;\n  /**\n   * @name firstNode\n   * @memberOf Blaze.TemplateInstance\n   * @instance\n   * @summary The first top-level DOM node in this template instance.\n   * @locus Client\n   * @type {DOMNode}\n   */\n\n  this.firstNode = null;\n  /**\n   * @name lastNode\n   * @memberOf Blaze.TemplateInstance\n   * @instance\n   * @summary The last top-level DOM node in this template instance.\n   * @locus Client\n   * @type {DOMNode}\n   */\n\n  this.lastNode = null; // This dependency is used to identify state transitions in\n  // _subscriptionHandles which could cause the result of\n  // TemplateInstance#subscriptionsReady to change. Basically this is triggered\n  // whenever a new subscription handle is added or when a subscription handle\n  // is removed and they are not ready.\n\n  this._allSubsReadyDep = new Tracker.Dependency();\n  this._allSubsReady = false;\n  this._subscriptionHandles = {};\n};\n/**\n * @summary Find all elements matching `selector` in this template instance, and return them as a JQuery object.\n * @locus Client\n * @param {String} selector The CSS selector to match, scoped to the template contents.\n * @returns {DOMNode[]}\n */\n\n\nBlaze.TemplateInstance.prototype.$ = function (selector) {\n  var view = this.view;\n  if (!view._domrange) throw new Error(\"Can't use $ on template instance with no DOM\");\n  return view._domrange.$(selector);\n};\n/**\n * @summary Find all elements matching `selector` in this template instance.\n * @locus Client\n * @param {String} selector The CSS selector to match, scoped to the template contents.\n * @returns {DOMElement[]}\n */\n\n\nBlaze.TemplateInstance.prototype.findAll = function (selector) {\n  return Array.prototype.slice.call(this.$(selector));\n};\n/**\n * @summary Find one element matching `selector` in this template instance.\n * @locus Client\n * @param {String} selector The CSS selector to match, scoped to the template contents.\n * @returns {DOMElement}\n */\n\n\nBlaze.TemplateInstance.prototype.find = function (selector) {\n  var result = this.$(selector);\n  return result[0] || null;\n};\n/**\n * @summary A version of [Tracker.autorun](https://docs.meteor.com/api/tracker.html#Tracker-autorun) that is stopped when the template is destroyed.\n * @locus Client\n * @param {Function} runFunc The function to run. It receives one argument: a Tracker.Computation object.\n */\n\n\nBlaze.TemplateInstance.prototype.autorun = function (f) {\n  return this.view.autorun(f);\n};\n/**\n * @summary A version of [Meteor.subscribe](https://docs.meteor.com/api/pubsub.html#Meteor-subscribe) that is stopped\n * when the template is destroyed.\n * @return {SubscriptionHandle} The subscription handle to the newly made\n * subscription. Call `handle.stop()` to manually stop the subscription, or\n * `handle.ready()` to find out if this particular subscription has loaded all\n * of its inital data.\n * @locus Client\n * @param {String} name Name of the subscription.  Matches the name of the\n * server's `publish()` call.\n * @param {Any} [arg1,arg2...] Optional arguments passed to publisher function\n * on server.\n * @param {Function|Object} [options] If a function is passed instead of an\n * object, it is interpreted as an `onReady` callback.\n * @param {Function} [options.onReady] Passed to [`Meteor.subscribe`](https://docs.meteor.com/api/pubsub.html#Meteor-subscribe).\n * @param {Function} [options.onStop] Passed to [`Meteor.subscribe`](https://docs.meteor.com/api/pubsub.html#Meteor-subscribe).\n * @param {DDP.Connection} [options.connection] The connection on which to make the\n * subscription.\n */\n\n\nBlaze.TemplateInstance.prototype.subscribe = function () {\n  var self = this;\n  var subHandles = self._subscriptionHandles; // Duplicate logic from Meteor.subscribe\n\n  var options = {};\n\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  if (args.length) {\n    var lastParam = args[args.length - 1]; // Match pattern to check if the last arg is an options argument\n\n    var lastParamOptionsPattern = {\n      onReady: Match.Optional(Function),\n      // XXX COMPAT WITH 1.0.3.1 onError used to exist, but now we use\n      // onStop with an error callback instead.\n      onError: Match.Optional(Function),\n      onStop: Match.Optional(Function),\n      connection: Match.Optional(Match.Any)\n    };\n\n    if (isFunction(lastParam)) {\n      options.onReady = args.pop();\n    } else if (lastParam && !isEmpty(lastParam) && Match.test(lastParam, lastParamOptionsPattern)) {\n      options = args.pop();\n    }\n  }\n\n  var subHandle;\n  var oldStopped = options.onStop;\n\n  options.onStop = function (error) {\n    // When the subscription is stopped, remove it from the set of tracked\n    // subscriptions to avoid this list growing without bound\n    delete subHandles[subHandle.subscriptionId]; // Removing a subscription can only change the result of subscriptionsReady\n    // if we are not ready (that subscription could be the one blocking us being\n    // ready).\n\n    if (!self._allSubsReady) {\n      self._allSubsReadyDep.changed();\n    }\n\n    if (oldStopped) {\n      oldStopped(error);\n    }\n  };\n\n  var connection = options.connection;\n  const {\n    onReady,\n    onError,\n    onStop\n  } = options;\n  var callbacks = {\n    onReady,\n    onError,\n    onStop\n  }; // The callbacks are passed as the last item in the arguments array passed to\n  // View#subscribe\n\n  args.push(callbacks); // View#subscribe takes the connection as one of the options in the last\n  // argument\n\n  subHandle = self.view.subscribe.call(self.view, args, {\n    connection: connection\n  });\n\n  if (!has(subHandles, subHandle.subscriptionId)) {\n    subHandles[subHandle.subscriptionId] = subHandle; // Adding a new subscription will always cause us to transition from ready\n    // to not ready, but if we are already not ready then this can't make us\n    // ready.\n\n    if (self._allSubsReady) {\n      self._allSubsReadyDep.changed();\n    }\n  }\n\n  return subHandle;\n};\n/**\n * @summary A reactive function that returns true when all of the subscriptions\n * called with [this.subscribe](#TemplateInstance-subscribe) are ready.\n * @return {Boolean} True if all subscriptions on this template instance are\n * ready.\n */\n\n\nBlaze.TemplateInstance.prototype.subscriptionsReady = function () {\n  this._allSubsReadyDep.depend();\n\n  this._allSubsReady = Object.values(this._subscriptionHandles).every(handle => {\n    return handle.ready();\n  });\n  return this._allSubsReady;\n};\n/**\n * @summary Specify template helpers available to this template.\n * @locus Client\n * @param {Object} helpers Dictionary of helper functions by name.\n * @importFromPackage templating\n */\n\n\nTemplate.prototype.helpers = function (dict) {\n  if (!isObject(dict)) {\n    throw new Error(\"Helpers dictionary has to be an object\");\n  }\n\n  for (var k in dict) this.__helpers.set(k, dict[k]);\n};\n\nvar canUseGetters = function () {\n  if (Object.defineProperty) {\n    var obj = {};\n\n    try {\n      Object.defineProperty(obj, \"self\", {\n        get: function () {\n          return obj;\n        }\n      });\n    } catch (e) {\n      return false;\n    }\n\n    return obj.self === obj;\n  }\n\n  return false;\n}();\n\nif (canUseGetters) {\n  // Like Blaze.currentView but for the template instance. A function\n  // rather than a value so that not all helpers are implicitly dependent\n  // on the current template instance's `data` property, which would make\n  // them dependent on the data context of the template inclusion.\n  var currentTemplateInstanceFunc = null; // If getters are supported, define this property with a getter function\n  // to make it effectively read-only, and to work around this bizarre JSC\n  // bug: https://github.com/meteor/meteor/issues/9926\n\n  Object.defineProperty(Template, \"_currentTemplateInstanceFunc\", {\n    get: function () {\n      return currentTemplateInstanceFunc;\n    }\n  });\n\n  Template._withTemplateInstanceFunc = function (templateInstanceFunc, func) {\n    if (typeof func !== 'function') {\n      throw new Error(\"Expected function, got: \" + func);\n    }\n\n    var oldTmplInstanceFunc = currentTemplateInstanceFunc;\n\n    try {\n      currentTemplateInstanceFunc = templateInstanceFunc;\n      return func();\n    } finally {\n      currentTemplateInstanceFunc = oldTmplInstanceFunc;\n    }\n  };\n} else {\n  // If getters are not supported, just use a normal property.\n  Template._currentTemplateInstanceFunc = null;\n\n  Template._withTemplateInstanceFunc = function (templateInstanceFunc, func) {\n    if (typeof func !== 'function') {\n      throw new Error(\"Expected function, got: \" + func);\n    }\n\n    var oldTmplInstanceFunc = Template._currentTemplateInstanceFunc;\n\n    try {\n      Template._currentTemplateInstanceFunc = templateInstanceFunc;\n      return func();\n    } finally {\n      Template._currentTemplateInstanceFunc = oldTmplInstanceFunc;\n    }\n  };\n}\n/**\n * @summary Specify event handlers for this template.\n * @locus Client\n * @param {EventMap} eventMap Event handlers to associate with this template.\n * @importFromPackage templating\n */\n\n\nTemplate.prototype.events = function (eventMap) {\n  if (!isObject(eventMap)) {\n    throw new Error(\"Event map has to be an object\");\n  }\n\n  var template = this;\n  var eventMap2 = {};\n\n  for (var k in eventMap) {\n    eventMap2[k] = function (k, v) {\n      return function (event\n      /*, ...*/\n      ) {\n        var view = this; // passed by EventAugmenter\n\n        var data = Blaze.getData(event.currentTarget);\n        if (data == null) data = {};\n        var args = Array.prototype.slice.call(arguments);\n\n        var tmplInstanceFunc = Blaze._bind(view.templateInstance, view);\n\n        args.splice(1, 0, tmplInstanceFunc());\n        return Template._withTemplateInstanceFunc(tmplInstanceFunc, function () {\n          return v.apply(data, args);\n        });\n      };\n    }(k, eventMap[k]);\n  }\n\n  template.__eventMaps.push(eventMap2);\n};\n/**\n * @function\n * @name instance\n * @memberOf Template\n * @summary The [template instance](#Template-instances) corresponding to the current template helper, event handler, callback, or autorun.  If there isn't one, `null`.\n * @locus Client\n * @returns {Blaze.TemplateInstance}\n * @importFromPackage templating\n */\n\n\nTemplate.instance = function () {\n  return Template._currentTemplateInstanceFunc && Template._currentTemplateInstanceFunc();\n}; // Note: Template.currentData() is documented to take zero arguments,\n// while Blaze.getData takes up to one.\n\n/**\n * @summary\n *\n * - Inside an `onCreated`, `onRendered`, or `onDestroyed` callback, returns\n * the data context of the template.\n * - Inside an event handler, returns the data context of the template on which\n * this event handler was defined.\n * - Inside a helper, returns the data context of the DOM node where the helper\n * was used.\n *\n * Establishes a reactive dependency on the result.\n * @locus Client\n * @function\n * @importFromPackage templating\n */\n\n\nTemplate.currentData = Blaze.getData;\n/**\n * @summary Accesses other data contexts that enclose the current data context.\n * @locus Client\n * @function\n * @param {Integer} [numLevels] The number of levels beyond the current data context to look. Defaults to 1.\n * @importFromPackage templating\n */\n\nTemplate.parentData = Blaze._parentData;\n/**\n * @summary Defines a [helper function](#Template-helpers) which can be used from all templates.\n * @locus Client\n * @function\n * @param {String} name The name of the helper function you are defining.\n * @param {Function} function The helper function itself.\n * @importFromPackage templating\n */\n\nTemplate.registerHelper = Blaze.registerHelper;\n/**\n * @summary Removes a global [helper function](#Template-helpers).\n * @locus Client\n * @function\n * @param {String} name The name of the helper function you are defining.\n * @importFromPackage templating\n */\n\nTemplate.deregisterHelper = Blaze.deregisterHelper;","map":{"version":3,"sources":["packages/blaze/template.js"],"names":["isObject","module","link","default","v","isFunction","has","isEmpty","Blaze","Template","viewName","renderFunction","Error","__helpers","HelperMap","__eventMaps","_callbacks","created","rendered","destroyed","prototype","get","name","set","helper","isTemplate","t","onCreated","cb","push","onRendered","onDestroyed","_getCallbacks","which","self","callbacks","concat","fireCallbacks","template","_withTemplateInstanceFunc","i","N","length","call","constructView","contentFunc","elseFunc","view","View","templateContentBlock","templateElseBlock","events","_onViewRendered","renderCount","forEach","m","_addEventMap","_templateInstance","TemplateInstance","templateInstance","inst","data","getData","_domrange","isDestroyed","firstNode","lastNode","createdCallbacks","onViewCreated","renderedCallbacks","onViewReady","destroyedCallbacks","onViewDestroyed","_allSubsReadyDep","Tracker","Dependency","_allSubsReady","_subscriptionHandles","$","selector","findAll","Array","slice","find","result","autorun","f","subscribe","subHandles","options","args","lastParam","lastParamOptionsPattern","onReady","Match","Optional","Function","onError","onStop","connection","Any","pop","test","subHandle","oldStopped","error","subscriptionId","changed","subscriptionsReady","depend","Object","values","every","handle","ready","helpers","dict","k","canUseGetters","defineProperty","obj","e","currentTemplateInstanceFunc","templateInstanceFunc","func","oldTmplInstanceFunc","_currentTemplateInstanceFunc","eventMap","eventMap2","event","currentTarget","arguments","tmplInstanceFunc","_bind","splice","apply","instance","currentData","parentData","_parentData","registerHelper","deregisterHelper"],"mappings":"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","sourcesContent":["import isObject from 'lodash.isobject';\nimport isFunction from 'lodash.isfunction';\nimport has from 'lodash.has';\nimport isEmpty from 'lodash.isempty';\n\n// [new] Blaze.Template([viewName], renderFunction)\n//\n// `Blaze.Template` is the class of templates, like `Template.foo` in\n// Meteor, which is `instanceof Template`.\n//\n// `viewKind` is a string that looks like \"Template.foo\" for templates\n// defined by the compiler.\n\n/**\n * @class\n * @summary Constructor for a Template, which is used to construct Views with particular name and content.\n * @locus Client\n * @param {String} [viewName] Optional.  A name for Views constructed by this Template.  See [`view.name`](#view_name).\n * @param {Function} renderFunction A function that returns [*renderable content*](#Renderable-Content).  This function is used as the `renderFunction` for Views constructed by this Template.\n */\nBlaze.Template = function (viewName, renderFunction) {\n  if (! (this instanceof Blaze.Template))\n    // called without `new`\n    return new Blaze.Template(viewName, renderFunction);\n\n  if (typeof viewName === 'function') {\n    // omitted \"viewName\" argument\n    renderFunction = viewName;\n    viewName = '';\n  }\n  if (typeof viewName !== 'string')\n    throw new Error(\"viewName must be a String (or omitted)\");\n  if (typeof renderFunction !== 'function')\n    throw new Error(\"renderFunction must be a function\");\n\n  this.viewName = viewName;\n  this.renderFunction = renderFunction;\n\n  this.__helpers = new HelperMap;\n  this.__eventMaps = [];\n\n  this._callbacks = {\n    created: [],\n    rendered: [],\n    destroyed: []\n  };\n};\nvar Template = Blaze.Template;\n\nvar HelperMap = function () {};\nHelperMap.prototype.get = function (name) {\n  return this[' '+name];\n};\nHelperMap.prototype.set = function (name, helper) {\n  this[' '+name] = helper;\n};\nHelperMap.prototype.has = function (name) {\n  return (typeof this[' '+name] !== 'undefined');\n};\n\n/**\n * @summary Returns true if `value` is a template object like `Template.myTemplate`.\n * @locus Client\n * @param {Any} value The value to test.\n */\nBlaze.isTemplate = function (t) {\n  return (t instanceof Blaze.Template);\n};\n\n/**\n * @name  onCreated\n * @instance\n * @memberOf Template\n * @summary Register a function to be called when an instance of this template is created.\n * @param {Function} callback A function to be added as a callback.\n * @locus Client\n * @importFromPackage templating\n */\nTemplate.prototype.onCreated = function (cb) {\n  this._callbacks.created.push(cb);\n};\n\n/**\n * @name  onRendered\n * @instance\n * @memberOf Template\n * @summary Register a function to be called when an instance of this template is inserted into the DOM.\n * @param {Function} callback A function to be added as a callback.\n * @locus Client\n * @importFromPackage templating\n */\nTemplate.prototype.onRendered = function (cb) {\n  this._callbacks.rendered.push(cb);\n};\n\n/**\n * @name  onDestroyed\n * @instance\n * @memberOf Template\n * @summary Register a function to be called when an instance of this template is removed from the DOM and destroyed.\n * @param {Function} callback A function to be added as a callback.\n * @locus Client\n * @importFromPackage templating\n */\nTemplate.prototype.onDestroyed = function (cb) {\n  this._callbacks.destroyed.push(cb);\n};\n\nTemplate.prototype._getCallbacks = function (which) {\n  var self = this;\n  var callbacks = self[which] ? [self[which]] : [];\n  // Fire all callbacks added with the new API (Template.onRendered())\n  // as well as the old-style callback (e.g. Template.rendered) for\n  // backwards-compatibility.\n  callbacks = callbacks.concat(self._callbacks[which]);\n  return callbacks;\n};\n\nvar fireCallbacks = function (callbacks, template) {\n  Template._withTemplateInstanceFunc(\n    function () { return template; },\n    function () {\n      for (var i = 0, N = callbacks.length; i < N; i++) {\n        callbacks[i].call(template);\n      }\n    });\n};\n\nTemplate.prototype.constructView = function (contentFunc, elseFunc) {\n  var self = this;\n  var view = Blaze.View(self.viewName, self.renderFunction);\n  view.template = self;\n\n  view.templateContentBlock = (\n    contentFunc ? new Template('(contentBlock)', contentFunc) : null);\n  view.templateElseBlock = (\n    elseFunc ? new Template('(elseBlock)', elseFunc) : null);\n\n  if (self.__eventMaps || typeof self.events === 'object') {\n    view._onViewRendered(function () {\n      if (view.renderCount !== 1)\n        return;\n\n      if (! self.__eventMaps.length && typeof self.events === \"object\") {\n        // Provide limited back-compat support for `.events = {...}`\n        // syntax.  Pass `template.events` to the original `.events(...)`\n        // function.  This code must run only once per template, in\n        // order to not bind the handlers more than once, which is\n        // ensured by the fact that we only do this when `__eventMaps`\n        // is falsy, and we cause it to be set now.\n        Template.prototype.events.call(self, self.events);\n      }\n\n      self.__eventMaps.forEach(function (m) {\n        Blaze._addEventMap(view, m, view);\n      });\n    });\n  }\n\n  view._templateInstance = new Blaze.TemplateInstance(view);\n  view.templateInstance = function () {\n    // Update data, firstNode, and lastNode, and return the TemplateInstance\n    // object.\n    var inst = view._templateInstance;\n\n    /**\n     * @instance\n     * @memberOf Blaze.TemplateInstance\n     * @name  data\n     * @summary The data context of this instance's latest invocation.\n     * @locus Client\n     */\n    inst.data = Blaze.getData(view);\n\n    if (view._domrange && !view.isDestroyed) {\n      inst.firstNode = view._domrange.firstNode();\n      inst.lastNode = view._domrange.lastNode();\n    } else {\n      // on 'created' or 'destroyed' callbacks we don't have a DomRange\n      inst.firstNode = null;\n      inst.lastNode = null;\n    }\n\n    return inst;\n  };\n\n  /**\n   * @name  created\n   * @instance\n   * @memberOf Template\n   * @summary Provide a callback when an instance of a template is created.\n   * @locus Client\n   * @deprecated in 1.1\n   */\n  // To avoid situations when new callbacks are added in between view\n  // instantiation and event being fired, decide on all callbacks to fire\n  // immediately and then fire them on the event.\n  var createdCallbacks = self._getCallbacks('created');\n  view.onViewCreated(function () {\n    fireCallbacks(createdCallbacks, view.templateInstance());\n  });\n\n  /**\n   * @name  rendered\n   * @instance\n   * @memberOf Template\n   * @summary Provide a callback when an instance of a template is rendered.\n   * @locus Client\n   * @deprecated in 1.1\n   */\n  var renderedCallbacks = self._getCallbacks('rendered');\n  view.onViewReady(function () {\n    fireCallbacks(renderedCallbacks, view.templateInstance());\n  });\n\n  /**\n   * @name  destroyed\n   * @instance\n   * @memberOf Template\n   * @summary Provide a callback when an instance of a template is destroyed.\n   * @locus Client\n   * @deprecated in 1.1\n   */\n  var destroyedCallbacks = self._getCallbacks('destroyed');\n  view.onViewDestroyed(function () {\n    fireCallbacks(destroyedCallbacks, view.templateInstance());\n  });\n\n  return view;\n};\n\n/**\n * @class\n * @summary The class for template instances\n * @param {Blaze.View} view\n * @instanceName template\n */\nBlaze.TemplateInstance = function (view) {\n  if (! (this instanceof Blaze.TemplateInstance))\n    // called without `new`\n    return new Blaze.TemplateInstance(view);\n\n  if (! (view instanceof Blaze.View))\n    throw new Error(\"View required\");\n\n  view._templateInstance = this;\n\n  /**\n   * @name view\n   * @memberOf Blaze.TemplateInstance\n   * @instance\n   * @summary The [View](../api/blaze.html#Blaze-View) object for this invocation of the template.\n   * @locus Client\n   * @type {Blaze.View}\n   */\n  this.view = view;\n  this.data = null;\n\n  /**\n   * @name firstNode\n   * @memberOf Blaze.TemplateInstance\n   * @instance\n   * @summary The first top-level DOM node in this template instance.\n   * @locus Client\n   * @type {DOMNode}\n   */\n  this.firstNode = null;\n\n  /**\n   * @name lastNode\n   * @memberOf Blaze.TemplateInstance\n   * @instance\n   * @summary The last top-level DOM node in this template instance.\n   * @locus Client\n   * @type {DOMNode}\n   */\n  this.lastNode = null;\n\n  // This dependency is used to identify state transitions in\n  // _subscriptionHandles which could cause the result of\n  // TemplateInstance#subscriptionsReady to change. Basically this is triggered\n  // whenever a new subscription handle is added or when a subscription handle\n  // is removed and they are not ready.\n  this._allSubsReadyDep = new Tracker.Dependency();\n  this._allSubsReady = false;\n\n  this._subscriptionHandles = {};\n};\n\n/**\n * @summary Find all elements matching `selector` in this template instance, and return them as a JQuery object.\n * @locus Client\n * @param {String} selector The CSS selector to match, scoped to the template contents.\n * @returns {DOMNode[]}\n */\nBlaze.TemplateInstance.prototype.$ = function (selector) {\n  var view = this.view;\n  if (! view._domrange)\n    throw new Error(\"Can't use $ on template instance with no DOM\");\n  return view._domrange.$(selector);\n};\n\n/**\n * @summary Find all elements matching `selector` in this template instance.\n * @locus Client\n * @param {String} selector The CSS selector to match, scoped to the template contents.\n * @returns {DOMElement[]}\n */\nBlaze.TemplateInstance.prototype.findAll = function (selector) {\n  return Array.prototype.slice.call(this.$(selector));\n};\n\n/**\n * @summary Find one element matching `selector` in this template instance.\n * @locus Client\n * @param {String} selector The CSS selector to match, scoped to the template contents.\n * @returns {DOMElement}\n */\nBlaze.TemplateInstance.prototype.find = function (selector) {\n  var result = this.$(selector);\n  return result[0] || null;\n};\n\n/**\n * @summary A version of [Tracker.autorun](https://docs.meteor.com/api/tracker.html#Tracker-autorun) that is stopped when the template is destroyed.\n * @locus Client\n * @param {Function} runFunc The function to run. It receives one argument: a Tracker.Computation object.\n */\nBlaze.TemplateInstance.prototype.autorun = function (f) {\n  return this.view.autorun(f);\n};\n\n/**\n * @summary A version of [Meteor.subscribe](https://docs.meteor.com/api/pubsub.html#Meteor-subscribe) that is stopped\n * when the template is destroyed.\n * @return {SubscriptionHandle} The subscription handle to the newly made\n * subscription. Call `handle.stop()` to manually stop the subscription, or\n * `handle.ready()` to find out if this particular subscription has loaded all\n * of its inital data.\n * @locus Client\n * @param {String} name Name of the subscription.  Matches the name of the\n * server's `publish()` call.\n * @param {Any} [arg1,arg2...] Optional arguments passed to publisher function\n * on server.\n * @param {Function|Object} [options] If a function is passed instead of an\n * object, it is interpreted as an `onReady` callback.\n * @param {Function} [options.onReady] Passed to [`Meteor.subscribe`](https://docs.meteor.com/api/pubsub.html#Meteor-subscribe).\n * @param {Function} [options.onStop] Passed to [`Meteor.subscribe`](https://docs.meteor.com/api/pubsub.html#Meteor-subscribe).\n * @param {DDP.Connection} [options.connection] The connection on which to make the\n * subscription.\n */\nBlaze.TemplateInstance.prototype.subscribe = function (...args) {\n  var self = this;\n\n  var subHandles = self._subscriptionHandles;\n\n  // Duplicate logic from Meteor.subscribe\n  var options = {};\n  if (args.length) {\n    var lastParam = args[args.length - 1];\n\n    // Match pattern to check if the last arg is an options argument\n    var lastParamOptionsPattern = {\n      onReady: Match.Optional(Function),\n      // XXX COMPAT WITH 1.0.3.1 onError used to exist, but now we use\n      // onStop with an error callback instead.\n      onError: Match.Optional(Function),\n      onStop: Match.Optional(Function),\n      connection: Match.Optional(Match.Any)\n    };\n\n    if (isFunction(lastParam)) {\n      options.onReady = args.pop();\n    } else if (lastParam && ! isEmpty(lastParam) && Match.test(lastParam, lastParamOptionsPattern)) {\n      options = args.pop();\n    }\n  }\n\n  var subHandle;\n  var oldStopped = options.onStop;\n  options.onStop = function (error) {\n    // When the subscription is stopped, remove it from the set of tracked\n    // subscriptions to avoid this list growing without bound\n    delete subHandles[subHandle.subscriptionId];\n\n    // Removing a subscription can only change the result of subscriptionsReady\n    // if we are not ready (that subscription could be the one blocking us being\n    // ready).\n    if (! self._allSubsReady) {\n      self._allSubsReadyDep.changed();\n    }\n\n    if (oldStopped) {\n      oldStopped(error);\n    }\n  };\n\n  var connection = options.connection;\n  const { onReady, onError, onStop } = options;\n  var callbacks = { onReady, onError, onStop };\n\n  // The callbacks are passed as the last item in the arguments array passed to\n  // View#subscribe\n  args.push(callbacks);\n\n  // View#subscribe takes the connection as one of the options in the last\n  // argument\n  subHandle = self.view.subscribe.call(self.view, args, {\n    connection: connection\n  });\n\n  if (!has(subHandles, subHandle.subscriptionId)) {\n    subHandles[subHandle.subscriptionId] = subHandle;\n\n    // Adding a new subscription will always cause us to transition from ready\n    // to not ready, but if we are already not ready then this can't make us\n    // ready.\n    if (self._allSubsReady) {\n      self._allSubsReadyDep.changed();\n    }\n  }\n\n  return subHandle;\n};\n\n/**\n * @summary A reactive function that returns true when all of the subscriptions\n * called with [this.subscribe](#TemplateInstance-subscribe) are ready.\n * @return {Boolean} True if all subscriptions on this template instance are\n * ready.\n */\nBlaze.TemplateInstance.prototype.subscriptionsReady = function () {\n  this._allSubsReadyDep.depend();\n  this._allSubsReady = Object.values(this._subscriptionHandles).every((handle) => {  \n    return handle.ready();\n  });\n\n  return this._allSubsReady;\n};\n\n/**\n * @summary Specify template helpers available to this template.\n * @locus Client\n * @param {Object} helpers Dictionary of helper functions by name.\n * @importFromPackage templating\n */\nTemplate.prototype.helpers = function (dict) {\n  if (!isObject(dict)) {\n    throw new Error(\"Helpers dictionary has to be an object\");\n  }\n\n  for (var k in dict) this.__helpers.set(k, dict[k]);\n};\n\nvar canUseGetters = (function () {\n  if (Object.defineProperty) {\n    var obj = {};\n    try {\n      Object.defineProperty(obj, \"self\", {\n        get: function () { return obj; }\n      });\n    } catch (e) {\n      return false;\n    }\n    return obj.self === obj;\n  }\n  return false;\n})();\n\nif (canUseGetters) {\n  // Like Blaze.currentView but for the template instance. A function\n  // rather than a value so that not all helpers are implicitly dependent\n  // on the current template instance's `data` property, which would make\n  // them dependent on the data context of the template inclusion.\n  var currentTemplateInstanceFunc = null;\n\n  // If getters are supported, define this property with a getter function\n  // to make it effectively read-only, and to work around this bizarre JSC\n  // bug: https://github.com/meteor/meteor/issues/9926\n  Object.defineProperty(Template, \"_currentTemplateInstanceFunc\", {\n    get: function () {\n      return currentTemplateInstanceFunc;\n    }\n  });\n\n  Template._withTemplateInstanceFunc = function (templateInstanceFunc, func) {\n    if (typeof func !== 'function') {\n      throw new Error(\"Expected function, got: \" + func);\n    }\n    var oldTmplInstanceFunc = currentTemplateInstanceFunc;\n    try {\n      currentTemplateInstanceFunc = templateInstanceFunc;\n      return func();\n    } finally {\n      currentTemplateInstanceFunc = oldTmplInstanceFunc;\n    }\n  };\n} else {\n  // If getters are not supported, just use a normal property.\n  Template._currentTemplateInstanceFunc = null;\n\n  Template._withTemplateInstanceFunc = function (templateInstanceFunc, func) {\n    if (typeof func !== 'function') {\n      throw new Error(\"Expected function, got: \" + func);\n    }\n    var oldTmplInstanceFunc = Template._currentTemplateInstanceFunc;\n    try {\n      Template._currentTemplateInstanceFunc = templateInstanceFunc;\n      return func();\n    } finally {\n      Template._currentTemplateInstanceFunc = oldTmplInstanceFunc;\n    }\n  };\n}\n\n/**\n * @summary Specify event handlers for this template.\n * @locus Client\n * @param {EventMap} eventMap Event handlers to associate with this template.\n * @importFromPackage templating\n */\nTemplate.prototype.events = function (eventMap) {\n  if (!isObject(eventMap)) {\n    throw new Error(\"Event map has to be an object\");\n  }\n\n  var template = this;\n  var eventMap2 = {};\n  for (var k in eventMap) {\n    eventMap2[k] = (function (k, v) {\n      return function (event /*, ...*/) {\n        var view = this; // passed by EventAugmenter\n        var data = Blaze.getData(event.currentTarget);\n        if (data == null) data = {};\n        var args = Array.prototype.slice.call(arguments);\n        var tmplInstanceFunc = Blaze._bind(view.templateInstance, view);\n        args.splice(1, 0, tmplInstanceFunc());\n\n        return Template._withTemplateInstanceFunc(tmplInstanceFunc, function () {\n          return v.apply(data, args);\n        });\n      };\n    })(k, eventMap[k]);\n  }\n\n  template.__eventMaps.push(eventMap2);\n};\n\n/**\n * @function\n * @name instance\n * @memberOf Template\n * @summary The [template instance](#Template-instances) corresponding to the current template helper, event handler, callback, or autorun.  If there isn't one, `null`.\n * @locus Client\n * @returns {Blaze.TemplateInstance}\n * @importFromPackage templating\n */\nTemplate.instance = function () {\n  return Template._currentTemplateInstanceFunc\n    && Template._currentTemplateInstanceFunc();\n};\n\n// Note: Template.currentData() is documented to take zero arguments,\n// while Blaze.getData takes up to one.\n\n/**\n * @summary\n *\n * - Inside an `onCreated`, `onRendered`, or `onDestroyed` callback, returns\n * the data context of the template.\n * - Inside an event handler, returns the data context of the template on which\n * this event handler was defined.\n * - Inside a helper, returns the data context of the DOM node where the helper\n * was used.\n *\n * Establishes a reactive dependency on the result.\n * @locus Client\n * @function\n * @importFromPackage templating\n */\nTemplate.currentData = Blaze.getData;\n\n/**\n * @summary Accesses other data contexts that enclose the current data context.\n * @locus Client\n * @function\n * @param {Integer} [numLevels] The number of levels beyond the current data context to look. Defaults to 1.\n * @importFromPackage templating\n */\nTemplate.parentData = Blaze._parentData;\n\n/**\n * @summary Defines a [helper function](#Template-helpers) which can be used from all templates.\n * @locus Client\n * @function\n * @param {String} name The name of the helper function you are defining.\n * @param {Function} function The helper function itself.\n * @importFromPackage templating\n */\nTemplate.registerHelper = Blaze.registerHelper;\n\n/**\n * @summary Removes a global [helper function](#Template-helpers).\n * @locus Client\n * @function\n * @param {String} name The name of the helper function you are defining.\n * @importFromPackage templating\n */\nTemplate.deregisterHelper = Blaze.deregisterHelper;\n"]},"sourceType":"module","hash":"ab02b733f4d39b457348893e02a1dcae36b62999"}
