{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"C:\\Users\\RUBEN\\Desktop\\meteor-vue\\packages\\matb33:collection-hooks\\upsert.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"packages/matb33:collection-hooks/upsert.js","filename":"C:\\Users\\RUBEN\\Desktop\\meteor-vue\\packages\\matb33:collection-hooks\\upsert.js","targets":{},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"C:\\Users\\RUBEN\\Desktop\\meteor-vue","root":"C:\\Users\\RUBEN\\Desktop\\meteor-vue","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.14.0","helpers":true,"useESModules":false,"corejs":false}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"C:\\Users\\RUBEN\\Desktop\\meteor-vue\\packages\\matb33:collection-hooks\\upsert.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/matb33:collection-hooks/upsert.js"}},"code":"let _objectSpread;\n\nmodule.link(\"@babel/runtime/helpers/objectSpread2\", {\n  default(v) {\n    _objectSpread = v;\n  }\n\n}, 0);\nlet EJSON;\nmodule.link(\"meteor/ejson\", {\n  EJSON(v) {\n    EJSON = v;\n  }\n\n}, 0);\nlet CollectionHooks;\nmodule.link(\"./collection-hooks\", {\n  CollectionHooks(v) {\n    CollectionHooks = v;\n  }\n\n}, 1);\n\nconst isEmpty = a => !Array.isArray(a) || !a.length;\n\nCollectionHooks.defineAdvice('upsert', function (userId, _super, instance, aspectGroup, getTransform, args, suppressAspects) {\n  args[0] = CollectionHooks.normalizeSelector(instance._getFindSelector(args));\n  const ctx = {\n    context: this,\n    _super,\n    args\n  };\n  let [selector, mutator, options, callback] = args;\n\n  if (typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n\n  const async = typeof callback === 'function';\n  let docs;\n  let docIds;\n  let abort;\n  const prev = {};\n\n  if (!suppressAspects) {\n    if (!isEmpty(aspectGroup.upsert.before) || !isEmpty(aspectGroup.update.after)) {\n      docs = CollectionHooks.getDocs.call(this, instance, selector, options).fetch();\n      docIds = docs.map(doc => doc._id);\n    } // copy originals for convenience for the 'after' pointcut\n\n\n    if (!isEmpty(aspectGroup.update.after)) {\n      if (aspectGroup.update.after.some(o => o.options.fetchPrevious !== false) && CollectionHooks.extendOptions(instance.hookOptions, {}, 'after', 'update').fetchPrevious !== false) {\n        prev.mutator = EJSON.clone(mutator);\n        prev.options = EJSON.clone(options);\n        prev.docs = {};\n        docs.forEach(doc => {\n          prev.docs[doc._id] = EJSON.clone(doc);\n        });\n      }\n    } // before\n\n\n    aspectGroup.upsert.before.forEach(o => {\n      const r = o.aspect.call(ctx, userId, selector, mutator, options);\n      if (r === false) abort = true;\n    });\n    if (abort) return {\n      numberAffected: 0\n    };\n  }\n\n  const afterUpdate = (affected, err) => {\n    if (!suppressAspects && !isEmpty(aspectGroup.update.after)) {\n      const fields = CollectionHooks.getFields(mutator);\n      const docs = CollectionHooks.getDocs.call(this, instance, {\n        _id: {\n          $in: docIds\n        }\n      }, options).fetch();\n      aspectGroup.update.after.forEach(o => {\n        docs.forEach(doc => {\n          o.aspect.call(_objectSpread({\n            transform: getTransform(doc),\n            previous: prev.docs && prev.docs[doc._id],\n            affected,\n            err\n          }, ctx), userId, doc, fields, prev.mutator, prev.options);\n        });\n      });\n    }\n  };\n\n  const afterInsert = (_id, err) => {\n    if (!suppressAspects && !isEmpty(aspectGroup.insert.after)) {\n      const doc = CollectionHooks.getDocs.call(this, instance, {\n        _id\n      }, selector, {}).fetch()[0]; // 3rd argument passes empty object which causes magic logic to imply limit:1\n\n      const lctx = _objectSpread({\n        transform: getTransform(doc),\n        _id,\n        err\n      }, ctx);\n\n      aspectGroup.insert.after.forEach(o => {\n        o.aspect.call(lctx, userId, doc);\n      });\n    }\n  };\n\n  if (async) {\n    const wrappedCallback = function (err, ret) {\n      if (err || ret && ret.insertedId) {\n        // Send any errors to afterInsert\n        afterInsert(ret.insertedId, err);\n      } else {\n        afterUpdate(ret && ret.numberAffected, err); // Note that err can never reach here\n      }\n\n      return CollectionHooks.hookedOp(function () {\n        return callback.call(this, err, ret);\n      });\n    };\n\n    return CollectionHooks.directOp(() => _super.call(this, selector, mutator, options, wrappedCallback));\n  } else {\n    const ret = CollectionHooks.directOp(() => _super.call(this, selector, mutator, options, callback));\n\n    if (ret && ret.insertedId) {\n      afterInsert(ret.insertedId);\n    } else {\n      afterUpdate(ret && ret.numberAffected);\n    }\n\n    return ret;\n  }\n});","map":{"version":3,"sources":["packages/matb33:collection-hooks/upsert.js"],"names":["_objectSpread","module","link","default","v","EJSON","CollectionHooks","isEmpty","a","Array","isArray","length","defineAdvice","userId","_super","instance","aspectGroup","getTransform","args","suppressAspects","normalizeSelector","_getFindSelector","ctx","context","selector","mutator","options","callback","async","docs","docIds","abort","prev","upsert","before","update","after","getDocs","call","fetch","map","doc","_id","some","o","fetchPrevious","extendOptions","hookOptions","clone","forEach","r","aspect","numberAffected","afterUpdate","affected","err","fields","getFields","$in","transform","previous","afterInsert","insert","lctx","wrappedCallback","ret","insertedId","hookedOp","directOp"],"mappings":"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","sourcesContent":["import { EJSON } from 'meteor/ejson'\nimport { CollectionHooks } from './collection-hooks'\n\nconst isEmpty = a => !Array.isArray(a) || !a.length\n\nCollectionHooks.defineAdvice('upsert', function (userId, _super, instance, aspectGroup, getTransform, args, suppressAspects) {\n  args[0] = CollectionHooks.normalizeSelector(instance._getFindSelector(args))\n\n  const ctx = { context: this, _super, args }\n  let [selector, mutator, options, callback] = args\n  if (typeof options === 'function') {\n    callback = options\n    options = {}\n  }\n\n  const async = typeof callback === 'function'\n  let docs\n  let docIds\n  let abort\n  const prev = {}\n\n  if (!suppressAspects) {\n    if (!isEmpty(aspectGroup.upsert.before) || !isEmpty(aspectGroup.update.after)) {\n      docs = CollectionHooks.getDocs.call(this, instance, selector, options).fetch()\n      docIds = docs.map(doc => doc._id)\n    }\n\n    // copy originals for convenience for the 'after' pointcut\n    if (!isEmpty(aspectGroup.update.after)) {\n      if (aspectGroup.update.after.some(o => o.options.fetchPrevious !== false) &&\n        CollectionHooks.extendOptions(instance.hookOptions, {}, 'after', 'update').fetchPrevious !== false) {\n        prev.mutator = EJSON.clone(mutator)\n        prev.options = EJSON.clone(options)\n\n        prev.docs = {}\n        docs.forEach((doc) => {\n          prev.docs[doc._id] = EJSON.clone(doc)\n        })\n      }\n    }\n\n    // before\n    aspectGroup.upsert.before.forEach((o) => {\n      const r = o.aspect.call(ctx, userId, selector, mutator, options)\n      if (r === false) abort = true\n    })\n\n    if (abort) return { numberAffected: 0 }\n  }\n\n  const afterUpdate = (affected, err) => {\n    if (!suppressAspects && !isEmpty(aspectGroup.update.after)) {\n      const fields = CollectionHooks.getFields(mutator)\n      const docs = CollectionHooks.getDocs.call(this, instance, { _id: { $in: docIds } }, options).fetch()\n\n      aspectGroup.update.after.forEach((o) => {\n        docs.forEach((doc) => {\n          o.aspect.call({\n            transform: getTransform(doc),\n            previous: prev.docs && prev.docs[doc._id],\n            affected,\n            err,\n            ...ctx\n          }, userId, doc, fields, prev.mutator, prev.options)\n        })\n      })\n    }\n  }\n\n  const afterInsert = (_id, err) => {\n    if (!suppressAspects && !isEmpty(aspectGroup.insert.after)) {\n      const doc = CollectionHooks.getDocs.call(this, instance, { _id }, selector, {}).fetch()[0] // 3rd argument passes empty object which causes magic logic to imply limit:1\n      const lctx = { transform: getTransform(doc), _id, err, ...ctx }\n\n      aspectGroup.insert.after.forEach((o) => {\n        o.aspect.call(lctx, userId, doc)\n      })\n    }\n  }\n\n  if (async) {\n    const wrappedCallback = function (err, ret) {\n      if (err || (ret && ret.insertedId)) {\n        // Send any errors to afterInsert\n        afterInsert(ret.insertedId, err)\n      } else {\n        afterUpdate(ret && ret.numberAffected, err) // Note that err can never reach here\n      }\n\n      return CollectionHooks.hookedOp(function () {\n        return callback.call(this, err, ret)\n      })\n    }\n\n    return CollectionHooks.directOp(() => _super.call(this, selector, mutator, options, wrappedCallback))\n  } else {\n    const ret = CollectionHooks.directOp(() => _super.call(this, selector, mutator, options, callback))\n\n    if (ret && ret.insertedId) {\n      afterInsert(ret.insertedId)\n    } else {\n      afterUpdate(ret && ret.numberAffected)\n    }\n\n    return ret\n  }\n})\n"]},"sourceType":"module","hash":"f103311768da613d0d0d09ba91a7fe9b8f932e96"}
