{"source":"__coffeescriptShare = typeof __coffeescriptShare === 'object' ? __coffeescriptShare : {}; var share = __coffeescriptShare;\nmodule.export({\n  PublishEndpoint: () => PublishEndpoint,\n  PublishMiddleware: () => PublishMiddleware\n});\n\nlet _;\n\nmodule.link(\"meteor/underscore\", {\n  _(v) {\n    _ = v;\n  }\n\n}, 0);\nlet Fiber;\nmodule.link(\"fibers\", {\n  default(v) {\n    Fiber = v;\n  }\n\n}, 1);\nvar MiddlewarePublish,\n    isInsideNoYieldsAllowed,\n    savedYield,\n    hasProp = {}.hasOwnProperty;\nsavedYield = Fiber.yield; // When inside Meteor._noYieldsAllowed Fiber.yield is overridden with\n// a function which throws an exception, so is not savedYield anymore.\n// Afterwards Fiber.yield is restored back to savedYield.\n\nisInsideNoYieldsAllowed = function () {\n  return Fiber.yield !== savedYield;\n};\n\nMiddlewarePublish = class MiddlewarePublish {\n  constructor(publish1) {\n    var key, ref, value;\n    this.publish = publish1; // We store those methods at construction time because\n    // we override them later on publish object.\n\n    this._publishAdded = this.publish.added.bind(this.publish);\n    this._publishChanged = this.publish.changed.bind(this.publish);\n    this._publishRemoved = this.publish.removed.bind(this.publish);\n    this._publishReady = this.publish.ready.bind(this.publish);\n    this._publishStop = this.publish.stop.bind(this.publish);\n    this._publishError = this.publish.error.bind(this.publish);\n    ref = this.publish;\n\n    for (key in ref) {\n      if (!hasProp.call(ref, key)) continue;\n      value = ref[key];\n\n      if (key !== 'added' && key !== 'changed' && key !== 'removed' && key !== 'ready' && key !== 'stop' && key !== 'error') {\n        this[key] = value;\n      }\n    }\n  }\n\n  added(...args) {\n    return this._publishAdded(...args);\n  }\n\n  changed(...args) {\n    return this._publishChanged(...args);\n  }\n\n  removed(...args) {\n    return this._publishRemoved(...args);\n  }\n\n  ready(...args) {\n    return this._publishReady(...args);\n  }\n\n  stop(...args) {\n    return this._publishStop(...args);\n  }\n\n  error(...args) {\n    return this._publishError(...args);\n  }\n\n};\nvar PublishEndpoint = class PublishEndpoint {\n  constructor(options, publishFunction) {\n    var self;\n    this.options = options;\n    this.publishFunction = publishFunction; // To pass null (autopublish) or string directly for name\n\n    if (this.options === null || _.isString(this.options)) {\n      this.options = {\n        name: this.options\n      };\n    }\n\n    this.middlewares = [];\n    self = this;\n    Meteor.publish(this.options.name, function (...args) {\n      var publish, state;\n      publish = this;\n      state = {};\n\n      publish.params = function () {\n        return args;\n      };\n\n      publish.set = function (key, value) {\n        return state[key] = value;\n      };\n\n      publish.get = function (key) {\n        return state[key];\n      };\n\n      return self.publish(self.middlewares, publish);\n    });\n  }\n\n  publish(middlewares, publish) {\n    var latestMiddleware, midlewarePublish, otherMiddlewares, publishRemoved;\n\n    if (middlewares.length) {\n      latestMiddleware = middlewares[middlewares.length - 1];\n      otherMiddlewares = middlewares.slice(0, middlewares.length - 1);\n      midlewarePublish = new MiddlewarePublish(publish);\n\n      publish.added = function (collection, id, fields) {\n        return latestMiddleware.added(midlewarePublish, collection, id, fields);\n      };\n\n      publish.changed = function (collection, id, fields) {\n        return latestMiddleware.changed(midlewarePublish, collection, id, fields);\n      };\n\n      publishRemoved = publish.removed;\n\n      publish.removed = function (collection, id) {\n        // When unsubscribing, Meteor removes all documents so this callback is called\n        // inside Meteor._noYieldsAllowed which means inside the callback no function\n        // which calls yield can be called. Because this is often not true, in that\n        // special case we are not going through middlewares but are directly calling\n        // original removed callback.\n        if (isInsideNoYieldsAllowed()) {\n          return publishRemoved.call(publish, collection, id);\n        } else {\n          return latestMiddleware.removed(midlewarePublish, collection, id);\n        }\n      };\n\n      publish.ready = function () {\n        return latestMiddleware.onReady(midlewarePublish);\n      };\n\n      publish.stop = function () {\n        return latestMiddleware.onStop(midlewarePublish);\n      };\n\n      publish.error = function (error) {\n        return latestMiddleware.onError(midlewarePublish, error);\n      };\n\n      return this.publish(otherMiddlewares, publish);\n    } else {\n      return this.publishFunction.apply(publish, publish.params());\n    }\n  }\n\n  use(middleware) {\n    if (!(middleware instanceof PublishMiddleware)) {\n      throw new Error(`Middleware '${middleware}' is not an instance of a PublishMiddleware class`);\n    }\n\n    return this.middlewares.push(middleware);\n  }\n\n};\nvar PublishMiddleware = class PublishMiddleware {\n  added(publish, collection, id, fields) {\n    return publish.added(collection, id, fields);\n  }\n\n  changed(publish, collection, id, fields) {\n    return publish.changed(collection, id, fields);\n  }\n\n  removed(publish, collection, id) {\n    return publish.removed(collection, id);\n  }\n\n  onReady(publish) {\n    return publish.ready();\n  }\n\n  onStop(publish) {\n    return publish.stop();\n  }\n\n  onError(publish, error) {\n    return publish.error(error);\n  }\n\n};","sourceMap":{"version":3,"sources":["/packages/peerlibrary_middleware/server.coffee","/server.coffee"],"names":["module","export","PublishEndpoint","PublishMiddleware","_","link","v","Fiber","default","MiddlewarePublish","isInsideNoYieldsAllowed","savedYield","hasProp","hasOwnProperty","yield","constructor","publish1","key","ref","value","publish","_publishAdded","added","bind","_publishChanged","changed","_publishRemoved","removed","_publishReady","ready","_publishStop","stop","_publishError","error","call","args","options","publishFunction","self","isString","name","middlewares","Meteor","state","params","set","get","latestMiddleware","midlewarePublish","otherMiddlewares","publishRemoved","length","slice","collection","id","fields","onReady","onStop","onError","apply","use","middleware","Error","push"],"mappings":"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","file":"packages/peerlibrary:middleware/server.coffee.map","sourcesContent":["import {_} from 'meteor/underscore'\nimport Fiber from 'fibers'\n\nsavedYield = Fiber.yield\n\n# When inside Meteor._noYieldsAllowed Fiber.yield is overridden with\n# a function which throws an exception, so is not savedYield anymore.\n# Afterwards Fiber.yield is restored back to savedYield.\nisInsideNoYieldsAllowed = ->\n  Fiber.yield isnt savedYield\n\nclass MiddlewarePublish\n  constructor: (@publish) ->\n    # We store those methods at construction time because\n    # we override them later on publish object.\n    @_publishAdded = @publish.added.bind @publish\n    @_publishChanged = @publish.changed.bind @publish\n    @_publishRemoved = @publish.removed.bind @publish\n    @_publishReady = @publish.ready.bind @publish\n    @_publishStop = @publish.stop.bind @publish\n    @_publishError = @publish.error.bind @publish\n\n    # We copy other fields as they are\n    for own key, value of @publish when key not in ['added', 'changed', 'removed', 'ready', 'stop', 'error']\n      @[key] = value\n\n  added: (args...) ->\n    @_publishAdded args...\n\n  changed: (args...) ->\n    @_publishChanged args...\n\n  removed: (args...) ->\n    @_publishRemoved args...\n\n  ready: (args...) ->\n    @_publishReady args...\n\n  stop: (args...) ->\n    @_publishStop args...\n\n  error: (args...) ->\n    @_publishError args...\n\nexport class PublishEndpoint\n  constructor: (@options, @publishFunction) ->\n    # To pass null (autopublish) or string directly for name\n    if @options is null or _.isString @options\n      @options =\n        name: @options\n\n    @middlewares = []\n\n    self = @\n\n    Meteor.publish @options.name, (args...) ->\n      publish = @\n\n      state = {}\n\n      publish.params = ->\n        args\n\n      publish.set = (key, value) ->\n        state[key] = value\n\n      publish.get = (key) ->\n        state[key]\n\n      self.publish self.middlewares, publish\n\n  publish: (middlewares, publish) ->\n    if middlewares.length\n      latestMiddleware = middlewares[middlewares.length - 1]\n      otherMiddlewares = middlewares[0...middlewares.length - 1]\n\n      midlewarePublish = new MiddlewarePublish publish\n\n      publish.added = (collection, id, fields) ->\n        latestMiddleware.added midlewarePublish, collection, id, fields\n\n      publish.changed = (collection, id, fields) ->\n        latestMiddleware.changed midlewarePublish, collection, id, fields\n\n      publishRemoved = publish.removed\n      publish.removed = (collection, id) ->\n        # When unsubscribing, Meteor removes all documents so this callback is called\n        # inside Meteor._noYieldsAllowed which means inside the callback no function\n        # which calls yield can be called. Because this is often not true, in that\n        # special case we are not going through middlewares but are directly calling\n        # original removed callback.\n        if isInsideNoYieldsAllowed()\n          publishRemoved.call publish, collection, id\n        else\n          latestMiddleware.removed midlewarePublish, collection, id\n\n      publish.ready = ->\n        latestMiddleware.onReady midlewarePublish\n\n      publish.stop = ->\n        latestMiddleware.onStop midlewarePublish\n\n      publish.error = (error) ->\n        latestMiddleware.onError midlewarePublish, error\n\n      @publish otherMiddlewares, publish\n    else\n      @publishFunction.apply publish, publish.params()\n\n  use: (middleware) ->\n    throw new Error \"Middleware '#{ middleware }' is not an instance of a PublishMiddleware class\" unless middleware instanceof PublishMiddleware\n\n    @middlewares.push middleware\n\nexport class PublishMiddleware\n  added: (publish, collection, id, fields) ->\n    publish.added collection, id, fields\n\n  changed: (publish, collection, id, fields) ->\n    publish.changed collection, id, fields\n\n  removed: (publish, collection, id) ->\n    publish.removed collection, id\n\n  onReady: (publish) ->\n    publish.ready()\n\n  onStop: (publish) ->\n    publish.stop()\n\n  onError: (publish, error) ->\n    publish.error error\n","var MiddlewarePublish, isInsideNoYieldsAllowed, savedYield,\n  hasProp = {}.hasOwnProperty;\n\nimport {\n  _\n} from 'meteor/underscore';\n\nimport Fiber from 'fibers';\n\nsavedYield = Fiber.yield;\n\n// When inside Meteor._noYieldsAllowed Fiber.yield is overridden with\n// a function which throws an exception, so is not savedYield anymore.\n// Afterwards Fiber.yield is restored back to savedYield.\nisInsideNoYieldsAllowed = function() {\n  return Fiber.yield !== savedYield;\n};\n\nMiddlewarePublish = class MiddlewarePublish {\n  constructor(publish1) {\n    var key, ref, value;\n    this.publish = publish1;\n    // We store those methods at construction time because\n    // we override them later on publish object.\n    this._publishAdded = this.publish.added.bind(this.publish);\n    this._publishChanged = this.publish.changed.bind(this.publish);\n    this._publishRemoved = this.publish.removed.bind(this.publish);\n    this._publishReady = this.publish.ready.bind(this.publish);\n    this._publishStop = this.publish.stop.bind(this.publish);\n    this._publishError = this.publish.error.bind(this.publish);\n    ref = this.publish;\n    for (key in ref) {\n      if (!hasProp.call(ref, key)) continue;\n      value = ref[key];\n      if (key !== 'added' && key !== 'changed' && key !== 'removed' && key !== 'ready' && key !== 'stop' && key !== 'error') {\n        this[key] = value;\n      }\n    }\n  }\n\n  added(...args) {\n    return this._publishAdded(...args);\n  }\n\n  changed(...args) {\n    return this._publishChanged(...args);\n  }\n\n  removed(...args) {\n    return this._publishRemoved(...args);\n  }\n\n  ready(...args) {\n    return this._publishReady(...args);\n  }\n\n  stop(...args) {\n    return this._publishStop(...args);\n  }\n\n  error(...args) {\n    return this._publishError(...args);\n  }\n\n};\n\nexport var PublishEndpoint = class PublishEndpoint {\n  constructor(options, publishFunction) {\n    var self;\n    this.options = options;\n    this.publishFunction = publishFunction;\n    // To pass null (autopublish) or string directly for name\n    if (this.options === null || _.isString(this.options)) {\n      this.options = {\n        name: this.options\n      };\n    }\n    this.middlewares = [];\n    self = this;\n    Meteor.publish(this.options.name, function(...args) {\n      var publish, state;\n      publish = this;\n      state = {};\n      publish.params = function() {\n        return args;\n      };\n      publish.set = function(key, value) {\n        return state[key] = value;\n      };\n      publish.get = function(key) {\n        return state[key];\n      };\n      return self.publish(self.middlewares, publish);\n    });\n  }\n\n  publish(middlewares, publish) {\n    var latestMiddleware, midlewarePublish, otherMiddlewares, publishRemoved;\n    if (middlewares.length) {\n      latestMiddleware = middlewares[middlewares.length - 1];\n      otherMiddlewares = middlewares.slice(0, middlewares.length - 1);\n      midlewarePublish = new MiddlewarePublish(publish);\n      publish.added = function(collection, id, fields) {\n        return latestMiddleware.added(midlewarePublish, collection, id, fields);\n      };\n      publish.changed = function(collection, id, fields) {\n        return latestMiddleware.changed(midlewarePublish, collection, id, fields);\n      };\n      publishRemoved = publish.removed;\n      publish.removed = function(collection, id) {\n        // When unsubscribing, Meteor removes all documents so this callback is called\n        // inside Meteor._noYieldsAllowed which means inside the callback no function\n        // which calls yield can be called. Because this is often not true, in that\n        // special case we are not going through middlewares but are directly calling\n        // original removed callback.\n        if (isInsideNoYieldsAllowed()) {\n          return publishRemoved.call(publish, collection, id);\n        } else {\n          return latestMiddleware.removed(midlewarePublish, collection, id);\n        }\n      };\n      publish.ready = function() {\n        return latestMiddleware.onReady(midlewarePublish);\n      };\n      publish.stop = function() {\n        return latestMiddleware.onStop(midlewarePublish);\n      };\n      publish.error = function(error) {\n        return latestMiddleware.onError(midlewarePublish, error);\n      };\n      return this.publish(otherMiddlewares, publish);\n    } else {\n      return this.publishFunction.apply(publish, publish.params());\n    }\n  }\n\n  use(middleware) {\n    if (!(middleware instanceof PublishMiddleware)) {\n      throw new Error(`Middleware '${middleware}' is not an instance of a PublishMiddleware class`);\n    }\n    return this.middlewares.push(middleware);\n  }\n\n};\n\nexport var PublishMiddleware = class PublishMiddleware {\n  added(publish, collection, id, fields) {\n    return publish.added(collection, id, fields);\n  }\n\n  changed(publish, collection, id, fields) {\n    return publish.changed(collection, id, fields);\n  }\n\n  removed(publish, collection, id) {\n    return publish.removed(collection, id);\n  }\n\n  onReady(publish) {\n    return publish.ready();\n  }\n\n  onStop(publish) {\n    return publish.stop();\n  }\n\n  onError(publish, error) {\n    return publish.error(error);\n  }\n\n};\n"]}}