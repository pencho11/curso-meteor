{"code":"module.exportDefault = function(value) { __vue_script__ = value; }; (function(){var UserLogged;\nmodule.link(\"../../components/UserLogged/UserLogged\", {\n  \"default\": function (v) {\n    UserLogged = v;\n  }\n}, 0);\nmodule.exportDefault({\n  name: \"HeaderView\",\n  components: {\n    UserLogged: UserLogged\n  },\n  data: function () {\n    return {\n      optionSelected: 0,\n      options: []\n    };\n  },\n  created: function () {\n    var _this = this;\n\n    Meteor.call('user.getSystemOptions', function (error, response) {\n      if (error) {\n        _this.$alert.showAlertSimple('error', error.response);\n      } else {\n        _this.options = response.data;\n\n        _this.updateSelectedOption();\n      }\n    });\n  },\n  watch: {\n    '$route': function () {\n      this.updateSelectedOption();\n    }\n  },\n  methods: {\n    goToView: function (option) {\n      this.$router.push({\n        name: option.routeName\n      });\n    },\n    updateSelectedOption: function () {\n      var _this2 = this;\n\n      var optionSelected = this.options.find(function (option) {\n        return option.routeName === _this2.$route.name;\n      });\n      this.optionSelected = optionSelected ? this.options.indexOf(optionSelected) : this.optionSelected;\n    }\n  }\n});\n})();","map":{"version":3,"sources":["imports/ui/layouts/shared/HeaderView.vue"],"names":["UserLogged","module","link","v","exportDefault","name","components","data","optionSelected","options","created","Meteor","call","error","response","$alert","showAlertSimple","updateSelectedOption","watch","methods","goToView","option","$router","push","routeName","find","$route","indexOf"],"mappings":";;;;;;qBAkBA;AACA,EAAA,IAAA,EAAA,YADA;AAEA,EAAA,UAAA,EAAA;AACA,IAAA,UAAA,EAAA;AADA,GAFA;AAKA,EAAA,IALA,cAKA;AACA,WAAA;AACA,MAAA,cAAA,EAAA,CADA;AAEA,MAAA,OAAA,EAAA;AAFA,KAAA;AAIA,GAVA;AAWA,EAAA,OAXA,cAWA;AAAA;;AACA,IAAA,MAAA,CAAA,IAAA,CAAA,uBAAA,EAAA,UAAA,KAAA,EAAA,QAAA,EAAA;AACA,UAAA,KAAA,EAAA;AACA,QAAA,KAAA,CAAA,MAAA,CAAA,eAAA,CAAA,OAAA,EAAA,KAAA,CAAA,QAAA;AACA,OAFA,MAEA;AACA,QAAA,KAAA,CAAA,OAAA,GAAA,QAAA,CAAA,IAAA;;AACA,QAAA,KAAA,CAAA,oBAAA;AACA;AACA,KAPA;AAQA,GApBA;AAqBA,EAAA,KAAA,EAAA;AACA,YADA,cACA;AACA,WAAA,oBAAA;AACA;AAHA,GArBA;AA0BA,EAAA,OAAA,EAAA;AACA,IAAA,QADA,YACA,MADA,EACA;AACA,WAAA,OAAA,CAAA,IAAA,CAAA;AAAA,QAAA,IAAA,EAAA,MAAA,CAAA;AAAA,OAAA;AACA,KAHA;AAIA,IAAA,oBAJA,cAIA;AAAA;;AACA,UAAA,cAAA,GAAA,KAAA,OAAA,CAAA,IAAA,CAAA,UAAA,MAAA;AAAA,eAAA,MAAA,CAAA,SAAA,KAAA,MAAA,CAAA,MAAA,CAAA,IAAA;AAAA,OAAA,CAAA;AACA,WAAA,cAAA,GAAA,cAAA,GAAA,KAAA,OAAA,CAAA,OAAA,CAAA,cAAA,CAAA,GAAA,KAAA,cAAA;AACA;AAPA;AA1BA","sourcesContent":["<template>\r\n    <v-app-bar app dark dense src=\"https://cdn.vuetifyjs.com/images/backgrounds/vbanner.jpg\">\r\n        <v-toolbar-title>Scaffold Meteor + Vue</v-toolbar-title>\r\n        <v-spacer></v-spacer>\r\n        <user-logged></user-logged>\r\n        <template v-slot:extension>\r\n            <v-tabs v-model=\"optionSelected\" align-with-title>\r\n                <v-tab v-for=\"option in options\" :key=\"option.title\" @click=\"goToView(option)\"      \r\n                        v-text=\"option.title\">\r\n                </v-tab>\r\n            </v-tabs>\r\n        </template>\r\n    </v-app-bar>\r\n</template>\r\n\r\n<script>\r\n    import UserLogged from '../../components/UserLogged/UserLogged';\r\n    \r\n    export default {\r\n        name: \"HeaderView\",\r\n        components: {\r\n            UserLogged\r\n        },\r\n        data() {\r\n            return {\r\n                optionSelected: 0,\r\n                options: []\r\n            }\r\n        },\r\n        created() {\r\n            Meteor.call('user.getSystemOptions', (error, response) => {\r\n                if (error) {\r\n                    this.$alert.showAlertSimple('error', error.response);\r\n                } else {\r\n                    this.options = response.data;\r\n                    this.updateSelectedOption(); \r\n                }\r\n            })\r\n        },\r\n        watch: {\r\n            '$route'() {\r\n                this.updateSelectedOption();\r\n            }\r\n        },\r\n        methods: {\r\n            goToView(option) {\r\n                this.$router.push({name: option.routeName});\r\n            },\r\n            updateSelectedOption() {\r\n                const optionSelected = this.options.find(option => option.routeName === this.$route.name);\r\n                this.optionSelected = optionSelected ? this.options.indexOf(optionSelected) : this.optionSelected;\r\n            }\r\n        },\r\n    }\r\n</script>\r\n\r\n<style>\r\n\r\n</style>"],"file":"imports/ui/layouts/shared/HeaderView.vue"},"styles":[{"css":"\n\n","map":{"version":3,"sources":[],"names":[],"mappings":"","file":"HeaderView.vue"}}],"template":"\n<v-app-bar app dark dense src=\"https://cdn.vuetifyjs.com/images/backgrounds/vbanner.jpg\">\n    <v-toolbar-title>Scaffold Meteor + Vue</v-toolbar-title>\n    <v-spacer></v-spacer>\n    <user-logged></user-logged>\n    <template v-slot:extension>\n        <v-tabs v-model=\"optionSelected\" align-with-title>\n            <v-tab v-for=\"option in options\" :key=\"option.title\" @click=\"goToView(option)\"      \n                    v-text=\"option.title\">\n            </v-tab>\n        </v-tabs>\n    </template>\n</v-app-bar>\n","hash":"data-v-f98446a6"}